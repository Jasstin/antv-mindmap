{"version":3,"file":"mxs-mindmap.umd.js","sources":["../src/components/Mindmap/utils.ts","../src/components/Mindmap/variable.ts","../src/components/Mindmap/data/index.ts","../src/components/Mindmap/data/history.ts","../src/components/Mindmap/editInput.ts","../node_modules/mitt/dist/mitt.mjs","../src/components/Mindmap/mitt.ts","../src/components/Mindmap/tree/clipboard.ts","../src/components/Mindmap/tree/methods.ts","../src/components/Mindmap/tree/hotkeys.ts","../src/components/Mindmap/menu.ts","../src/components/Mindmap/plugins.ts","../node_modules/color-name/index.js","../node_modules/is-arrayish/index.js","../node_modules/simple-swizzle/index.js","../node_modules/color-string/index.js","../node_modules/color-convert/conversions.js","../node_modules/color-convert/route.js","../node_modules/color-convert/index.js","../node_modules/color/index.js","../src/components/Mindmap/tree/registerNode.ts","../src/components/Mindmap/tree/registerBehavior.ts","../src/components/Mindmap/tree/tree.ts","../plugin-vue:export-helper","../src/components/Mindmap/MindMap.vue"],"sourcesContent":["import G6 from \"@antv/g6\";\n\n/**\n * 文本超出显示……\n * **/\nexport const fittingString = (str: string, maxWidth: number, fontSize: number) => {\n  const ellipsis = '...';\n  const ellipsisLength = G6.Util.getTextSize(ellipsis, fontSize)[0];\n  let currentWidth = 0;\n  let res = str;\n  const pattern = new RegExp('[\\u4E00-\\u9FA5]+'); // distinguish the Chinese charactors and letters\n  str.split('').forEach((letter, i) => {\n    if (currentWidth > maxWidth - ellipsisLength) return;\n    if (pattern.test(letter)) {\n      // Chinese charactors\n      currentWidth += fontSize;\n    } else {\n      // get the width of single letter according to the fontSize\n      currentWidth += G6.Util.getLetterWidth(letter, fontSize);\n    }\n    if (currentWidth > maxWidth - ellipsisLength) {\n      res = `${str.substr(0, i)}${ellipsis}`;\n    }\n  });\n  return res;\n};\n/**\n * 文本超出换行\n * */\nexport const wrapString = (str: string, maxWidth: number, fontSize: number): { line: number, text: string, width: number } => {\n  let currentWidth = 0;\n  const pattern = new RegExp('[\\u4E00-\\u9FA5]+'); // distinguish the Chinese charactors and letters\n  const lineGroup = []\n  let firstIndex = 0\n  let rowWidth = 0\n  str = str.replace(/\\s/g, '')\n  str.split('').forEach((letter, i, array) => {\n    if (pattern.test(letter)) {\n      // Chinese charactors\n      currentWidth += fontSize;\n    } else {\n      // get the width of single letter according to the fontSize\n      currentWidth += G6.Util.getLetterWidth(letter, fontSize);\n    }\n    if (currentWidth > maxWidth) {\n      if (currentWidth > rowWidth) {\n        rowWidth = currentWidth\n      }\n      lineGroup.push(str.slice(firstIndex, i))\n      currentWidth = 0;\n      firstIndex = i\n    } else if (i === array.length - 1) {\n      if (currentWidth > rowWidth) {\n        rowWidth = currentWidth\n      }\n      lineGroup.push(str.slice(firstIndex, i + 1))\n    }\n  });\n  return { line: lineGroup.length, text: lineGroup.join('\\n'), width: Math.ceil(rowWidth) }\n};\nwindow.wrapString = wrapString\n","import { ref } from \"vue\";\nimport { TreeGraph } from \"@antv/g6\";\nimport { INode } from \"@antv/g6-core/lib/interface/item\";\n\nexport const themeColor = ref('rgb(19, 128, 255)')\nexport const changeThemeColor = (val: string) => themeColor.value = val\nexport const themeColor_sub = ref('rgb(245,245,245)')\nexport const changeSubThemeColor = (val: string) => themeColor_sub.value = val\nexport const themeColor_leaf = ref('transparent')\nexport const changeLeafThemeColor = (val: string) => themeColor_leaf.value = val\nexport const fontColor_root = ref('#ffffff') // 字体颜色\nexport const changeRootFontColor = (val: string) => fontColor_root.value = val\nexport const fontColor_sub = ref('#333') // 字体颜色\nexport const changeSubFontColor = (val: string) => fontColor_sub.value = val\nexport const fontColor_leaf = ref('#333') // 字体颜色\nexport const changeLeafFontColor = (val: string) => fontColor_leaf.value = val\nexport const branch = ref(2) // 线条宽度\nexport const changeBranch = (val: number) => branch.value = val\nexport const branchColor = ref('rgb(19, 128, 255)') // 线条颜色\nexport const changeBranchColor = (val: string) => branchColor.value = val\nexport const timetravel = ref(false) // 显示历史操作栈\nexport const changeTimetravel = (val: boolean) => timetravel.value = val\nexport const downloadBtn = ref(false)\nexport const changeDownloadBtn = (val: boolean) => downloadBtn.value = val\nexport const fitBtn = ref(false)\nexport const changeFitBtn = (val: boolean) => fitBtn.value = val\nexport const centerBtn = ref(false)\nexport const changeCenterBtn = (val: boolean) => centerBtn.value = val\nexport const scaleRatio = ref(1)\nexport const changeScaleRatio = (val: number) => scaleRatio.value = val\nexport const radius = 4\nexport const paddingH = 10\nexport const paddingV = 10\nexport const maxFontCount = 12 // 最多显示字个数\nexport const globalFontSize = [16, 14, 12] // 字体大小\nexport const nodeMenuList = ref([]) // 节点右键菜单列表\nexport const changeNodeMenuList = (val: []) => nodeMenuList.value = val\nexport const currentNode = ref<INode | null>(null) // 当前选中的节点\nexport const setCurrentNode = (val: INode) => currentNode.value = val\nexport const globalTree = ref<TreeGraph | null>(null) // 树实例\nexport const setGlobalTree = (val: TreeGraph) => globalTree.value = val\nexport const lineType = ref<string>('cubic-horizontal')\nexport const setLineType = (val: string) => lineType.value = val\nexport const isCurrentEdit = ref<boolean>(false)\nexport const setIsCurrentEdit = (val: boolean) => isCurrentEdit.value = val\nexport const placeholderText = '新建模型'\nexport const isDragging = ref<boolean>(false)\nexport const setIsDragging = (val: boolean) => isDragging.value = val","import { InputData, NodeData } from \"../interface\";\nimport { fittingString, wrapString } from \"../utils\";\nimport { globalFontSize, maxFontCount, paddingH, paddingV, themeColor_sub, themeColor, themeColor_leaf, fontColor_sub, fontColor_leaf, fontColor_root, placeholderText } from \"../variable\";\nconst buildNodeStyle = (name, desc = \"\", content = \"\", depth) => {\n  const fontSize = globalFontSize[depth] || 12;\n  const size = fontSize * maxFontCount + paddingH * 2; // 节点最多显示12个字\n  const { text: wrapName, line: nameLine, width: nameWidth } = wrapString(name, size, fontSize); // 标题换行\n  const { text: wrapDesc, line: descLine, width: descWidth } = wrapString(desc, size, fontSize - 2); // 描述换行\n  const nameHeight = (fontSize + paddingV) * (nameLine) + paddingV; // 标题高度\n  const descHeight = (fontSize - 2 + paddingV) * (descLine) + paddingV; // 描述内容高度\n  const height = nameHeight + (desc ? descHeight : 0) // 节点高度\n  const FillColor = [themeColor.value, themeColor_sub.value, themeColor_leaf.value][depth] || themeColor_leaf.value\n  const FontColor = [fontColor_root.value, fontColor_sub.value, fontColor_leaf.value][depth] || fontColor_leaf.value\n  const obj = {\n    label: wrapName,\n    name: wrapName,\n    fullName: name,\n    fontSize,\n    desc: wrapDesc,\n    descFontSize: fontSize - 2,\n    descHeight,\n    content,\n    width: Math.max(nameWidth, descWidth) + paddingV * 2, //  标题宽度与描述宽度取最大值\n    height,\n    nameHeight,\n    FillColor,\n    FontColor,\n    type: ['dice-mind-map-root', 'dice-mind-map-sub'][depth] || 'dice-mind-map-leaf',\n  }\n  return obj\n}\nclass IMData {\n  data: NodeData | null = null\n  _data: NodeData | any[] = []\n  _selectNode: NodeData | null = null\n\n  private createMdataFromData(rawData: InputData | NodeData, id: string, parent: NodeData | null = null, isInit = false): NodeData {\n    const {\n      label,\n      name,\n      desc,\n      content,\n      children: rawChildren,\n      _children: _rawChildren,\n      collapse,\n      isSubView\n    } = rawData\n    const depth = parent ? parent.depth + 1 : 0\n    const data: NodeData = {\n      id,\n      depth,\n      desc,\n      content,\n      isSubView: isSubView || false,\n      collapse: collapse || false,\n      parentId: parent?.id ?? '0',\n      type: ['dice-mind-map-root', 'dice-mind-map-sub'][depth] || 'dice-mind-map-leaf',\n      isCurrentSelected: false,\n      isCurrentEdit: false,\n      children: [],\n      _children: [],\n      ...buildNodeStyle(name, desc, content, depth)\n    }\n    if (isInit) {\n      data.rawData = rawData\n    } else {\n      data.rawData = rawData?.rawData\n    }\n    if (rawChildren) {\n      rawChildren.filter(t => !t.destroyed).forEach((c, j) => {\n        data?.children?.push(this.createMdataFromData(c, `${id}-${j}`, data, isInit))\n      })\n    }\n    if (_rawChildren) {\n      _rawChildren.filter(t => !t.destroyed).forEach((c, j) => {\n        data?._children?.push(this.createMdataFromData(c, `${id}-${j}`, data, isInit))\n      })\n    }\n    if (collapse) {\n      [data._children, data.children] = [data.children, data._children]\n    }\n    return data\n  }\n\n  init(d: InputData, isInit = false) {\n    this.data = this.createMdataFromData(d, '0', null, isInit)\n    return this.data\n  }\n\n  find(id: string): NodeData | null { // 根据id找到数据\n    const array = id.split('-').map(n => ~~n)\n    let data = this.data\n    if (!data) return null\n    for (let i = 1; i < array.length; i++) {\n      const index = array[i]\n      const { children } = data as NodeData\n      if (index < children.length) {\n        data = children[index]\n      } else { // No data matching id\n        return null\n      }\n    }\n    return data?.id === id ? data : null\n  }\n\n  /**\n   * 展开或折叠(expand or collapse)\n   */\n  eoc(id: string, collapse: boolean): NodeData | null {\n    const d = this.find(id)\n    if (d) {\n      d.collapse = collapse;\n      [d._children, d.children] = [d.children, d._children]\n    }\n    return d\n  }\n\n  expand(id: string): NodeData | null {\n    return this.eoc(id, false)\n  }\n\n  collapse(id: string): NodeData | null {\n    return this.eoc(id, true)\n  }\n\n  /**\n   * 支持传入单节点、带有子级的节点\n   * */\n  add(id: string, rawData: string | InputData): NodeData | null {\n    const p = this.find(id)\n    if (p) {\n      if (p.collapse) {\n        this.expand(id)\n      }\n      if (!p.children) {\n        p.children = []\n      }\n      let name, desc, content, children, _children;\n      if (typeof rawData === 'string') {\n        name = rawData\n      } else {\n        name = rawData.name || rawData.label\n        desc = rawData.desc\n        content = rawData.content\n        children = rawData.children\n        _children = rawData._children\n      }\n      const depth = p ? p.depth + 1 : 0\n      name = name === '' ? placeholderText : name;\n      const data: NodeData = {\n        id: `${id}-${p.children.length}`,\n        depth,\n        desc,\n        content,\n        parentId: id,\n        collapse: false,\n        isSubView: false,\n        rawData: typeof rawData === 'string' ? {} : rawData.rawData ? rawData.rawData : rawData,\n        isCurrentSelected: false,\n        isCurrentEdit: false,\n        children: [],\n        _children: [],\n        ...buildNodeStyle(name, desc, content, depth)\n      }\n      if (children || _children) {\n        children.forEach((item, i) => {\n          data?.children?.push(this.createMdataFromData(item, `${data.id}-${i}`, data))\n        })\n        _children.forEach((item, i) => {\n          data?.children?.push(this.createMdataFromData(item, `${data.id}-${i}`, data))\n        })\n      }\n      p.children.push(data)\n      return data\n    }\n    return null\n  }\n\n  addSibling(id: string, rawData: string | InputData, before = false): NodeData | null {\n    const d = this.find(id)\n    if (d && d.parentId) {\n      const index = parseInt(id.split('-').pop() as string, 10)\n      const start = before ? index : index + 1\n      const depth = d ? d.depth : 1\n      let name, desc, content;\n      if (typeof rawData === 'string') {\n        name = rawData;\n      } else {\n        name = rawData.name\n        desc = rawData.desc\n        content = rawData.content\n      }\n      name = name === '' ? placeholderText : name;\n      const sibling: NodeData = {\n        id: `${d.parentId}-${start}`,\n        depth,\n        desc,\n        content,\n        collapse: false,\n        isSubView: false,\n        parentId: d.parentId,\n        rawData: typeof rawData === 'string' ? {} : rawData.rawData ? rawData.rawData : rawData,\n        isCurrentSelected: false,\n        isCurrentEdit: false,\n        children: [],\n        _children: [],\n        ...buildNodeStyle(name, desc, content, depth)\n      }\n      const parent: NodeData | null = this.find(d.parentId);\n      parent?.children.splice(start, 0, sibling)\n      parent?.children.forEach((item: NodeData, index: number) => item.id = `${parent.id}-${index}`)\n      return sibling\n    }\n    return null\n  }\n\n  addParent(id: string, rawData: string | InputData): NodeData | null {\n    const d = this.find(id)\n    if (d && d.parentId) {\n      const p = this.find(d.parentId)\n      const index = parseInt(id.split('-').pop() as string, 10)\n      const depth = d ? d.depth : 1\n      const fontSize = globalFontSize[depth] || 12;\n      const size = fontSize * maxFontCount + paddingH * 2; // 节点最多显示12个字\n      let name, desc, content;\n      const parentId = d.parentId\n      if (typeof rawData === 'string') {\n        name = rawData;\n      } else {\n        name = rawData.name\n        desc = rawData.desc\n        content = rawData.content\n      }\n      name = name === '' ? placeholderText : name;\n      const parent: NodeData = {\n        id,\n        depth,\n        desc,\n        content,\n        parentId,\n        collapse: false,\n        isSubView: false,\n        rawData: typeof rawData === 'string' ? {} : rawData.rawData ? rawData.rawData : rawData,\n        isCurrentSelected: false,\n        isCurrentEdit: false,\n        children: [],\n        _children: [],\n        ...buildNodeStyle(name, desc, content, depth)\n      }\n      p?.children.splice(index, 1, parent)\n      parent.children.push(this.createMdataFromData(d, id + '-0', parent))\n      return parent\n    }\n    return null\n  }\n\n  /**\n   * 删除节点及其所有子节点 支持逻辑删除与物理删除\n   * 逻辑删除： 在数据中，被打上destroyed的标识，会在下一次重置数据的时候删除 应用场景听：moveData 先逻辑删除再物理删除\n   * 物理删除： 本次操作就将数据删除掉\n   * */\n  removeItem(id: string, real = true) {\n    const d = this.find(id)\n    if (d) {\n      const p = this.find(d.parentId)\n      if (!p) return\n      p.children.forEach(d => {\n        if (d.id === id) {\n          d.destroyed = true\n        }\n      })\n    }\n    if (real) {\n      this.init(this.data)\n    }\n  }\n\n  removeOneItem(id: string) {\n    const d = this.find(id)\n    if (d) {\n      const p = this.find(d.parentId)\n      if (!p) return\n      p.children = p.children.filter(t => t.id !== id)\n      if (d.children) {\n        const _pI = id.split(p.id + '-')[1];\n        d.children.forEach((item, index) => {\n          p.children.splice(+_pI, 0, this.createMdataFromData(item, p.id + '-' + index, p))\n        })\n      }\n      p.children.forEach((t, i) => t.id = `${p.id}-${i}`)\n    }\n  }\n\n  onlyShowCurrent(id: string) {\n    const d = this.find(id)\n    if (d) {\n      if (d.collapse) {\n        this.expand(id)\n      }\n      this._data.push(this.data)\n      d.isSubView = true\n      this.data = this.createMdataFromData(d, '0')\n    }\n  }\n\n  update(id: string, data: string | { name?: string, desc?: string, isCurrentSelected?: boolean, isCurrentEdit?: boolean }) {\n    let d = this.find(id)\n    if (!d) return\n    let name, desc, isCurrentSelect, isCurrentEdit;\n    if (typeof data !== 'string') {\n      if (data.isCurrentSelected) {\n        this._selectNode && (this._selectNode.isCurrentSelected = false)\n        this._selectNode = d;\n      }\n      name = data?.name ?? d.fullName\n      desc = data?.desc ?? d.desc\n      isCurrentSelect = data?.isCurrentSelected ?? d.isCurrentSelected\n      isCurrentEdit = data?.isCurrentEdit ?? d.isCurrentEdit\n    } else {\n      name = data;\n    }\n    Object.assign(d, buildNodeStyle(name, desc, d.content, d.depth), { name, isCurrentSelected: isCurrentSelect, isCurrentEdit })\n    console.log(this.data, \"dData\")\n  }\n\n  backParent() {\n    let _data = this._data.pop()\n    // Todo:合并最新的改动\n    this.data = _data\n  }\n\n  moveData(pid: string, id: string, index: number) {\n    let data = this.find(id);\n    const p = this.find(pid);\n    let isSibling = data.parentId === pid\n    if (p.collapse) {\n      this.expand(pid)\n    }\n    if (data.collapse) {\n      this.expand(id)\n    }\n    if (!isSibling) {\n      this.removeItem(id, false);\n    }\n    if (p.children.length) {\n      let _data = [...p.children.filter(node => node.id != id)]\n      p.children = []\n      _data.splice(index, 0, data)\n      _data.forEach((item, index) => p.children.push(this.createMdataFromData(item, p.id + '-' + index, p)))\n    } else {\n      this.add(pid, data)\n    }\n    // 重新梳理id\n    this.init(this.data)\n  }\n}\n\nexport default new IMData()\n","import {NodeData} from \"../interface\";\n\nclass History {\n    data: NodeData[] | [] = []\n    index: number = 0\n\n    push(data: NodeData) {\n        (this.data as NodeData[]).push(data)\n        this.index = this.data.length - 1\n    }\n\n    goBack(n: number = 1) {\n        this.index--\n        if (this.index <= 0) this.index = 0\n        let data = this.data[this.index]\n        return data\n    }\n\n    forword(n: number = 1) {\n        this.index++\n        if (this.index >= this.data.length - 1) this.index = this.data.length - 1\n        let data = this.data[this.index]\n        return data\n    }\n}\n\nexport default new History()\n","import { fontColor_leaf, fontColor_root, fontColor_sub, maxFontCount, paddingH, paddingV, themeColor, themeColor_leaf, themeColor_sub, placeholderText } from \"./variable\";\n\nclass EditInput {\n  _input: HTMLInputElement | null = null\n  _fontSize: number = 0\n  _height: number = 0\n  _ratio: number = 1\n  _lineHeight = 12\n  _width = 0\n  _id: string\n\n  init(id: string) {\n    this._input = document.getElementById(id) as HTMLInputElement\n    this._id = id\n    this.bindEvent()\n  }\n\n  showInput(x: number, y: number, width: number, height: number, name: string, fontSize: number, type: string, radius: number, ratio: number) {\n    if (!this._input) {\n      this.init(this._id)\n      if (!this._input) return\n    };\n    let NodeInput = this._input;\n    this._fontSize = fontSize\n    this._height = height\n    this._ratio = ratio;\n    this._width = width + 4 * ratio;\n    this._lineHeight = fontSize + paddingV * ratio * 2;\n    NodeInput.style.display = 'block'\n    NodeInput.style.position = 'fixed';\n    NodeInput.style.top = y + 'px';\n    NodeInput.style.left = x + 'px';\n    NodeInput.style.width = width + 4 * ratio + 'px';\n    NodeInput.style.height = height + 4 * ratio + 'px';\n    NodeInput.style.border = `${2 * ratio}px solid`;\n    NodeInput.style.boxSizing = 'border-box';\n    NodeInput.innerText = placeholderText === name ? \"\" : name\n    NodeInput.style.fontSize = fontSize + 'px'\n    NodeInput.style.textAlign = 'left'\n    NodeInput.style.paddingTop = paddingV / 2 * ratio + 'px'\n    NodeInput.style.paddingLeft = paddingH * ratio + 'px'\n    NodeInput.style.lineHeight = (fontSize + paddingV) * ratio + 'px'\n    NodeInput.style.borderRadius = radius + 'px'\n    NodeInput.style.zIndex = '1'\n    NodeInput.style.overflow = 'hidden'\n    NodeInput.style.resize = 'none'\n    NodeInput.style.outline = 'none';\n    NodeInput.style.fontWeight = \"600\";\n    document.body.style['--placeholderText'] = placeholderText\n    if (name === placeholderText) {\n      NodeInput.classList.add(\"empty\")\n    }\n    if (name === '') {\n      NodeInput.style.width = '120px';\n    }\n    if (type === 'dice-mind-map-root') {\n      NodeInput.style.color = fontColor_root.value\n      NodeInput.style.background = themeColor.value\n      NodeInput.style.borderColor = themeColor.value;\n    } else if (type === 'dice-mind-map-sub') {\n      NodeInput.style.color = fontColor_sub.value\n      NodeInput.style.background = themeColor_sub.value\n      NodeInput.style.borderColor = themeColor_sub.value;\n    } else if (type === 'dice-mind-map-leaf') {\n      NodeInput.style.color = fontColor_leaf.value\n      NodeInput.style.background = themeColor_leaf.value\n      NodeInput.style.borderColor = themeColor.value;\n    }\n    let timer = setTimeout(() => {\n      NodeInput.focus()\n      clearTimeout(timer)\n    }, 100)\n  }\n\n  changeLength(ev: Event) {\n    let input = ev.target as HTMLInputElement\n    let row = input.innerText.split('\\n').sort((a, b) => b.length - a.length);\n    let lineWidth = row[0].replace(/[^\\x00-\\xff]/g, \"00\").length;\n    if (lineWidth > 30) lineWidth = 30;\n    let width = lineWidth * this._fontSize / 2 + paddingH * 2;\n    width = width + 4 * this._ratio;\n    input.style.width = `${Math.max(width, this._width)}px`\n    input.style.height = `${Math.max(input.scrollHeight, this._height + 5)}px`\n    if (input.innerText.length > 0) {\n      input.classList.remove(\"empty\")\n    } else {\n      input.classList.add(\"empty\")\n    }\n  }\n\n  bindEvent() {\n    if (!this._input) return\n    this._input.addEventListener('input', this.changeLength.bind(this))\n    this._input.addEventListener('blur', () => {\n      this.handleInputBlur(this._input.innerText)\n    })\n    this._input.addEventListener('keydown', (ev) => {\n      if (ev.key === 'Enter' && !ev.shiftKey) {\n        let input = ev.target as HTMLInputElement\n        this.handleInputBlur.call(this, input.innerText)\n      }\n    })\n  }\n\n  hideInput() {\n    this._input.style.display = 'none'\n  }\n\n  handleInputBlur(name: string) {\n    //    methods 将会重写，用来更新节点数据\n  }\n}\n\nexport default new EditInput()\n","export default function(n){return{all:n=n||new Map,on:function(t,e){var i=n.get(t);i?i.push(e):n.set(t,[e])},off:function(t,e){var i=n.get(t);i&&(e?i.splice(i.indexOf(e)>>>0,1):n.set(t,[]))},emit:function(t,e){var i=n.get(t);i&&i.slice().map(function(n){n(e)}),(i=n.get(\"*\"))&&i.slice().map(function(n){n(t,e)})}}}\n//# sourceMappingURL=mitt.mjs.map\n","import mitt from 'mitt'\n\nconst emitter = mitt()\nexport default emitter\n","import {ref} from \"vue\";\n\nlet dataArr = ref([])\n\nexport const pushData = (data) => {\n    dataArr.value.push(data)\n}\n\nexport const popData = () => {\n    return dataArr.value.pop()\n}\n","import IMData from '../data/index'\nimport { InputData, NodeData } from \"../interface\";\nimport { globalTree, radius, setIsCurrentEdit, themeColor } from \"../variable\";\nimport { TreeGraph } from \"@antv/g6\";\nimport History from \"../data/history\";\nimport EditInput from \"../editInput\";\nimport { INode } from \"@antv/g6-core/lib/interface/item\";\nimport emitter from '../mitt'\nimport { pushData, popData } from \"./clipboard\";\n\n/***\n * data 为History栈里面的历史数据\n */\nexport const rePaint = (stack = true) => {\n  let tree: TreeGraph | null = globalTree.value as TreeGraph\n  if (!IMData.data) return\n  tree?.data(IMData.data)\n  if (stack) {\n    History.push(IMData.data)\n  }\n  tree?.layout()\n}\nexport const addData = (id: string, rawData: string | InputData, editNow = true) => {\n  let data = IMData.add(id, rawData)\n  rePaint()\n  emitter.emit('onAdd', data)\n  if (editNow) {\n    if (data) edit(data.id)\n  }\n}\nexport const addParent = (id: string, rawData: string | InputData, editNow = true) => {\n  let data = IMData.addParent(id, rawData)\n  rePaint()\n  if (editNow) {\n    if (data) edit(data.id)\n  }\n}\nexport const addSibling = (id: string, rawData: string | InputData, editNow = true) => {\n  let data = IMData.addSibling(id, rawData)\n  rePaint()\n  if (editNow) {\n    if (data) edit(data.id)\n  }\n}\nexport const edit = (id: string) => {\n  const Tree = globalTree.value\n  const NodeData = Tree?.findById(id) as INode\n  if (!NodeData || !Tree) return\n  const { x: pointX, y: pointY } = NodeData._cfg?.bboxCache\n  const { name, type, fontSize, width, height } = NodeData._cfg?.model as NodeData\n  let ratio = Tree.getZoom()\n  let { x, y } = Tree.getClientByPoint(pointX, pointY)\n  setIsCurrentEdit(true)\n  update(id, { isCurrentEdit: true })\n  EditInput.showInput(x, y, width * ratio, height * ratio, name, fontSize * ratio, type, radius * ratio, ratio)\n  EditInput.handleInputBlur = (name: string) => {\n    console.log(name)\n    emitter.emit('onAfterEdit', name.replace(/\\s/g, ''));\n    let _name = name.replace(/\\s/g, '');\n    update(id, _name === '' ? NodeData.get('model').name : _name)\n    Tree.off('wheelzoom')\n    EditInput.hideInput()\n    let timer = setTimeout(() => {\n      setIsCurrentEdit(false);\n      update(id, { isCurrentEdit: false })\n      cancelAllSelect()\n      clearTimeout(timer)\n    }, 500)\n  }\n  Tree.on('wheelzoom', () => {\n    ratio = Tree.getZoom()\n    let { x, y } = Tree.getClientByPoint(pointX, pointY)\n    EditInput.showInput(x, y, width * ratio, height * ratio, name, fontSize * ratio, type, radius * ratio, ratio)\n  })\n}\nexport const update = (id: string, name: any) => {\n  if (typeof name === 'string') {\n    IMData.update(id, { name })\n  } else {\n    IMData.update(id, name)\n  }\n  selectNode(id, true)\n}\nexport const selectNode = (id: string, selected: boolean) => {\n  let tree: TreeGraph | null = globalTree.value as TreeGraph\n  if (IMData._selectNode && tree.findDataById(IMData._selectNode.id)) {\n    tree.setItemState(IMData._selectNode.id, 'selected', false)\n  }\n  IMData.update(id, { isCurrentSelected: selected })\n  if (selected) {\n    tree.setItemState(id, 'selected', true)\n    emitter.emit('onSelectedNode', findData(id))\n  }\n  rePaint()\n}\nexport const cancelAllSelect = () => {\n  let tree: TreeGraph | null = globalTree.value as TreeGraph\n  if (IMData._selectNode) {\n    const id = IMData._selectNode.id;\n    if (tree.findDataById(id)) {\n      tree.setItemState(id, 'selected', false)\n    }\n    IMData.update(id, { isCurrentSelected: false })\n  }\n  rePaint()\n}\nexport const getSelectedNodes = () => {\n  if (IMData._selectNode) {\n    return [IMData._selectNode]\n  } else {\n    return []\n  }\n}\nexport const deleteNode = (id: string) => {\n  IMData.removeItem(id)\n  rePaint()\n}\nexport const deleteOneNode = (id: string) => {\n  IMData.removeOneItem(id)\n  rePaint()\n}\nexport const collapse = (id: string) => {\n  IMData.collapse(id)\n  emitter.emit('onCollapse', findData(id))\n  rePaint()\n}\nexport const expand = (id: string) => {\n  IMData.expand(id)\n  emitter.emit('onExpand', findData(id))\n  rePaint()\n}\nexport const onlyShowCurrent = (id: string) => {\n  IMData.onlyShowCurrent(id)\n  rePaint()\n}\nexport const backParent = (id: string) => {\n  IMData.backParent(id)\n  rePaint()\n}\nexport const reDo = () => {\n  let data = History.forword();\n  if (data) {\n    IMData.data = { ...data }\n  }\n  rePaint(false)\n}\nexport const unDo = () => {\n  let data = History.goBack();\n  if (data) {\n    IMData.data = { ...data }\n  }\n  rePaint(false)\n}\n/***\n * 将childId节点从原节点删除，移动到新的parentId节点下面\n * */\nexport const moveToChild = (childId, parentId) => {\n  const data = IMData.find(childId);\n  IMData.add(parentId, data);\n  IMData.removeItem(childId);\n  rePaint()\n}\nexport const findData = (id) => {\n  return IMData.find(id);\n}\nexport const moveData = (parentId, nodeId, index) => {\n  IMData.moveData(parentId, nodeId, index);\n  rePaint()\n}\nexport const copy = (ids) => {\n  pushData(ids.map(id => findData(id)))\n}\nexport const cut = (ids) => {\n  pushData(ids.map(id => findData(id)))\n  ids.forEach(id => {\n    deleteNode(id)\n  })\n}\nexport const paste = (pid) => {\n  let data = popData()\n  if (data) {\n    data.forEach(item => {\n      addData(pid, item, false)\n    })\n    rePaint()\n  }\n}\nexport const createACopy = (id) => {\n  copy([id])\n  let d = findData(id)\n  paste(findData(id).parentId)\n  rePaint()\n}\n","import { addData, addParent, addSibling, copy, deleteNode, paste, createACopy, cut, unDo, reDo, edit } from \"./methods\";\nimport { globalTree, placeholderText } from \"../variable\";\n\nvar isMac = function () {\n  return /macintosh|mac os x/i.test(navigator.userAgent);\n}();\nexport default [\n  {\n    key: 'Enter',\n    label: '插入同级节点',\n    Event: function (selectedNodes) {\n      if (selectedNodes?.length != 1) return;\n      addSibling(selectedNodes[0].id, placeholderText, true)\n    },\n    name: 'add-sibling', // 右键菜单匹配值\n  },\n  {\n    key: 'Tab',\n    label: '插入子节点',\n    Event: function (selectedNodes) {\n      if (selectedNodes?.length != 1) return;\n      addData(selectedNodes[0].id, placeholderText, true)\n    },\n    name: 'add', // 右键菜单匹配值\n  },\n  {\n    key: 'Tab',\n    control: 'shift',\n    label: '插入父节点',\n    Event: function (selectedNodes) {\n      if (selectedNodes?.length != 1) return;\n      addParent(selectedNodes[0].id, placeholderText, true)\n    },\n    name: 'add-parent', // 右键菜单匹配值\n  },\n  {\n    key: 'c',\n    control: isMac ? 'cmd' : 'ctrl',\n    label: '复制',\n    Event: function (selectedNodes) {\n      if (!selectedNodes?.length) return;\n      let ids = selectedNodes.map(item => item.id)\n      copy(ids)\n    },\n    name: 'copy', // 右键菜单匹配值\n  },\n  {\n    key: 'x',\n    control: isMac ? 'cmd' : 'ctrl',\n    label: '剪切',\n    Event: function (selectedNodes) {\n      if (!selectedNodes?.length) return;\n      let ids = selectedNodes.map(item => item.id)\n      cut(ids)\n    },\n    name: 'cut', // 右键菜单匹配值\n  },\n  {\n    key: 'v',\n    control: isMac ? 'cmd' : 'ctrl',\n    label: '粘贴',\n    Event: function (selectedNodes) {\n      if (selectedNodes?.length != 1) return;\n      paste(selectedNodes[0].id)\n    },\n    name: 'paste', // 右键菜单匹配值\n  },\n  {\n    key: 'd',\n    control: isMac ? 'cmd' : 'ctrl',\n    label: '创建副本',\n    name: 'create-a-copy', // 右键菜单匹配值\n    Event: function (selectedNodes) {\n      if (selectedNodes?.length != 1) return;\n      createACopy(selectedNodes[0].id)\n    },\n  },\n  {\n    key: 'z',\n    control: isMac ? 'cmd' : 'ctrl',\n    label: '撤销操作',\n    name: 'revert', // 右键菜单匹配值\n    Event: function (selectedNodes) {\n      unDo()\n    },\n  },\n  {\n    key: 'y',\n    control: isMac ? 'cmd' : 'ctrl',\n    label: '重新操作',\n    name: 'redo', // 右键菜单匹配值\n    Event: function (selectedNodes) {\n      reDo()\n    },\n  },\n  {\n    key: 'Backspace',\n    label: '删除',\n    Event: function (selectedNodes) {\n      if (!selectedNodes?.length) return;\n      selectedNodes.forEach(item => {\n        deleteNode(item.id)\n      })\n    },\n    name: 'delete', // 右键菜单匹配值\n  },\n  {\n    key: ' ',\n    label: '编辑',\n    Event: function (selectedNodes) {\n      if (!selectedNodes?.length) return;\n      selectedNodes.forEach(item => {\n        edit(item.id)\n      })\n    },\n    name: 'delete', // 右键菜单匹配值\n  },\n]\n","import G6 from \"@antv/g6\";\nimport { centerBtn, fitBtn, downloadBtn, scaleRatio, nodeMenuList, setCurrentNode, placeholderText } from \"./variable\";\nimport {\n  addData,\n  addParent,\n  addSibling,\n  edit,\n  deleteNode,\n  collapse,\n  expand,\n  onlyShowCurrent,\n  backParent\n} from \"./tree/methods\"\nimport hotkeys from \"./tree/hotkeys\";\nimport { NodeData } from \"./interface\";\n\nconst nodeMenuMap = {\n  add: {\n    name: 'add',\n    title: '添加子节点',\n    click: (node: NodeData) => {\n      addData(node?.id as string, placeholderText, true)\n    }\n  },\n  'add-parent': {\n    name: 'add-parent',\n    title: '添加父级节点',\n    click: (node: NodeData) => {\n      addParent(node?.id as string, placeholderText, true)\n    }\n  },\n  'add-sibling': {\n    name: 'add-sibling',\n    title: '添加兄弟节点',\n    click: (node: NodeData) => {\n      addSibling(node?.id as string, placeholderText, true)\n    }\n  },\n  'edit': {\n    name: 'edit',\n    title: '编辑当前节点',\n    click: (node: NodeData) => {\n      edit(node?.id as string)\n    }\n  },\n  'delete': {\n    name: 'delete',\n    title: '删除当前节点',\n    click: (node: NodeData) => {\n      deleteNode(node?.id as string)\n    }\n  },\n  'collapse': {\n    name: 'collapse',\n    title: '收起模型',\n    click: (node: NodeData) => {\n      collapse(node?.id as string)\n    }\n  },\n  'expand': {\n    name: 'expand',\n    title: '展开模型',\n    click: (node: NodeData) => {\n      expand(node?.id as string)\n    }\n  },\n  'only-show-current': {\n    name: 'only-show-current',\n    title: '进入当前节点',\n    click: (node: NodeData) => {\n      onlyShowCurrent(node?.id as string)\n    }\n  },\n  'back-parent': {\n    name: 'back-parent',\n    title: '返回上一级节点',\n    click: (node: NodeData) => {\n      backParent(node?.id as string)\n    }\n  }\n}\nconst nodeMenuClickList = {}\nconst contextMenu = () => new G6.Menu({\n  getContent(evt) {\n    if (!evt) return `div`;\n    const isCanvasTarget = evt.target && evt.target.isCanvas && evt.target.isCanvas()\n    return isCanvasTarget ? renderCanvasMenu(evt) : renderNodeMenu(evt);\n  },\n  handleMenuClick: (target, item, graph) => {\n    handleMenuClick(target, item, graph)\n  },\n  // offsetX and offsetY include the padding of the parent container\n  // 需要加上父级容器的 padding-left 16 与自身偏移量 10\n  offsetX: 10,\n  // 需要加上父级容器的 padding-top 24 、画布兄弟元素高度、与自身偏移量 10\n  offsetY: -100,\n  // the types of items that allow the menu show up\n  // 在哪些类型的元素上响应\n  itemTypes: ['node', 'canvas'],\n});\n\nfunction renderCanvasMenu(evt) {\n  return `<ul>\n               <li code=\"enlarge\">放大</li>\n               <li code=\"ensmall\">缩小</li>\n              ${fitBtn.value ? `<li code=\"fit\">缩放到合适大小</li>` : ``} \n               ${centerBtn.value ? `<li code=\"center\">缩放到屏幕中间</li>` : ``}\n               ${downloadBtn.value ? `<li code=\"download\">下载</li>` : ``}\n           </ul>`\n}\n\nfunction renderNodeMenu(evt: any) {\n  const nodeData = evt.item._cfg.model;\n  let menuList = nodeMenuList.value\n  let { depth, collapse, isSubView, children } = nodeData\n  let str = menuList.map(group => {\n    return `<ul class=\"group\">\n            ${group.map(item => {\n      if (typeof item === 'string') {\n        // 内部配置\n        let itemInfo = nodeMenuMap[item];\n        if (!itemInfo) return '';\n        if (depth === 0 && ['add-parent', 'add-sibling', 'delete'].indexOf(item) != -1) return ''\n        if (item === 'collapse' && (collapse || children.length === 0)) return ''\n        if (!collapse && item === 'expand') return ''\n        if (!isSubView && depth === 0 && item === 'only-show-current') return ''\n        if (isSubView && depth === 0 && item === 'only-show-current') itemInfo = nodeMenuMap['back-parent']\n        nodeMenuClickList[itemInfo.name] = itemInfo.click;\n        let hotkey = hotkeys.filter(item => item.name === itemInfo.name)[0]\n        if (hotkey) {\n          return `<li code=\"Node\" name=\"${itemInfo.name}\"><div code=\"Node\" name=\"${itemInfo.name}\">${itemInfo.title}</div><div class=\"small-tip\" code=\"Node\" name=\"${itemInfo.name}\">${hotkey.control ? `${hotkey.control}+` : ''}${hotkey.key}</div></li>`\n        } else {\n          return `<li code=\"Node\" name=\"${itemInfo.name}\">${itemInfo.title}</li>`\n        }\n      } else if (typeof item === 'object' && item.title) {\n        // 外部配置\n        nodeMenuClickList[item.name] = item.click;\n        return `<li code=\"Node\" name=\"${item.name}\">${item.title}</li>`\n      } else {\n        return ''\n      }\n    }).join('')}\n        </ul>`\n  }).join('')\n  return str\n}\n\nfunction handleMenuClick(target, item, graph) {\n  if (target.getAttribute('code') === 'enlarge') {\n    graph.zoom(1.2, { x: graph.getWidth() / 2, y: graph.getHeight() / 2 });\n  } else if (target.getAttribute('code') === 'ensmall') {\n    graph.zoom(0.8, { x: graph.getWidth() / 2, y: graph.getHeight() / 2 });\n  } else if (target.getAttribute('code') === 'fit') {\n    graph.layout(true)\n  } else if (target.getAttribute('code') === 'center') {\n    graph.fitCenter()\n    graph.zoomTo(scaleRatio.value, {\n      x: graph.getWidth() / 2,\n      y: graph.getHeight() / 2\n    })\n  } else if (target.getAttribute('code') === 'download') {\n    graph.downloadFullImage('mindmap_' + Date.now(), 'image/jpeg', {\n      backgroundColor: '#ddd',\n      padding: [30, 15, 15, 15],\n    });\n  } else if (target.getAttribute('code') === 'Node') {\n    let name = target.getAttribute('name');\n    if (name) {\n      nodeMenuClickList[name](item.get('model'), item, graph)\n    }\n  }\n}\n\nexport default contextMenu\n","import G6 from \"@antv/g6\";\nimport {timetravel, centerBtn, fitBtn, downloadBtn, scaleR, scaleRatio} from \"./variable\";\n// 小地图\nexport const mindmap = ()=>new G6.Minimap({\n    size: [100, 100],\n    className: 'mindmap-miniGap',\n    type: 'delegate'\n})\n// 工具栏\nexport const toolbar = ()=>new G6.ToolBar({\n    className: 'mindmap-toolbar',\n    getContent: () => {\n        return `\n<div>\n${timetravel.value ? `\n<div class=\"mindmap-toolbar-top\">\n<ul class='mindmap-toolbar'>\n        <li class='mindmap-toolbar-list_item' code='undo' title=\"撤销\"><i class=\"icon-undo\"></i></li>\n        <li class='mindmap-toolbar-list_item' code='redo' title=\"恢复\"><i class=\"icon-redo\"></i></li>\n      </ul>\n</div>` : ''}\n<div class=\"mindmap-toolbar-bottom\">\n<ul class='mindmap-toolbar'>\n        ${downloadBtn.value ? `<li class='mindmap-toolbar-list_item' code='download' title=\"下载图片\"><i class=\"icon-download\"></i></li>` : ''}\n        ${centerBtn.value ? `<li class='mindmap-toolbar-list_item' code='center' title=\"缩放到屏幕中心\"><i class=\"icon-center\"></i>缩放到画布中心</li>` : ''}\n        ${fitBtn.value ? `<li class='mindmap-toolbar-list_item' code='fit' title=\"缩放到合适比例\"><i class=\"icon-fit\"></i></li>` : ''}\n      </ul>\n</div>\n</div>\n    `;\n    },\n    handleClick: (code, graph) => {\n        switch (code) {\n            case\n            'undo'\n            :\n                toolbar.undo();\n                break;\n            case\n            'redo'\n            :\n                toolbar.redo();\n                break;\n            case\n            'download'\n            :\n                graph.downloadFullImage('mindmap_' + Date.now(), 'image/jpeg', {\n                    backgroundColor: '#ddd',\n                    padding: [30, 15, 15, 15],\n                });\n                break;\n            case\n            'fit'\n            :\n                graph.layout(true);\n                break;\n            case\n            'center'\n            :\n                graph.fitCenter()\n                graph.zoomTo(scaleRatio.value, {\n                    x: graph.getWidth() / 2,\n                    y: graph.getHeight() / 2\n                })\n                break;\n        }\n    }\n});\n\n// tooltip\nexport const tooltip = {\n    type: 'tooltip',\n    formatText(model) {\n        return model.content || model.desc || model.fullName;\n    },\n    offset: 10,\n}\n","'use strict'\r\n\r\nmodule.exports = {\r\n\t\"aliceblue\": [240, 248, 255],\r\n\t\"antiquewhite\": [250, 235, 215],\r\n\t\"aqua\": [0, 255, 255],\r\n\t\"aquamarine\": [127, 255, 212],\r\n\t\"azure\": [240, 255, 255],\r\n\t\"beige\": [245, 245, 220],\r\n\t\"bisque\": [255, 228, 196],\r\n\t\"black\": [0, 0, 0],\r\n\t\"blanchedalmond\": [255, 235, 205],\r\n\t\"blue\": [0, 0, 255],\r\n\t\"blueviolet\": [138, 43, 226],\r\n\t\"brown\": [165, 42, 42],\r\n\t\"burlywood\": [222, 184, 135],\r\n\t\"cadetblue\": [95, 158, 160],\r\n\t\"chartreuse\": [127, 255, 0],\r\n\t\"chocolate\": [210, 105, 30],\r\n\t\"coral\": [255, 127, 80],\r\n\t\"cornflowerblue\": [100, 149, 237],\r\n\t\"cornsilk\": [255, 248, 220],\r\n\t\"crimson\": [220, 20, 60],\r\n\t\"cyan\": [0, 255, 255],\r\n\t\"darkblue\": [0, 0, 139],\r\n\t\"darkcyan\": [0, 139, 139],\r\n\t\"darkgoldenrod\": [184, 134, 11],\r\n\t\"darkgray\": [169, 169, 169],\r\n\t\"darkgreen\": [0, 100, 0],\r\n\t\"darkgrey\": [169, 169, 169],\r\n\t\"darkkhaki\": [189, 183, 107],\r\n\t\"darkmagenta\": [139, 0, 139],\r\n\t\"darkolivegreen\": [85, 107, 47],\r\n\t\"darkorange\": [255, 140, 0],\r\n\t\"darkorchid\": [153, 50, 204],\r\n\t\"darkred\": [139, 0, 0],\r\n\t\"darksalmon\": [233, 150, 122],\r\n\t\"darkseagreen\": [143, 188, 143],\r\n\t\"darkslateblue\": [72, 61, 139],\r\n\t\"darkslategray\": [47, 79, 79],\r\n\t\"darkslategrey\": [47, 79, 79],\r\n\t\"darkturquoise\": [0, 206, 209],\r\n\t\"darkviolet\": [148, 0, 211],\r\n\t\"deeppink\": [255, 20, 147],\r\n\t\"deepskyblue\": [0, 191, 255],\r\n\t\"dimgray\": [105, 105, 105],\r\n\t\"dimgrey\": [105, 105, 105],\r\n\t\"dodgerblue\": [30, 144, 255],\r\n\t\"firebrick\": [178, 34, 34],\r\n\t\"floralwhite\": [255, 250, 240],\r\n\t\"forestgreen\": [34, 139, 34],\r\n\t\"fuchsia\": [255, 0, 255],\r\n\t\"gainsboro\": [220, 220, 220],\r\n\t\"ghostwhite\": [248, 248, 255],\r\n\t\"gold\": [255, 215, 0],\r\n\t\"goldenrod\": [218, 165, 32],\r\n\t\"gray\": [128, 128, 128],\r\n\t\"green\": [0, 128, 0],\r\n\t\"greenyellow\": [173, 255, 47],\r\n\t\"grey\": [128, 128, 128],\r\n\t\"honeydew\": [240, 255, 240],\r\n\t\"hotpink\": [255, 105, 180],\r\n\t\"indianred\": [205, 92, 92],\r\n\t\"indigo\": [75, 0, 130],\r\n\t\"ivory\": [255, 255, 240],\r\n\t\"khaki\": [240, 230, 140],\r\n\t\"lavender\": [230, 230, 250],\r\n\t\"lavenderblush\": [255, 240, 245],\r\n\t\"lawngreen\": [124, 252, 0],\r\n\t\"lemonchiffon\": [255, 250, 205],\r\n\t\"lightblue\": [173, 216, 230],\r\n\t\"lightcoral\": [240, 128, 128],\r\n\t\"lightcyan\": [224, 255, 255],\r\n\t\"lightgoldenrodyellow\": [250, 250, 210],\r\n\t\"lightgray\": [211, 211, 211],\r\n\t\"lightgreen\": [144, 238, 144],\r\n\t\"lightgrey\": [211, 211, 211],\r\n\t\"lightpink\": [255, 182, 193],\r\n\t\"lightsalmon\": [255, 160, 122],\r\n\t\"lightseagreen\": [32, 178, 170],\r\n\t\"lightskyblue\": [135, 206, 250],\r\n\t\"lightslategray\": [119, 136, 153],\r\n\t\"lightslategrey\": [119, 136, 153],\r\n\t\"lightsteelblue\": [176, 196, 222],\r\n\t\"lightyellow\": [255, 255, 224],\r\n\t\"lime\": [0, 255, 0],\r\n\t\"limegreen\": [50, 205, 50],\r\n\t\"linen\": [250, 240, 230],\r\n\t\"magenta\": [255, 0, 255],\r\n\t\"maroon\": [128, 0, 0],\r\n\t\"mediumaquamarine\": [102, 205, 170],\r\n\t\"mediumblue\": [0, 0, 205],\r\n\t\"mediumorchid\": [186, 85, 211],\r\n\t\"mediumpurple\": [147, 112, 219],\r\n\t\"mediumseagreen\": [60, 179, 113],\r\n\t\"mediumslateblue\": [123, 104, 238],\r\n\t\"mediumspringgreen\": [0, 250, 154],\r\n\t\"mediumturquoise\": [72, 209, 204],\r\n\t\"mediumvioletred\": [199, 21, 133],\r\n\t\"midnightblue\": [25, 25, 112],\r\n\t\"mintcream\": [245, 255, 250],\r\n\t\"mistyrose\": [255, 228, 225],\r\n\t\"moccasin\": [255, 228, 181],\r\n\t\"navajowhite\": [255, 222, 173],\r\n\t\"navy\": [0, 0, 128],\r\n\t\"oldlace\": [253, 245, 230],\r\n\t\"olive\": [128, 128, 0],\r\n\t\"olivedrab\": [107, 142, 35],\r\n\t\"orange\": [255, 165, 0],\r\n\t\"orangered\": [255, 69, 0],\r\n\t\"orchid\": [218, 112, 214],\r\n\t\"palegoldenrod\": [238, 232, 170],\r\n\t\"palegreen\": [152, 251, 152],\r\n\t\"paleturquoise\": [175, 238, 238],\r\n\t\"palevioletred\": [219, 112, 147],\r\n\t\"papayawhip\": [255, 239, 213],\r\n\t\"peachpuff\": [255, 218, 185],\r\n\t\"peru\": [205, 133, 63],\r\n\t\"pink\": [255, 192, 203],\r\n\t\"plum\": [221, 160, 221],\r\n\t\"powderblue\": [176, 224, 230],\r\n\t\"purple\": [128, 0, 128],\r\n\t\"rebeccapurple\": [102, 51, 153],\r\n\t\"red\": [255, 0, 0],\r\n\t\"rosybrown\": [188, 143, 143],\r\n\t\"royalblue\": [65, 105, 225],\r\n\t\"saddlebrown\": [139, 69, 19],\r\n\t\"salmon\": [250, 128, 114],\r\n\t\"sandybrown\": [244, 164, 96],\r\n\t\"seagreen\": [46, 139, 87],\r\n\t\"seashell\": [255, 245, 238],\r\n\t\"sienna\": [160, 82, 45],\r\n\t\"silver\": [192, 192, 192],\r\n\t\"skyblue\": [135, 206, 235],\r\n\t\"slateblue\": [106, 90, 205],\r\n\t\"slategray\": [112, 128, 144],\r\n\t\"slategrey\": [112, 128, 144],\r\n\t\"snow\": [255, 250, 250],\r\n\t\"springgreen\": [0, 255, 127],\r\n\t\"steelblue\": [70, 130, 180],\r\n\t\"tan\": [210, 180, 140],\r\n\t\"teal\": [0, 128, 128],\r\n\t\"thistle\": [216, 191, 216],\r\n\t\"tomato\": [255, 99, 71],\r\n\t\"turquoise\": [64, 224, 208],\r\n\t\"violet\": [238, 130, 238],\r\n\t\"wheat\": [245, 222, 179],\r\n\t\"white\": [255, 255, 255],\r\n\t\"whitesmoke\": [245, 245, 245],\r\n\t\"yellow\": [255, 255, 0],\r\n\t\"yellowgreen\": [154, 205, 50]\r\n};\r\n","module.exports = function isArrayish(obj) {\n\tif (!obj || typeof obj === 'string') {\n\t\treturn false;\n\t}\n\n\treturn obj instanceof Array || Array.isArray(obj) ||\n\t\t(obj.length >= 0 && (obj.splice instanceof Function ||\n\t\t\t(Object.getOwnPropertyDescriptor(obj, (obj.length - 1)) && obj.constructor.name !== 'String')));\n};\n","'use strict';\n\nvar isArrayish = require('is-arrayish');\n\nvar concat = Array.prototype.concat;\nvar slice = Array.prototype.slice;\n\nvar swizzle = module.exports = function swizzle(args) {\n\tvar results = [];\n\n\tfor (var i = 0, len = args.length; i < len; i++) {\n\t\tvar arg = args[i];\n\n\t\tif (isArrayish(arg)) {\n\t\t\t// http://jsperf.com/javascript-array-concat-vs-push/98\n\t\t\tresults = concat.call(results, slice.call(arg));\n\t\t} else {\n\t\t\tresults.push(arg);\n\t\t}\n\t}\n\n\treturn results;\n};\n\nswizzle.wrap = function (fn) {\n\treturn function () {\n\t\treturn fn(swizzle(arguments));\n\t};\n};\n","/* MIT license */\nvar colorNames = require('color-name');\nvar swizzle = require('simple-swizzle');\nvar hasOwnProperty = Object.hasOwnProperty;\n\nvar reverseNames = Object.create(null);\n\n// create a list of reverse color names\nfor (var name in colorNames) {\n\tif (hasOwnProperty.call(colorNames, name)) {\n\t\treverseNames[colorNames[name]] = name;\n\t}\n}\n\nvar cs = module.exports = {\n\tto: {},\n\tget: {}\n};\n\ncs.get = function (string) {\n\tvar prefix = string.substring(0, 3).toLowerCase();\n\tvar val;\n\tvar model;\n\tswitch (prefix) {\n\t\tcase 'hsl':\n\t\t\tval = cs.get.hsl(string);\n\t\t\tmodel = 'hsl';\n\t\t\tbreak;\n\t\tcase 'hwb':\n\t\t\tval = cs.get.hwb(string);\n\t\t\tmodel = 'hwb';\n\t\t\tbreak;\n\t\tdefault:\n\t\t\tval = cs.get.rgb(string);\n\t\t\tmodel = 'rgb';\n\t\t\tbreak;\n\t}\n\n\tif (!val) {\n\t\treturn null;\n\t}\n\n\treturn {model: model, value: val};\n};\n\ncs.get.rgb = function (string) {\n\tif (!string) {\n\t\treturn null;\n\t}\n\n\tvar abbr = /^#([a-f0-9]{3,4})$/i;\n\tvar hex = /^#([a-f0-9]{6})([a-f0-9]{2})?$/i;\n\tvar rgba = /^rgba?\\(\\s*([+-]?\\d+)(?=[\\s,])\\s*(?:,\\s*)?([+-]?\\d+)(?=[\\s,])\\s*(?:,\\s*)?([+-]?\\d+)\\s*(?:[,|\\/]\\s*([+-]?[\\d\\.]+)(%?)\\s*)?\\)$/;\n\tvar per = /^rgba?\\(\\s*([+-]?[\\d\\.]+)\\%\\s*,?\\s*([+-]?[\\d\\.]+)\\%\\s*,?\\s*([+-]?[\\d\\.]+)\\%\\s*(?:[,|\\/]\\s*([+-]?[\\d\\.]+)(%?)\\s*)?\\)$/;\n\tvar keyword = /^(\\w+)$/;\n\n\tvar rgb = [0, 0, 0, 1];\n\tvar match;\n\tvar i;\n\tvar hexAlpha;\n\n\tif (match = string.match(hex)) {\n\t\thexAlpha = match[2];\n\t\tmatch = match[1];\n\n\t\tfor (i = 0; i < 3; i++) {\n\t\t\t// https://jsperf.com/slice-vs-substr-vs-substring-methods-long-string/19\n\t\t\tvar i2 = i * 2;\n\t\t\trgb[i] = parseInt(match.slice(i2, i2 + 2), 16);\n\t\t}\n\n\t\tif (hexAlpha) {\n\t\t\trgb[3] = parseInt(hexAlpha, 16) / 255;\n\t\t}\n\t} else if (match = string.match(abbr)) {\n\t\tmatch = match[1];\n\t\thexAlpha = match[3];\n\n\t\tfor (i = 0; i < 3; i++) {\n\t\t\trgb[i] = parseInt(match[i] + match[i], 16);\n\t\t}\n\n\t\tif (hexAlpha) {\n\t\t\trgb[3] = parseInt(hexAlpha + hexAlpha, 16) / 255;\n\t\t}\n\t} else if (match = string.match(rgba)) {\n\t\tfor (i = 0; i < 3; i++) {\n\t\t\trgb[i] = parseInt(match[i + 1], 0);\n\t\t}\n\n\t\tif (match[4]) {\n\t\t\tif (match[5]) {\n\t\t\t\trgb[3] = parseFloat(match[4]) * 0.01;\n\t\t\t} else {\n\t\t\t\trgb[3] = parseFloat(match[4]);\n\t\t\t}\n\t\t}\n\t} else if (match = string.match(per)) {\n\t\tfor (i = 0; i < 3; i++) {\n\t\t\trgb[i] = Math.round(parseFloat(match[i + 1]) * 2.55);\n\t\t}\n\n\t\tif (match[4]) {\n\t\t\tif (match[5]) {\n\t\t\t\trgb[3] = parseFloat(match[4]) * 0.01;\n\t\t\t} else {\n\t\t\t\trgb[3] = parseFloat(match[4]);\n\t\t\t}\n\t\t}\n\t} else if (match = string.match(keyword)) {\n\t\tif (match[1] === 'transparent') {\n\t\t\treturn [0, 0, 0, 0];\n\t\t}\n\n\t\tif (!hasOwnProperty.call(colorNames, match[1])) {\n\t\t\treturn null;\n\t\t}\n\n\t\trgb = colorNames[match[1]];\n\t\trgb[3] = 1;\n\n\t\treturn rgb;\n\t} else {\n\t\treturn null;\n\t}\n\n\tfor (i = 0; i < 3; i++) {\n\t\trgb[i] = clamp(rgb[i], 0, 255);\n\t}\n\trgb[3] = clamp(rgb[3], 0, 1);\n\n\treturn rgb;\n};\n\ncs.get.hsl = function (string) {\n\tif (!string) {\n\t\treturn null;\n\t}\n\n\tvar hsl = /^hsla?\\(\\s*([+-]?(?:\\d{0,3}\\.)?\\d+)(?:deg)?\\s*,?\\s*([+-]?[\\d\\.]+)%\\s*,?\\s*([+-]?[\\d\\.]+)%\\s*(?:[,|\\/]\\s*([+-]?(?=\\.\\d|\\d)(?:0|[1-9]\\d*)?(?:\\.\\d*)?(?:[eE][+-]?\\d+)?)\\s*)?\\)$/;\n\tvar match = string.match(hsl);\n\n\tif (match) {\n\t\tvar alpha = parseFloat(match[4]);\n\t\tvar h = ((parseFloat(match[1]) % 360) + 360) % 360;\n\t\tvar s = clamp(parseFloat(match[2]), 0, 100);\n\t\tvar l = clamp(parseFloat(match[3]), 0, 100);\n\t\tvar a = clamp(isNaN(alpha) ? 1 : alpha, 0, 1);\n\n\t\treturn [h, s, l, a];\n\t}\n\n\treturn null;\n};\n\ncs.get.hwb = function (string) {\n\tif (!string) {\n\t\treturn null;\n\t}\n\n\tvar hwb = /^hwb\\(\\s*([+-]?\\d{0,3}(?:\\.\\d+)?)(?:deg)?\\s*,\\s*([+-]?[\\d\\.]+)%\\s*,\\s*([+-]?[\\d\\.]+)%\\s*(?:,\\s*([+-]?(?=\\.\\d|\\d)(?:0|[1-9]\\d*)?(?:\\.\\d*)?(?:[eE][+-]?\\d+)?)\\s*)?\\)$/;\n\tvar match = string.match(hwb);\n\n\tif (match) {\n\t\tvar alpha = parseFloat(match[4]);\n\t\tvar h = ((parseFloat(match[1]) % 360) + 360) % 360;\n\t\tvar w = clamp(parseFloat(match[2]), 0, 100);\n\t\tvar b = clamp(parseFloat(match[3]), 0, 100);\n\t\tvar a = clamp(isNaN(alpha) ? 1 : alpha, 0, 1);\n\t\treturn [h, w, b, a];\n\t}\n\n\treturn null;\n};\n\ncs.to.hex = function () {\n\tvar rgba = swizzle(arguments);\n\n\treturn (\n\t\t'#' +\n\t\thexDouble(rgba[0]) +\n\t\thexDouble(rgba[1]) +\n\t\thexDouble(rgba[2]) +\n\t\t(rgba[3] < 1\n\t\t\t? (hexDouble(Math.round(rgba[3] * 255)))\n\t\t\t: '')\n\t);\n};\n\ncs.to.rgb = function () {\n\tvar rgba = swizzle(arguments);\n\n\treturn rgba.length < 4 || rgba[3] === 1\n\t\t? 'rgb(' + Math.round(rgba[0]) + ', ' + Math.round(rgba[1]) + ', ' + Math.round(rgba[2]) + ')'\n\t\t: 'rgba(' + Math.round(rgba[0]) + ', ' + Math.round(rgba[1]) + ', ' + Math.round(rgba[2]) + ', ' + rgba[3] + ')';\n};\n\ncs.to.rgb.percent = function () {\n\tvar rgba = swizzle(arguments);\n\n\tvar r = Math.round(rgba[0] / 255 * 100);\n\tvar g = Math.round(rgba[1] / 255 * 100);\n\tvar b = Math.round(rgba[2] / 255 * 100);\n\n\treturn rgba.length < 4 || rgba[3] === 1\n\t\t? 'rgb(' + r + '%, ' + g + '%, ' + b + '%)'\n\t\t: 'rgba(' + r + '%, ' + g + '%, ' + b + '%, ' + rgba[3] + ')';\n};\n\ncs.to.hsl = function () {\n\tvar hsla = swizzle(arguments);\n\treturn hsla.length < 4 || hsla[3] === 1\n\t\t? 'hsl(' + hsla[0] + ', ' + hsla[1] + '%, ' + hsla[2] + '%)'\n\t\t: 'hsla(' + hsla[0] + ', ' + hsla[1] + '%, ' + hsla[2] + '%, ' + hsla[3] + ')';\n};\n\n// hwb is a bit different than rgb(a) & hsl(a) since there is no alpha specific syntax\n// (hwb have alpha optional & 1 is default value)\ncs.to.hwb = function () {\n\tvar hwba = swizzle(arguments);\n\n\tvar a = '';\n\tif (hwba.length >= 4 && hwba[3] !== 1) {\n\t\ta = ', ' + hwba[3];\n\t}\n\n\treturn 'hwb(' + hwba[0] + ', ' + hwba[1] + '%, ' + hwba[2] + '%' + a + ')';\n};\n\ncs.to.keyword = function (rgb) {\n\treturn reverseNames[rgb.slice(0, 3)];\n};\n\n// helpers\nfunction clamp(num, min, max) {\n\treturn Math.min(Math.max(min, num), max);\n}\n\nfunction hexDouble(num) {\n\tvar str = Math.round(num).toString(16).toUpperCase();\n\treturn (str.length < 2) ? '0' + str : str;\n}\n","/* MIT license */\n/* eslint-disable no-mixed-operators */\nconst cssKeywords = require('color-name');\n\n// NOTE: conversions should only return primitive values (i.e. arrays, or\n//       values that give correct `typeof` results).\n//       do not use box values types (i.e. Number(), String(), etc.)\n\nconst reverseKeywords = {};\nfor (const key of Object.keys(cssKeywords)) {\n\treverseKeywords[cssKeywords[key]] = key;\n}\n\nconst convert = {\n\trgb: {channels: 3, labels: 'rgb'},\n\thsl: {channels: 3, labels: 'hsl'},\n\thsv: {channels: 3, labels: 'hsv'},\n\thwb: {channels: 3, labels: 'hwb'},\n\tcmyk: {channels: 4, labels: 'cmyk'},\n\txyz: {channels: 3, labels: 'xyz'},\n\tlab: {channels: 3, labels: 'lab'},\n\tlch: {channels: 3, labels: 'lch'},\n\thex: {channels: 1, labels: ['hex']},\n\tkeyword: {channels: 1, labels: ['keyword']},\n\tansi16: {channels: 1, labels: ['ansi16']},\n\tansi256: {channels: 1, labels: ['ansi256']},\n\thcg: {channels: 3, labels: ['h', 'c', 'g']},\n\tapple: {channels: 3, labels: ['r16', 'g16', 'b16']},\n\tgray: {channels: 1, labels: ['gray']}\n};\n\nmodule.exports = convert;\n\n// Hide .channels and .labels properties\nfor (const model of Object.keys(convert)) {\n\tif (!('channels' in convert[model])) {\n\t\tthrow new Error('missing channels property: ' + model);\n\t}\n\n\tif (!('labels' in convert[model])) {\n\t\tthrow new Error('missing channel labels property: ' + model);\n\t}\n\n\tif (convert[model].labels.length !== convert[model].channels) {\n\t\tthrow new Error('channel and label counts mismatch: ' + model);\n\t}\n\n\tconst {channels, labels} = convert[model];\n\tdelete convert[model].channels;\n\tdelete convert[model].labels;\n\tObject.defineProperty(convert[model], 'channels', {value: channels});\n\tObject.defineProperty(convert[model], 'labels', {value: labels});\n}\n\nconvert.rgb.hsl = function (rgb) {\n\tconst r = rgb[0] / 255;\n\tconst g = rgb[1] / 255;\n\tconst b = rgb[2] / 255;\n\tconst min = Math.min(r, g, b);\n\tconst max = Math.max(r, g, b);\n\tconst delta = max - min;\n\tlet h;\n\tlet s;\n\n\tif (max === min) {\n\t\th = 0;\n\t} else if (r === max) {\n\t\th = (g - b) / delta;\n\t} else if (g === max) {\n\t\th = 2 + (b - r) / delta;\n\t} else if (b === max) {\n\t\th = 4 + (r - g) / delta;\n\t}\n\n\th = Math.min(h * 60, 360);\n\n\tif (h < 0) {\n\t\th += 360;\n\t}\n\n\tconst l = (min + max) / 2;\n\n\tif (max === min) {\n\t\ts = 0;\n\t} else if (l <= 0.5) {\n\t\ts = delta / (max + min);\n\t} else {\n\t\ts = delta / (2 - max - min);\n\t}\n\n\treturn [h, s * 100, l * 100];\n};\n\nconvert.rgb.hsv = function (rgb) {\n\tlet rdif;\n\tlet gdif;\n\tlet bdif;\n\tlet h;\n\tlet s;\n\n\tconst r = rgb[0] / 255;\n\tconst g = rgb[1] / 255;\n\tconst b = rgb[2] / 255;\n\tconst v = Math.max(r, g, b);\n\tconst diff = v - Math.min(r, g, b);\n\tconst diffc = function (c) {\n\t\treturn (v - c) / 6 / diff + 1 / 2;\n\t};\n\n\tif (diff === 0) {\n\t\th = 0;\n\t\ts = 0;\n\t} else {\n\t\ts = diff / v;\n\t\trdif = diffc(r);\n\t\tgdif = diffc(g);\n\t\tbdif = diffc(b);\n\n\t\tif (r === v) {\n\t\t\th = bdif - gdif;\n\t\t} else if (g === v) {\n\t\t\th = (1 / 3) + rdif - bdif;\n\t\t} else if (b === v) {\n\t\t\th = (2 / 3) + gdif - rdif;\n\t\t}\n\n\t\tif (h < 0) {\n\t\t\th += 1;\n\t\t} else if (h > 1) {\n\t\t\th -= 1;\n\t\t}\n\t}\n\n\treturn [\n\t\th * 360,\n\t\ts * 100,\n\t\tv * 100\n\t];\n};\n\nconvert.rgb.hwb = function (rgb) {\n\tconst r = rgb[0];\n\tconst g = rgb[1];\n\tlet b = rgb[2];\n\tconst h = convert.rgb.hsl(rgb)[0];\n\tconst w = 1 / 255 * Math.min(r, Math.min(g, b));\n\n\tb = 1 - 1 / 255 * Math.max(r, Math.max(g, b));\n\n\treturn [h, w * 100, b * 100];\n};\n\nconvert.rgb.cmyk = function (rgb) {\n\tconst r = rgb[0] / 255;\n\tconst g = rgb[1] / 255;\n\tconst b = rgb[2] / 255;\n\n\tconst k = Math.min(1 - r, 1 - g, 1 - b);\n\tconst c = (1 - r - k) / (1 - k) || 0;\n\tconst m = (1 - g - k) / (1 - k) || 0;\n\tconst y = (1 - b - k) / (1 - k) || 0;\n\n\treturn [c * 100, m * 100, y * 100, k * 100];\n};\n\nfunction comparativeDistance(x, y) {\n\t/*\n\t\tSee https://en.m.wikipedia.org/wiki/Euclidean_distance#Squared_Euclidean_distance\n\t*/\n\treturn (\n\t\t((x[0] - y[0]) ** 2) +\n\t\t((x[1] - y[1]) ** 2) +\n\t\t((x[2] - y[2]) ** 2)\n\t);\n}\n\nconvert.rgb.keyword = function (rgb) {\n\tconst reversed = reverseKeywords[rgb];\n\tif (reversed) {\n\t\treturn reversed;\n\t}\n\n\tlet currentClosestDistance = Infinity;\n\tlet currentClosestKeyword;\n\n\tfor (const keyword of Object.keys(cssKeywords)) {\n\t\tconst value = cssKeywords[keyword];\n\n\t\t// Compute comparative distance\n\t\tconst distance = comparativeDistance(rgb, value);\n\n\t\t// Check if its less, if so set as closest\n\t\tif (distance < currentClosestDistance) {\n\t\t\tcurrentClosestDistance = distance;\n\t\t\tcurrentClosestKeyword = keyword;\n\t\t}\n\t}\n\n\treturn currentClosestKeyword;\n};\n\nconvert.keyword.rgb = function (keyword) {\n\treturn cssKeywords[keyword];\n};\n\nconvert.rgb.xyz = function (rgb) {\n\tlet r = rgb[0] / 255;\n\tlet g = rgb[1] / 255;\n\tlet b = rgb[2] / 255;\n\n\t// Assume sRGB\n\tr = r > 0.04045 ? (((r + 0.055) / 1.055) ** 2.4) : (r / 12.92);\n\tg = g > 0.04045 ? (((g + 0.055) / 1.055) ** 2.4) : (g / 12.92);\n\tb = b > 0.04045 ? (((b + 0.055) / 1.055) ** 2.4) : (b / 12.92);\n\n\tconst x = (r * 0.4124) + (g * 0.3576) + (b * 0.1805);\n\tconst y = (r * 0.2126) + (g * 0.7152) + (b * 0.0722);\n\tconst z = (r * 0.0193) + (g * 0.1192) + (b * 0.9505);\n\n\treturn [x * 100, y * 100, z * 100];\n};\n\nconvert.rgb.lab = function (rgb) {\n\tconst xyz = convert.rgb.xyz(rgb);\n\tlet x = xyz[0];\n\tlet y = xyz[1];\n\tlet z = xyz[2];\n\n\tx /= 95.047;\n\ty /= 100;\n\tz /= 108.883;\n\n\tx = x > 0.008856 ? (x ** (1 / 3)) : (7.787 * x) + (16 / 116);\n\ty = y > 0.008856 ? (y ** (1 / 3)) : (7.787 * y) + (16 / 116);\n\tz = z > 0.008856 ? (z ** (1 / 3)) : (7.787 * z) + (16 / 116);\n\n\tconst l = (116 * y) - 16;\n\tconst a = 500 * (x - y);\n\tconst b = 200 * (y - z);\n\n\treturn [l, a, b];\n};\n\nconvert.hsl.rgb = function (hsl) {\n\tconst h = hsl[0] / 360;\n\tconst s = hsl[1] / 100;\n\tconst l = hsl[2] / 100;\n\tlet t2;\n\tlet t3;\n\tlet val;\n\n\tif (s === 0) {\n\t\tval = l * 255;\n\t\treturn [val, val, val];\n\t}\n\n\tif (l < 0.5) {\n\t\tt2 = l * (1 + s);\n\t} else {\n\t\tt2 = l + s - l * s;\n\t}\n\n\tconst t1 = 2 * l - t2;\n\n\tconst rgb = [0, 0, 0];\n\tfor (let i = 0; i < 3; i++) {\n\t\tt3 = h + 1 / 3 * -(i - 1);\n\t\tif (t3 < 0) {\n\t\t\tt3++;\n\t\t}\n\n\t\tif (t3 > 1) {\n\t\t\tt3--;\n\t\t}\n\n\t\tif (6 * t3 < 1) {\n\t\t\tval = t1 + (t2 - t1) * 6 * t3;\n\t\t} else if (2 * t3 < 1) {\n\t\t\tval = t2;\n\t\t} else if (3 * t3 < 2) {\n\t\t\tval = t1 + (t2 - t1) * (2 / 3 - t3) * 6;\n\t\t} else {\n\t\t\tval = t1;\n\t\t}\n\n\t\trgb[i] = val * 255;\n\t}\n\n\treturn rgb;\n};\n\nconvert.hsl.hsv = function (hsl) {\n\tconst h = hsl[0];\n\tlet s = hsl[1] / 100;\n\tlet l = hsl[2] / 100;\n\tlet smin = s;\n\tconst lmin = Math.max(l, 0.01);\n\n\tl *= 2;\n\ts *= (l <= 1) ? l : 2 - l;\n\tsmin *= lmin <= 1 ? lmin : 2 - lmin;\n\tconst v = (l + s) / 2;\n\tconst sv = l === 0 ? (2 * smin) / (lmin + smin) : (2 * s) / (l + s);\n\n\treturn [h, sv * 100, v * 100];\n};\n\nconvert.hsv.rgb = function (hsv) {\n\tconst h = hsv[0] / 60;\n\tconst s = hsv[1] / 100;\n\tlet v = hsv[2] / 100;\n\tconst hi = Math.floor(h) % 6;\n\n\tconst f = h - Math.floor(h);\n\tconst p = 255 * v * (1 - s);\n\tconst q = 255 * v * (1 - (s * f));\n\tconst t = 255 * v * (1 - (s * (1 - f)));\n\tv *= 255;\n\n\tswitch (hi) {\n\t\tcase 0:\n\t\t\treturn [v, t, p];\n\t\tcase 1:\n\t\t\treturn [q, v, p];\n\t\tcase 2:\n\t\t\treturn [p, v, t];\n\t\tcase 3:\n\t\t\treturn [p, q, v];\n\t\tcase 4:\n\t\t\treturn [t, p, v];\n\t\tcase 5:\n\t\t\treturn [v, p, q];\n\t}\n};\n\nconvert.hsv.hsl = function (hsv) {\n\tconst h = hsv[0];\n\tconst s = hsv[1] / 100;\n\tconst v = hsv[2] / 100;\n\tconst vmin = Math.max(v, 0.01);\n\tlet sl;\n\tlet l;\n\n\tl = (2 - s) * v;\n\tconst lmin = (2 - s) * vmin;\n\tsl = s * vmin;\n\tsl /= (lmin <= 1) ? lmin : 2 - lmin;\n\tsl = sl || 0;\n\tl /= 2;\n\n\treturn [h, sl * 100, l * 100];\n};\n\n// http://dev.w3.org/csswg/css-color/#hwb-to-rgb\nconvert.hwb.rgb = function (hwb) {\n\tconst h = hwb[0] / 360;\n\tlet wh = hwb[1] / 100;\n\tlet bl = hwb[2] / 100;\n\tconst ratio = wh + bl;\n\tlet f;\n\n\t// Wh + bl cant be > 1\n\tif (ratio > 1) {\n\t\twh /= ratio;\n\t\tbl /= ratio;\n\t}\n\n\tconst i = Math.floor(6 * h);\n\tconst v = 1 - bl;\n\tf = 6 * h - i;\n\n\tif ((i & 0x01) !== 0) {\n\t\tf = 1 - f;\n\t}\n\n\tconst n = wh + f * (v - wh); // Linear interpolation\n\n\tlet r;\n\tlet g;\n\tlet b;\n\t/* eslint-disable max-statements-per-line,no-multi-spaces */\n\tswitch (i) {\n\t\tdefault:\n\t\tcase 6:\n\t\tcase 0: r = v;  g = n;  b = wh; break;\n\t\tcase 1: r = n;  g = v;  b = wh; break;\n\t\tcase 2: r = wh; g = v;  b = n; break;\n\t\tcase 3: r = wh; g = n;  b = v; break;\n\t\tcase 4: r = n;  g = wh; b = v; break;\n\t\tcase 5: r = v;  g = wh; b = n; break;\n\t}\n\t/* eslint-enable max-statements-per-line,no-multi-spaces */\n\n\treturn [r * 255, g * 255, b * 255];\n};\n\nconvert.cmyk.rgb = function (cmyk) {\n\tconst c = cmyk[0] / 100;\n\tconst m = cmyk[1] / 100;\n\tconst y = cmyk[2] / 100;\n\tconst k = cmyk[3] / 100;\n\n\tconst r = 1 - Math.min(1, c * (1 - k) + k);\n\tconst g = 1 - Math.min(1, m * (1 - k) + k);\n\tconst b = 1 - Math.min(1, y * (1 - k) + k);\n\n\treturn [r * 255, g * 255, b * 255];\n};\n\nconvert.xyz.rgb = function (xyz) {\n\tconst x = xyz[0] / 100;\n\tconst y = xyz[1] / 100;\n\tconst z = xyz[2] / 100;\n\tlet r;\n\tlet g;\n\tlet b;\n\n\tr = (x * 3.2406) + (y * -1.5372) + (z * -0.4986);\n\tg = (x * -0.9689) + (y * 1.8758) + (z * 0.0415);\n\tb = (x * 0.0557) + (y * -0.2040) + (z * 1.0570);\n\n\t// Assume sRGB\n\tr = r > 0.0031308\n\t\t? ((1.055 * (r ** (1.0 / 2.4))) - 0.055)\n\t\t: r * 12.92;\n\n\tg = g > 0.0031308\n\t\t? ((1.055 * (g ** (1.0 / 2.4))) - 0.055)\n\t\t: g * 12.92;\n\n\tb = b > 0.0031308\n\t\t? ((1.055 * (b ** (1.0 / 2.4))) - 0.055)\n\t\t: b * 12.92;\n\n\tr = Math.min(Math.max(0, r), 1);\n\tg = Math.min(Math.max(0, g), 1);\n\tb = Math.min(Math.max(0, b), 1);\n\n\treturn [r * 255, g * 255, b * 255];\n};\n\nconvert.xyz.lab = function (xyz) {\n\tlet x = xyz[0];\n\tlet y = xyz[1];\n\tlet z = xyz[2];\n\n\tx /= 95.047;\n\ty /= 100;\n\tz /= 108.883;\n\n\tx = x > 0.008856 ? (x ** (1 / 3)) : (7.787 * x) + (16 / 116);\n\ty = y > 0.008856 ? (y ** (1 / 3)) : (7.787 * y) + (16 / 116);\n\tz = z > 0.008856 ? (z ** (1 / 3)) : (7.787 * z) + (16 / 116);\n\n\tconst l = (116 * y) - 16;\n\tconst a = 500 * (x - y);\n\tconst b = 200 * (y - z);\n\n\treturn [l, a, b];\n};\n\nconvert.lab.xyz = function (lab) {\n\tconst l = lab[0];\n\tconst a = lab[1];\n\tconst b = lab[2];\n\tlet x;\n\tlet y;\n\tlet z;\n\n\ty = (l + 16) / 116;\n\tx = a / 500 + y;\n\tz = y - b / 200;\n\n\tconst y2 = y ** 3;\n\tconst x2 = x ** 3;\n\tconst z2 = z ** 3;\n\ty = y2 > 0.008856 ? y2 : (y - 16 / 116) / 7.787;\n\tx = x2 > 0.008856 ? x2 : (x - 16 / 116) / 7.787;\n\tz = z2 > 0.008856 ? z2 : (z - 16 / 116) / 7.787;\n\n\tx *= 95.047;\n\ty *= 100;\n\tz *= 108.883;\n\n\treturn [x, y, z];\n};\n\nconvert.lab.lch = function (lab) {\n\tconst l = lab[0];\n\tconst a = lab[1];\n\tconst b = lab[2];\n\tlet h;\n\n\tconst hr = Math.atan2(b, a);\n\th = hr * 360 / 2 / Math.PI;\n\n\tif (h < 0) {\n\t\th += 360;\n\t}\n\n\tconst c = Math.sqrt(a * a + b * b);\n\n\treturn [l, c, h];\n};\n\nconvert.lch.lab = function (lch) {\n\tconst l = lch[0];\n\tconst c = lch[1];\n\tconst h = lch[2];\n\n\tconst hr = h / 360 * 2 * Math.PI;\n\tconst a = c * Math.cos(hr);\n\tconst b = c * Math.sin(hr);\n\n\treturn [l, a, b];\n};\n\nconvert.rgb.ansi16 = function (args, saturation = null) {\n\tconst [r, g, b] = args;\n\tlet value = saturation === null ? convert.rgb.hsv(args)[2] : saturation; // Hsv -> ansi16 optimization\n\n\tvalue = Math.round(value / 50);\n\n\tif (value === 0) {\n\t\treturn 30;\n\t}\n\n\tlet ansi = 30\n\t\t+ ((Math.round(b / 255) << 2)\n\t\t| (Math.round(g / 255) << 1)\n\t\t| Math.round(r / 255));\n\n\tif (value === 2) {\n\t\tansi += 60;\n\t}\n\n\treturn ansi;\n};\n\nconvert.hsv.ansi16 = function (args) {\n\t// Optimization here; we already know the value and don't need to get\n\t// it converted for us.\n\treturn convert.rgb.ansi16(convert.hsv.rgb(args), args[2]);\n};\n\nconvert.rgb.ansi256 = function (args) {\n\tconst r = args[0];\n\tconst g = args[1];\n\tconst b = args[2];\n\n\t// We use the extended greyscale palette here, with the exception of\n\t// black and white. normal palette only has 4 greyscale shades.\n\tif (r === g && g === b) {\n\t\tif (r < 8) {\n\t\t\treturn 16;\n\t\t}\n\n\t\tif (r > 248) {\n\t\t\treturn 231;\n\t\t}\n\n\t\treturn Math.round(((r - 8) / 247) * 24) + 232;\n\t}\n\n\tconst ansi = 16\n\t\t+ (36 * Math.round(r / 255 * 5))\n\t\t+ (6 * Math.round(g / 255 * 5))\n\t\t+ Math.round(b / 255 * 5);\n\n\treturn ansi;\n};\n\nconvert.ansi16.rgb = function (args) {\n\tlet color = args % 10;\n\n\t// Handle greyscale\n\tif (color === 0 || color === 7) {\n\t\tif (args > 50) {\n\t\t\tcolor += 3.5;\n\t\t}\n\n\t\tcolor = color / 10.5 * 255;\n\n\t\treturn [color, color, color];\n\t}\n\n\tconst mult = (~~(args > 50) + 1) * 0.5;\n\tconst r = ((color & 1) * mult) * 255;\n\tconst g = (((color >> 1) & 1) * mult) * 255;\n\tconst b = (((color >> 2) & 1) * mult) * 255;\n\n\treturn [r, g, b];\n};\n\nconvert.ansi256.rgb = function (args) {\n\t// Handle greyscale\n\tif (args >= 232) {\n\t\tconst c = (args - 232) * 10 + 8;\n\t\treturn [c, c, c];\n\t}\n\n\targs -= 16;\n\n\tlet rem;\n\tconst r = Math.floor(args / 36) / 5 * 255;\n\tconst g = Math.floor((rem = args % 36) / 6) / 5 * 255;\n\tconst b = (rem % 6) / 5 * 255;\n\n\treturn [r, g, b];\n};\n\nconvert.rgb.hex = function (args) {\n\tconst integer = ((Math.round(args[0]) & 0xFF) << 16)\n\t\t+ ((Math.round(args[1]) & 0xFF) << 8)\n\t\t+ (Math.round(args[2]) & 0xFF);\n\n\tconst string = integer.toString(16).toUpperCase();\n\treturn '000000'.substring(string.length) + string;\n};\n\nconvert.hex.rgb = function (args) {\n\tconst match = args.toString(16).match(/[a-f0-9]{6}|[a-f0-9]{3}/i);\n\tif (!match) {\n\t\treturn [0, 0, 0];\n\t}\n\n\tlet colorString = match[0];\n\n\tif (match[0].length === 3) {\n\t\tcolorString = colorString.split('').map(char => {\n\t\t\treturn char + char;\n\t\t}).join('');\n\t}\n\n\tconst integer = parseInt(colorString, 16);\n\tconst r = (integer >> 16) & 0xFF;\n\tconst g = (integer >> 8) & 0xFF;\n\tconst b = integer & 0xFF;\n\n\treturn [r, g, b];\n};\n\nconvert.rgb.hcg = function (rgb) {\n\tconst r = rgb[0] / 255;\n\tconst g = rgb[1] / 255;\n\tconst b = rgb[2] / 255;\n\tconst max = Math.max(Math.max(r, g), b);\n\tconst min = Math.min(Math.min(r, g), b);\n\tconst chroma = (max - min);\n\tlet grayscale;\n\tlet hue;\n\n\tif (chroma < 1) {\n\t\tgrayscale = min / (1 - chroma);\n\t} else {\n\t\tgrayscale = 0;\n\t}\n\n\tif (chroma <= 0) {\n\t\thue = 0;\n\t} else\n\tif (max === r) {\n\t\thue = ((g - b) / chroma) % 6;\n\t} else\n\tif (max === g) {\n\t\thue = 2 + (b - r) / chroma;\n\t} else {\n\t\thue = 4 + (r - g) / chroma;\n\t}\n\n\thue /= 6;\n\thue %= 1;\n\n\treturn [hue * 360, chroma * 100, grayscale * 100];\n};\n\nconvert.hsl.hcg = function (hsl) {\n\tconst s = hsl[1] / 100;\n\tconst l = hsl[2] / 100;\n\n\tconst c = l < 0.5 ? (2.0 * s * l) : (2.0 * s * (1.0 - l));\n\n\tlet f = 0;\n\tif (c < 1.0) {\n\t\tf = (l - 0.5 * c) / (1.0 - c);\n\t}\n\n\treturn [hsl[0], c * 100, f * 100];\n};\n\nconvert.hsv.hcg = function (hsv) {\n\tconst s = hsv[1] / 100;\n\tconst v = hsv[2] / 100;\n\n\tconst c = s * v;\n\tlet f = 0;\n\n\tif (c < 1.0) {\n\t\tf = (v - c) / (1 - c);\n\t}\n\n\treturn [hsv[0], c * 100, f * 100];\n};\n\nconvert.hcg.rgb = function (hcg) {\n\tconst h = hcg[0] / 360;\n\tconst c = hcg[1] / 100;\n\tconst g = hcg[2] / 100;\n\n\tif (c === 0.0) {\n\t\treturn [g * 255, g * 255, g * 255];\n\t}\n\n\tconst pure = [0, 0, 0];\n\tconst hi = (h % 1) * 6;\n\tconst v = hi % 1;\n\tconst w = 1 - v;\n\tlet mg = 0;\n\n\t/* eslint-disable max-statements-per-line */\n\tswitch (Math.floor(hi)) {\n\t\tcase 0:\n\t\t\tpure[0] = 1; pure[1] = v; pure[2] = 0; break;\n\t\tcase 1:\n\t\t\tpure[0] = w; pure[1] = 1; pure[2] = 0; break;\n\t\tcase 2:\n\t\t\tpure[0] = 0; pure[1] = 1; pure[2] = v; break;\n\t\tcase 3:\n\t\t\tpure[0] = 0; pure[1] = w; pure[2] = 1; break;\n\t\tcase 4:\n\t\t\tpure[0] = v; pure[1] = 0; pure[2] = 1; break;\n\t\tdefault:\n\t\t\tpure[0] = 1; pure[1] = 0; pure[2] = w;\n\t}\n\t/* eslint-enable max-statements-per-line */\n\n\tmg = (1.0 - c) * g;\n\n\treturn [\n\t\t(c * pure[0] + mg) * 255,\n\t\t(c * pure[1] + mg) * 255,\n\t\t(c * pure[2] + mg) * 255\n\t];\n};\n\nconvert.hcg.hsv = function (hcg) {\n\tconst c = hcg[1] / 100;\n\tconst g = hcg[2] / 100;\n\n\tconst v = c + g * (1.0 - c);\n\tlet f = 0;\n\n\tif (v > 0.0) {\n\t\tf = c / v;\n\t}\n\n\treturn [hcg[0], f * 100, v * 100];\n};\n\nconvert.hcg.hsl = function (hcg) {\n\tconst c = hcg[1] / 100;\n\tconst g = hcg[2] / 100;\n\n\tconst l = g * (1.0 - c) + 0.5 * c;\n\tlet s = 0;\n\n\tif (l > 0.0 && l < 0.5) {\n\t\ts = c / (2 * l);\n\t} else\n\tif (l >= 0.5 && l < 1.0) {\n\t\ts = c / (2 * (1 - l));\n\t}\n\n\treturn [hcg[0], s * 100, l * 100];\n};\n\nconvert.hcg.hwb = function (hcg) {\n\tconst c = hcg[1] / 100;\n\tconst g = hcg[2] / 100;\n\tconst v = c + g * (1.0 - c);\n\treturn [hcg[0], (v - c) * 100, (1 - v) * 100];\n};\n\nconvert.hwb.hcg = function (hwb) {\n\tconst w = hwb[1] / 100;\n\tconst b = hwb[2] / 100;\n\tconst v = 1 - b;\n\tconst c = v - w;\n\tlet g = 0;\n\n\tif (c < 1) {\n\t\tg = (v - c) / (1 - c);\n\t}\n\n\treturn [hwb[0], c * 100, g * 100];\n};\n\nconvert.apple.rgb = function (apple) {\n\treturn [(apple[0] / 65535) * 255, (apple[1] / 65535) * 255, (apple[2] / 65535) * 255];\n};\n\nconvert.rgb.apple = function (rgb) {\n\treturn [(rgb[0] / 255) * 65535, (rgb[1] / 255) * 65535, (rgb[2] / 255) * 65535];\n};\n\nconvert.gray.rgb = function (args) {\n\treturn [args[0] / 100 * 255, args[0] / 100 * 255, args[0] / 100 * 255];\n};\n\nconvert.gray.hsl = function (args) {\n\treturn [0, 0, args[0]];\n};\n\nconvert.gray.hsv = convert.gray.hsl;\n\nconvert.gray.hwb = function (gray) {\n\treturn [0, 100, gray[0]];\n};\n\nconvert.gray.cmyk = function (gray) {\n\treturn [0, 0, 0, gray[0]];\n};\n\nconvert.gray.lab = function (gray) {\n\treturn [gray[0], 0, 0];\n};\n\nconvert.gray.hex = function (gray) {\n\tconst val = Math.round(gray[0] / 100 * 255) & 0xFF;\n\tconst integer = (val << 16) + (val << 8) + val;\n\n\tconst string = integer.toString(16).toUpperCase();\n\treturn '000000'.substring(string.length) + string;\n};\n\nconvert.rgb.gray = function (rgb) {\n\tconst val = (rgb[0] + rgb[1] + rgb[2]) / 3;\n\treturn [val / 255 * 100];\n};\n","const conversions = require('./conversions');\n\n/*\n\tThis function routes a model to all other models.\n\n\tall functions that are routed have a property `.conversion` attached\n\tto the returned synthetic function. This property is an array\n\tof strings, each with the steps in between the 'from' and 'to'\n\tcolor models (inclusive).\n\n\tconversions that are not possible simply are not included.\n*/\n\nfunction buildGraph() {\n\tconst graph = {};\n\t// https://jsperf.com/object-keys-vs-for-in-with-closure/3\n\tconst models = Object.keys(conversions);\n\n\tfor (let len = models.length, i = 0; i < len; i++) {\n\t\tgraph[models[i]] = {\n\t\t\t// http://jsperf.com/1-vs-infinity\n\t\t\t// micro-opt, but this is simple.\n\t\t\tdistance: -1,\n\t\t\tparent: null\n\t\t};\n\t}\n\n\treturn graph;\n}\n\n// https://en.wikipedia.org/wiki/Breadth-first_search\nfunction deriveBFS(fromModel) {\n\tconst graph = buildGraph();\n\tconst queue = [fromModel]; // Unshift -> queue -> pop\n\n\tgraph[fromModel].distance = 0;\n\n\twhile (queue.length) {\n\t\tconst current = queue.pop();\n\t\tconst adjacents = Object.keys(conversions[current]);\n\n\t\tfor (let len = adjacents.length, i = 0; i < len; i++) {\n\t\t\tconst adjacent = adjacents[i];\n\t\t\tconst node = graph[adjacent];\n\n\t\t\tif (node.distance === -1) {\n\t\t\t\tnode.distance = graph[current].distance + 1;\n\t\t\t\tnode.parent = current;\n\t\t\t\tqueue.unshift(adjacent);\n\t\t\t}\n\t\t}\n\t}\n\n\treturn graph;\n}\n\nfunction link(from, to) {\n\treturn function (args) {\n\t\treturn to(from(args));\n\t};\n}\n\nfunction wrapConversion(toModel, graph) {\n\tconst path = [graph[toModel].parent, toModel];\n\tlet fn = conversions[graph[toModel].parent][toModel];\n\n\tlet cur = graph[toModel].parent;\n\twhile (graph[cur].parent) {\n\t\tpath.unshift(graph[cur].parent);\n\t\tfn = link(conversions[graph[cur].parent][cur], fn);\n\t\tcur = graph[cur].parent;\n\t}\n\n\tfn.conversion = path;\n\treturn fn;\n}\n\nmodule.exports = function (fromModel) {\n\tconst graph = deriveBFS(fromModel);\n\tconst conversion = {};\n\n\tconst models = Object.keys(graph);\n\tfor (let len = models.length, i = 0; i < len; i++) {\n\t\tconst toModel = models[i];\n\t\tconst node = graph[toModel];\n\n\t\tif (node.parent === null) {\n\t\t\t// No possible conversion, or this node is the source model.\n\t\t\tcontinue;\n\t\t}\n\n\t\tconversion[toModel] = wrapConversion(toModel, graph);\n\t}\n\n\treturn conversion;\n};\n\n","const conversions = require('./conversions');\nconst route = require('./route');\n\nconst convert = {};\n\nconst models = Object.keys(conversions);\n\nfunction wrapRaw(fn) {\n\tconst wrappedFn = function (...args) {\n\t\tconst arg0 = args[0];\n\t\tif (arg0 === undefined || arg0 === null) {\n\t\t\treturn arg0;\n\t\t}\n\n\t\tif (arg0.length > 1) {\n\t\t\targs = arg0;\n\t\t}\n\n\t\treturn fn(args);\n\t};\n\n\t// Preserve .conversion property if there is one\n\tif ('conversion' in fn) {\n\t\twrappedFn.conversion = fn.conversion;\n\t}\n\n\treturn wrappedFn;\n}\n\nfunction wrapRounded(fn) {\n\tconst wrappedFn = function (...args) {\n\t\tconst arg0 = args[0];\n\n\t\tif (arg0 === undefined || arg0 === null) {\n\t\t\treturn arg0;\n\t\t}\n\n\t\tif (arg0.length > 1) {\n\t\t\targs = arg0;\n\t\t}\n\n\t\tconst result = fn(args);\n\n\t\t// We're assuming the result is an array here.\n\t\t// see notice in conversions.js; don't use box types\n\t\t// in conversion functions.\n\t\tif (typeof result === 'object') {\n\t\t\tfor (let len = result.length, i = 0; i < len; i++) {\n\t\t\t\tresult[i] = Math.round(result[i]);\n\t\t\t}\n\t\t}\n\n\t\treturn result;\n\t};\n\n\t// Preserve .conversion property if there is one\n\tif ('conversion' in fn) {\n\t\twrappedFn.conversion = fn.conversion;\n\t}\n\n\treturn wrappedFn;\n}\n\nmodels.forEach(fromModel => {\n\tconvert[fromModel] = {};\n\n\tObject.defineProperty(convert[fromModel], 'channels', {value: conversions[fromModel].channels});\n\tObject.defineProperty(convert[fromModel], 'labels', {value: conversions[fromModel].labels});\n\n\tconst routes = route(fromModel);\n\tconst routeModels = Object.keys(routes);\n\n\trouteModels.forEach(toModel => {\n\t\tconst fn = routes[toModel];\n\n\t\tconvert[fromModel][toModel] = wrapRounded(fn);\n\t\tconvert[fromModel][toModel].raw = wrapRaw(fn);\n\t});\n});\n\nmodule.exports = convert;\n","const colorString = require('color-string');\nconst convert = require('color-convert');\n\nconst skippedModels = [\n\t// To be honest, I don't really feel like keyword belongs in color convert, but eh.\n\t'keyword',\n\n\t// Gray conflicts with some method names, and has its own method defined.\n\t'gray',\n\n\t// Shouldn't really be in color-convert either...\n\t'hex',\n];\n\nconst hashedModelKeys = {};\nfor (const model of Object.keys(convert)) {\n\thashedModelKeys[[...convert[model].labels].sort().join('')] = model;\n}\n\nconst limiters = {};\n\nfunction Color(object, model) {\n\tif (!(this instanceof Color)) {\n\t\treturn new Color(object, model);\n\t}\n\n\tif (model && model in skippedModels) {\n\t\tmodel = null;\n\t}\n\n\tif (model && !(model in convert)) {\n\t\tthrow new Error('Unknown model: ' + model);\n\t}\n\n\tlet i;\n\tlet channels;\n\n\tif (object == null) { // eslint-disable-line no-eq-null,eqeqeq\n\t\tthis.model = 'rgb';\n\t\tthis.color = [0, 0, 0];\n\t\tthis.valpha = 1;\n\t} else if (object instanceof Color) {\n\t\tthis.model = object.model;\n\t\tthis.color = [...object.color];\n\t\tthis.valpha = object.valpha;\n\t} else if (typeof object === 'string') {\n\t\tconst result = colorString.get(object);\n\t\tif (result === null) {\n\t\t\tthrow new Error('Unable to parse color from string: ' + object);\n\t\t}\n\n\t\tthis.model = result.model;\n\t\tchannels = convert[this.model].channels;\n\t\tthis.color = result.value.slice(0, channels);\n\t\tthis.valpha = typeof result.value[channels] === 'number' ? result.value[channels] : 1;\n\t} else if (object.length > 0) {\n\t\tthis.model = model || 'rgb';\n\t\tchannels = convert[this.model].channels;\n\t\tconst newArray = Array.prototype.slice.call(object, 0, channels);\n\t\tthis.color = zeroArray(newArray, channels);\n\t\tthis.valpha = typeof object[channels] === 'number' ? object[channels] : 1;\n\t} else if (typeof object === 'number') {\n\t\t// This is always RGB - can be converted later on.\n\t\tthis.model = 'rgb';\n\t\tthis.color = [\n\t\t\t(object >> 16) & 0xFF,\n\t\t\t(object >> 8) & 0xFF,\n\t\t\tobject & 0xFF,\n\t\t];\n\t\tthis.valpha = 1;\n\t} else {\n\t\tthis.valpha = 1;\n\n\t\tconst keys = Object.keys(object);\n\t\tif ('alpha' in object) {\n\t\t\tkeys.splice(keys.indexOf('alpha'), 1);\n\t\t\tthis.valpha = typeof object.alpha === 'number' ? object.alpha : 0;\n\t\t}\n\n\t\tconst hashedKeys = keys.sort().join('');\n\t\tif (!(hashedKeys in hashedModelKeys)) {\n\t\t\tthrow new Error('Unable to parse color from object: ' + JSON.stringify(object));\n\t\t}\n\n\t\tthis.model = hashedModelKeys[hashedKeys];\n\n\t\tconst {labels} = convert[this.model];\n\t\tconst color = [];\n\t\tfor (i = 0; i < labels.length; i++) {\n\t\t\tcolor.push(object[labels[i]]);\n\t\t}\n\n\t\tthis.color = zeroArray(color);\n\t}\n\n\t// Perform limitations (clamping, etc.)\n\tif (limiters[this.model]) {\n\t\tchannels = convert[this.model].channels;\n\t\tfor (i = 0; i < channels; i++) {\n\t\t\tconst limit = limiters[this.model][i];\n\t\t\tif (limit) {\n\t\t\t\tthis.color[i] = limit(this.color[i]);\n\t\t\t}\n\t\t}\n\t}\n\n\tthis.valpha = Math.max(0, Math.min(1, this.valpha));\n\n\tif (Object.freeze) {\n\t\tObject.freeze(this);\n\t}\n}\n\nColor.prototype = {\n\ttoString() {\n\t\treturn this.string();\n\t},\n\n\ttoJSON() {\n\t\treturn this[this.model]();\n\t},\n\n\tstring(places) {\n\t\tlet self = this.model in colorString.to ? this : this.rgb();\n\t\tself = self.round(typeof places === 'number' ? places : 1);\n\t\tconst args = self.valpha === 1 ? self.color : [...self.color, this.valpha];\n\t\treturn colorString.to[self.model](args);\n\t},\n\n\tpercentString(places) {\n\t\tconst self = this.rgb().round(typeof places === 'number' ? places : 1);\n\t\tconst args = self.valpha === 1 ? self.color : [...self.color, this.valpha];\n\t\treturn colorString.to.rgb.percent(args);\n\t},\n\n\tarray() {\n\t\treturn this.valpha === 1 ? [...this.color] : [...this.color, this.valpha];\n\t},\n\n\tobject() {\n\t\tconst result = {};\n\t\tconst {channels} = convert[this.model];\n\t\tconst {labels} = convert[this.model];\n\n\t\tfor (let i = 0; i < channels; i++) {\n\t\t\tresult[labels[i]] = this.color[i];\n\t\t}\n\n\t\tif (this.valpha !== 1) {\n\t\t\tresult.alpha = this.valpha;\n\t\t}\n\n\t\treturn result;\n\t},\n\n\tunitArray() {\n\t\tconst rgb = this.rgb().color;\n\t\trgb[0] /= 255;\n\t\trgb[1] /= 255;\n\t\trgb[2] /= 255;\n\n\t\tif (this.valpha !== 1) {\n\t\t\trgb.push(this.valpha);\n\t\t}\n\n\t\treturn rgb;\n\t},\n\n\tunitObject() {\n\t\tconst rgb = this.rgb().object();\n\t\trgb.r /= 255;\n\t\trgb.g /= 255;\n\t\trgb.b /= 255;\n\n\t\tif (this.valpha !== 1) {\n\t\t\trgb.alpha = this.valpha;\n\t\t}\n\n\t\treturn rgb;\n\t},\n\n\tround(places) {\n\t\tplaces = Math.max(places || 0, 0);\n\t\treturn new Color([...this.color.map(roundToPlace(places)), this.valpha], this.model);\n\t},\n\n\talpha(value) {\n\t\tif (value !== undefined) {\n\t\t\treturn new Color([...this.color, Math.max(0, Math.min(1, value))], this.model);\n\t\t}\n\n\t\treturn this.valpha;\n\t},\n\n\t// Rgb\n\tred: getset('rgb', 0, maxfn(255)),\n\tgreen: getset('rgb', 1, maxfn(255)),\n\tblue: getset('rgb', 2, maxfn(255)),\n\n\thue: getset(['hsl', 'hsv', 'hsl', 'hwb', 'hcg'], 0, value => ((value % 360) + 360) % 360),\n\n\tsaturationl: getset('hsl', 1, maxfn(100)),\n\tlightness: getset('hsl', 2, maxfn(100)),\n\n\tsaturationv: getset('hsv', 1, maxfn(100)),\n\tvalue: getset('hsv', 2, maxfn(100)),\n\n\tchroma: getset('hcg', 1, maxfn(100)),\n\tgray: getset('hcg', 2, maxfn(100)),\n\n\twhite: getset('hwb', 1, maxfn(100)),\n\twblack: getset('hwb', 2, maxfn(100)),\n\n\tcyan: getset('cmyk', 0, maxfn(100)),\n\tmagenta: getset('cmyk', 1, maxfn(100)),\n\tyellow: getset('cmyk', 2, maxfn(100)),\n\tblack: getset('cmyk', 3, maxfn(100)),\n\n\tx: getset('xyz', 0, maxfn(95.047)),\n\ty: getset('xyz', 1, maxfn(100)),\n\tz: getset('xyz', 2, maxfn(108.833)),\n\n\tl: getset('lab', 0, maxfn(100)),\n\ta: getset('lab', 1),\n\tb: getset('lab', 2),\n\n\tkeyword(value) {\n\t\tif (value !== undefined) {\n\t\t\treturn new Color(value);\n\t\t}\n\n\t\treturn convert[this.model].keyword(this.color);\n\t},\n\n\thex(value) {\n\t\tif (value !== undefined) {\n\t\t\treturn new Color(value);\n\t\t}\n\n\t\treturn colorString.to.hex(this.rgb().round().color);\n\t},\n\n\thexa(value) {\n\t\tif (value !== undefined) {\n\t\t\treturn new Color(value);\n\t\t}\n\n\t\tconst rgbArray = this.rgb().round().color;\n\n\t\tlet alphaHex = Math.round(this.valpha * 255).toString(16).toUpperCase();\n\t\tif (alphaHex.length === 1) {\n\t\t\talphaHex = '0' + alphaHex;\n\t\t}\n\n\t\treturn colorString.to.hex(rgbArray) + alphaHex;\n\t},\n\n\trgbNumber() {\n\t\tconst rgb = this.rgb().color;\n\t\treturn ((rgb[0] & 0xFF) << 16) | ((rgb[1] & 0xFF) << 8) | (rgb[2] & 0xFF);\n\t},\n\n\tluminosity() {\n\t\t// http://www.w3.org/TR/WCAG20/#relativeluminancedef\n\t\tconst rgb = this.rgb().color;\n\n\t\tconst lum = [];\n\t\tfor (const [i, element] of rgb.entries()) {\n\t\t\tconst chan = element / 255;\n\t\t\tlum[i] = (chan <= 0.04045) ? chan / 12.92 : ((chan + 0.055) / 1.055) ** 2.4;\n\t\t}\n\n\t\treturn 0.2126 * lum[0] + 0.7152 * lum[1] + 0.0722 * lum[2];\n\t},\n\n\tcontrast(color2) {\n\t\t// http://www.w3.org/TR/WCAG20/#contrast-ratiodef\n\t\tconst lum1 = this.luminosity();\n\t\tconst lum2 = color2.luminosity();\n\n\t\tif (lum1 > lum2) {\n\t\t\treturn (lum1 + 0.05) / (lum2 + 0.05);\n\t\t}\n\n\t\treturn (lum2 + 0.05) / (lum1 + 0.05);\n\t},\n\n\tlevel(color2) {\n\t\t// https://www.w3.org/TR/WCAG/#contrast-enhanced\n\t\tconst contrastRatio = this.contrast(color2);\n\t\tif (contrastRatio >= 7) {\n\t\t\treturn 'AAA';\n\t\t}\n\n\t\treturn (contrastRatio >= 4.5) ? 'AA' : '';\n\t},\n\n\tisDark() {\n\t\t// YIQ equation from http://24ways.org/2010/calculating-color-contrast\n\t\tconst rgb = this.rgb().color;\n\t\tconst yiq = (rgb[0] * 2126 + rgb[1] * 7152 + rgb[2] * 722) / 10000;\n\t\treturn yiq < 128;\n\t},\n\n\tisLight() {\n\t\treturn !this.isDark();\n\t},\n\n\tnegate() {\n\t\tconst rgb = this.rgb();\n\t\tfor (let i = 0; i < 3; i++) {\n\t\t\trgb.color[i] = 255 - rgb.color[i];\n\t\t}\n\n\t\treturn rgb;\n\t},\n\n\tlighten(ratio) {\n\t\tconst hsl = this.hsl();\n\t\thsl.color[2] += hsl.color[2] * ratio;\n\t\treturn hsl;\n\t},\n\n\tdarken(ratio) {\n\t\tconst hsl = this.hsl();\n\t\thsl.color[2] -= hsl.color[2] * ratio;\n\t\treturn hsl;\n\t},\n\n\tsaturate(ratio) {\n\t\tconst hsl = this.hsl();\n\t\thsl.color[1] += hsl.color[1] * ratio;\n\t\treturn hsl;\n\t},\n\n\tdesaturate(ratio) {\n\t\tconst hsl = this.hsl();\n\t\thsl.color[1] -= hsl.color[1] * ratio;\n\t\treturn hsl;\n\t},\n\n\twhiten(ratio) {\n\t\tconst hwb = this.hwb();\n\t\thwb.color[1] += hwb.color[1] * ratio;\n\t\treturn hwb;\n\t},\n\n\tblacken(ratio) {\n\t\tconst hwb = this.hwb();\n\t\thwb.color[2] += hwb.color[2] * ratio;\n\t\treturn hwb;\n\t},\n\n\tgrayscale() {\n\t\t// http://en.wikipedia.org/wiki/Grayscale#Converting_color_to_grayscale\n\t\tconst rgb = this.rgb().color;\n\t\tconst value = rgb[0] * 0.3 + rgb[1] * 0.59 + rgb[2] * 0.11;\n\t\treturn Color.rgb(value, value, value);\n\t},\n\n\tfade(ratio) {\n\t\treturn this.alpha(this.valpha - (this.valpha * ratio));\n\t},\n\n\topaquer(ratio) {\n\t\treturn this.alpha(this.valpha + (this.valpha * ratio));\n\t},\n\n\trotate(degrees) {\n\t\tconst hsl = this.hsl();\n\t\tlet hue = hsl.color[0];\n\t\thue = (hue + degrees) % 360;\n\t\thue = hue < 0 ? 360 + hue : hue;\n\t\thsl.color[0] = hue;\n\t\treturn hsl;\n\t},\n\n\tmix(mixinColor, weight) {\n\t\t// Ported from sass implementation in C\n\t\t// https://github.com/sass/libsass/blob/0e6b4a2850092356aa3ece07c6b249f0221caced/functions.cpp#L209\n\t\tif (!mixinColor || !mixinColor.rgb) {\n\t\t\tthrow new Error('Argument to \"mix\" was not a Color instance, but rather an instance of ' + typeof mixinColor);\n\t\t}\n\n\t\tconst color1 = mixinColor.rgb();\n\t\tconst color2 = this.rgb();\n\t\tconst p = weight === undefined ? 0.5 : weight;\n\n\t\tconst w = 2 * p - 1;\n\t\tconst a = color1.alpha() - color2.alpha();\n\n\t\tconst w1 = (((w * a === -1) ? w : (w + a) / (1 + w * a)) + 1) / 2;\n\t\tconst w2 = 1 - w1;\n\n\t\treturn Color.rgb(\n\t\t\tw1 * color1.red() + w2 * color2.red(),\n\t\t\tw1 * color1.green() + w2 * color2.green(),\n\t\t\tw1 * color1.blue() + w2 * color2.blue(),\n\t\t\tcolor1.alpha() * p + color2.alpha() * (1 - p));\n\t},\n};\n\n// Model conversion methods and static constructors\nfor (const model of Object.keys(convert)) {\n\tif (skippedModels.includes(model)) {\n\t\tcontinue;\n\t}\n\n\tconst {channels} = convert[model];\n\n\t// Conversion methods\n\tColor.prototype[model] = function (...args) {\n\t\tif (this.model === model) {\n\t\t\treturn new Color(this);\n\t\t}\n\n\t\tif (args.length > 0) {\n\t\t\treturn new Color(args, model);\n\t\t}\n\n\t\treturn new Color([...assertArray(convert[this.model][model].raw(this.color)), this.valpha], model);\n\t};\n\n\t// 'static' construction methods\n\tColor[model] = function (...args) {\n\t\tlet color = args[0];\n\t\tif (typeof color === 'number') {\n\t\t\tcolor = zeroArray(args, channels);\n\t\t}\n\n\t\treturn new Color(color, model);\n\t};\n}\n\nfunction roundTo(number, places) {\n\treturn Number(number.toFixed(places));\n}\n\nfunction roundToPlace(places) {\n\treturn function (number) {\n\t\treturn roundTo(number, places);\n\t};\n}\n\nfunction getset(model, channel, modifier) {\n\tmodel = Array.isArray(model) ? model : [model];\n\n\tfor (const m of model) {\n\t\t(limiters[m] || (limiters[m] = []))[channel] = modifier;\n\t}\n\n\tmodel = model[0];\n\n\treturn function (value) {\n\t\tlet result;\n\n\t\tif (value !== undefined) {\n\t\t\tif (modifier) {\n\t\t\t\tvalue = modifier(value);\n\t\t\t}\n\n\t\t\tresult = this[model]();\n\t\t\tresult.color[channel] = value;\n\t\t\treturn result;\n\t\t}\n\n\t\tresult = this[model]().color[channel];\n\t\tif (modifier) {\n\t\t\tresult = modifier(result);\n\t\t}\n\n\t\treturn result;\n\t};\n}\n\nfunction maxfn(max) {\n\treturn function (v) {\n\t\treturn Math.max(0, Math.min(max, v));\n\t};\n}\n\nfunction assertArray(value) {\n\treturn Array.isArray(value) ? value : [value];\n}\n\nfunction zeroArray(array, length) {\n\tfor (let i = 0; i < length; i++) {\n\t\tif (typeof array[i] !== 'number') {\n\t\t\tarray[i] = 0;\n\t\t}\n\t}\n\n\treturn array;\n}\n\nmodule.exports = Color;\n","import G6, { IGroup, IShape } from \"@antv/g6\";\nimport {\n  themeColor,\n  radius,\n  paddingH,\n  paddingV,\n  branch,\n  branchColor, globalTree, fontColor_root, isDragging, isCurrentEdit\n} from \"../variable\";\nimport Color from 'color';\n\nlet activeStrokeColor = Color(themeColor.value).fade(0.2).string();\n\nenum textBaseline {\n  top = \"top\"\n}\n\nconst {\n  Util\n} = G6;\n\nfunction drawAddBtn(group: IGroup, params?: { width?: number, height?: number, fillColor?: string, fontColor?: string, fontSize?: number }) {\n  if (!params) {\n    params = {}\n  }\n  params.fontSize = 16\n  params.fillColor = themeColor.value\n  params.fontColor = fontColor_root.value\n  const r = params.height / 4\n  const circleStyle = { x: params.width + r, y: params.height / 2, r, fill: params.fillColor, cursor: 'point' }\n  const textStyle = {\n    x: params.width + r - 5,\n    y: r - 1.5,\n    text: '+',\n    fill: params.fontColor,\n    fontSize: params.fontSize,\n    fontWeight: 600,\n    textBaseline: textBaseline.top,\n    cursor: 'point'\n  }\n  const container = group.addGroup({ name: 'add-btn', zIndex: 3, capture: true, action: 'add' })\n  container?.addShape('circle', { attrs: circleStyle, zIndex: 3, action: 'add' })\n  container?.addShape('text', { attrs: textStyle, zIndex: 3, action: 'add' })\n}\n\nfunction drawCollapse(group: IGroup, params: { width?, height?, collapseNum }) {\n  const fontSize = 14\n  if (params.collapseNum === 0) return\n  if (params.collapseNum > 99) params.collapseNum = '...'\n  const widthHeight = Util.getTextSize(params.collapseNum + '', fontSize);\n  const r = widthHeight[0] / 2 + 4\n  const lineStyle = {\n    x: params.width + 1,\n    y: params.height / 2 - 1,\n    width: 15,\n    height: 2,\n    fill: themeColor.value,\n  }\n  const circleStyle = {\n    x: params.width + lineStyle.width + r + 3,\n    y: params.height / 2 - r / 2 + 3,\n    r,\n    fill: 'transparent',\n    stroke: themeColor.value,\n    lineWidth: 2,\n    cursor: 'pointer'\n  }\n  const textStyle = {\n    x: params.width + lineStyle.width + r - widthHeight[0] / 2 + 3,\n    y: params.collapseNum === '...' ? params.height / 2 - r / 2 - 8 : params.height / 2 - r / 2 - 4,\n    text: params.collapseNum,\n    fill: themeColor.value,\n    fontSize,\n    fontWeight: 600,\n    textBaseline: textBaseline.top,\n    cursor: 'pointer'\n  }\n  const container = group.addGroup({ name: 'expand-btn', visible: true, capture: true })\n  container?.addShape('rect', { attrs: lineStyle })\n  container?.addShape('circle', { attrs: circleStyle, action: 'expand' })\n  container?.addShape('text', { attrs: textStyle, action: 'expand' })\n}\n\nfunction getAttribute(cfg) {\n  const { width, height, _children, isCurrentSelected, nameHeight, fontSize, descFontSize, descHeight, FillColor, FontColor, style } = cfg\n  const withStyle = (obj) => Object.assign({}, obj, style)\n  const RectStyle = withStyle({\n    x: 0,\n    y: 0,\n    width,\n    height,\n    radius,\n    fill: FillColor,\n    cursor: 'pointer',\n    stroke: isCurrentSelected ? activeStrokeColor : 'transparent',\n    lineWidth: 2\n  })\n  const TextStyle = withStyle({\n    x: paddingV,\n    y: paddingH,\n    text: cfg?.label,\n    fill: FontColor,\n    fontSize: fontSize,\n    textBaseline: textBaseline.top,\n    cursor: 'pointer',\n    fontWeight: 600,\n    lineHeight: paddingV + fontSize\n  })\n  const DescWrapper = withStyle({\n    x: 0,\n    y: nameHeight,\n    width,\n    height: descHeight,\n    radius: [0, 0, radius, radius],\n    fill: \"rgba(255,255,255,0.3)\",\n    cursor: 'pointer',\n    stroke: 'transparent',\n    lineWidth: 2\n  })\n  const DescText = withStyle({\n    x: paddingV,\n    y: paddingV + nameHeight,\n    text: cfg?.desc,\n    fill: FontColor,\n    fontSize: descFontSize,\n    textBaseline: textBaseline.top,\n    cursor: 'pointer',\n    lineHeight: paddingV + descFontSize\n  })\n  return { RectStyle, TextStyle, DescWrapper, DescText }\n}\n\nfunction buildNode(cfg, group) {\n  const { RectStyle, TextStyle, DescWrapper, DescText } = getAttribute(cfg);\n  const { depth, collapse } = cfg\n  const container = group?.addShape('rect', { attrs: RectStyle, name: `wrapper`, zIndex: 0, draggable: depth > 0 }) as IShape\n  group?.addShape('text', { attrs: TextStyle, name: `title`, zIndex: 1, draggable: depth > 0 })\n  if (cfg.desc) {\n    group?.addShape('rect', { attrs: DescWrapper, name: `desc-wrapper`, zIndex: 0, draggable: depth > 0 })\n    group?.addShape('text', { attrs: DescText, name: `desc`, zIndex: 1, draggable: depth > 0 })\n  }\n  if (collapse) {\n    drawCollapse(group, { collapseNum: cfg._children?.length, width: RectStyle.width, height: RectStyle.height })\n  }\n  else if (cfg.isCurrentSelected && !isDragging.value && !cfg.isCurrentEdit) {\n    drawAddBtn(group, { width: RectStyle.width, height: RectStyle.height })\n  }\n  return container\n}\n\nfunction setState(name, state, node) {\n  const group = node.getContainer();\n  let wrapper = group.get('children').filter(t => t.get('name') === 'wrapper')[0]\n  if (name === 'hover') {\n    let hoverColor = Color(themeColor.value).fade(0.5).string();\n    if (state) {\n      wrapper?.attr('stroke', hoverColor)\n    } else {\n      if (node.get('model').isCurrentSelected) {\n        wrapper?.attr('stroke', activeStrokeColor)\n      } else {\n        wrapper?.attr('stroke', 'transparent')\n      }\n    }\n  } else if (name === 'selected') {\n    wrapper?.attr('stroke', state ? activeStrokeColor : 'transparent')\n  }\n}\n// 根节点\nG6.registerNode(\n  'dice-mind-map-root', {\n  draw(cfg, group): IShape {\n    const container = buildNode(cfg, group);\n    return container;\n  },\n  setState,\n  getAnchorPoints() {\n    return [\n      [0, 0.5],\n      [1, 0.5],\n    ];\n  },\n}\n);\nG6.registerNode(\n  'dice-mind-map-sub', {\n  drawShape: function drawShape(cfg, group) {\n    const container = buildNode(cfg, group);\n    return container;\n  },\n  setState,\n  getAnchorPoints() {\n    return [\n      [0, 0.5],\n      [1, 0.5],\n    ];\n  },\n}\n);\nG6.registerNode(\n  'dice-mind-map-leaf', {\n  draw(cfg, group) {\n    const container = buildNode(cfg, group);\n    return container;\n  },\n  getAnchorPoints() {\n    return [\n      [0, 0.5],\n      [1, 0.5],\n    ];\n  },\n  setState\n}\n);\nG6.registerEdge('hvh', {\n  draw(cfg, group) {\n    if (!cfg || !group) return\n    const startPoint = cfg.startPoint;\n    const endPoint = cfg.endPoint;\n    let dist = endPoint.y < startPoint.y ? 10 : -10;\n    if (endPoint.y === startPoint.y) {\n      dist = 0;\n    }\n    const shape = group.addShape('path', {\n      attrs: {\n        stroke: branchColor.value,\n        lineWidth: branch.value,\n        opacity: cfg.style.opacity == null ? 1 : cfg.style.opacity,\n        path: [\n          ['M', startPoint.x, startPoint.y],\n          ['L', endPoint.x / 3 + (2 / 3) * (startPoint.x), startPoint.y], // 三分之一处\n          ['L', endPoint.x / 3 + (2 / 3) * (startPoint.x), startPoint.y + (endPoint.y - startPoint.y) + dist],\n          ['Q', endPoint.x / 3 + (2 / 3) * (startPoint.x), startPoint.y + (endPoint.y - startPoint.y), endPoint.x / 3 + (2 / 3) * (startPoint.x) + 10, endPoint.y], // 三分之二处\n          ['L', endPoint.x, endPoint.y],\n        ],\n      },\n      // must be assigned in G6 3.3 and later versions. it can be any value you want\n      name: 'path-shape',\n      zIndex: 0,\n    });\n    return shape;\n  },\n});\n","import G6 from \"@antv/g6\";\nimport { cancelAllSelect, edit, expand, findData, moveData, moveToChild, selectNode, getSelectedNodes, collapse, addData } from \"./methods\";\nimport {\n  branch,\n  branchColor,\n  globalFontSize,\n  globalTree,\n  maxFontCount,\n  paddingH,\n  radius,\n  themeColor,\n  lineType, isCurrentEdit,\n  placeholderText,\n  isDragging,\n  setIsDragging\n} from \"../variable\";\nimport emitter from \"../mitt\";\nimport hotkeys from \"./hotkeys\";\n\nG6.registerBehavior('edit-mindmap', {\n  selectNodeId: null,\n  dragNodeId: null,\n  nodePosition: {},\n  dragStatus: '',\n  upClientInfo: [],\n  getEvents() {\n    return {\n      'node:click': 'clickNode',\n      'node:dblclick': 'editNode',\n      'node:mouseover': 'hoverNode',\n      'node:mouseleave': 'clearHoverStatus',\n      'node:dragstart': 'dragStart',\n      'node:contextmenu': 'selectNode',\n      'keydown': 'keyDown',\n      'canvas:click': 'clickCanvas'\n    };\n  },\n  clickCanvas(evt) {\n    cancelAllSelect()\n  },\n  clickNode(evt) {\n    const tree = evt.currentTarget;\n    const model = evt.item.get('model');\n    const name = evt.target.get('action');\n    if (name === 'expand') {\n      expand(model.id)\n    } else if (name === 'collapse') {\n      collapse(model.id)\n    } else if (name === 'add') {\n      addData(model?.id as string, placeholderText, true)\n    } else if (model.isCurrentSelected) {\n      edit(model.id)\n    } else {\n      selectNode(model.id, !model.isCurrentSelected)\n      tree.findById(model.id).toFront();\n    }\n  },\n  selectNode(evt) {\n    const model = evt.item.get('model');\n    selectNode(model.id, !model.isCurrentSelected)\n  },\n  editNode(evt) {\n    const item = evt.item;\n    const model = item.get('model');\n    edit(model.id)\n  },\n  hoverNode(evt) {\n    const { currentTarget: tree, item: node } = evt\n    if (isDragging.value) return\n    tree.setItemState(node, 'hover', true)\n  },\n  clearHoverStatus(evt) {\n    const { currentTarget: tree, item: node } = evt\n    tree.setItemState(node, 'hover', false)\n  },\n  dragStart(evt) {\n    // 拖拽的节点及其所有子节点设置drag state 为true\n    const { currentTarget: tree, item: node, clientX, clientY } = evt\n    const id = node.get('model').id;\n    setIsDragging(true)\n    this.dragNodeId = id\n    const _dragnode = tree.findById(this.dragNodeId)\n    document.documentElement.style.cursor = 'grabbing'\n    tree.getNodes().forEach(node => {\n      const nodeId = node.get('id');\n      const { x: pointX, y: pointY, width, height } = node.getBBox()\n      let { x: clientX, y: clientY } = tree.getClientByPoint(pointX, pointY)\n      let model = node.get('model')\n      const ratio = tree.getZoom()\n      // 记录节点位置\n      this.nodePosition[nodeId] = {\n        clientX,\n        clientY,\n        width: width * ratio,\n        height: height * ratio,\n        depth: model.depth,\n        parentId: model.parentId,\n        sameLevel: model.depth === _dragnode.get('model').depth\n      }\n      // 修改拖拽节点及其所有子节点的样式\n      if (nodeId.indexOf(this.dragNodeId) === 0) {\n        tree.updateItem(node, {\n          // 节点的样式\n          style: {\n            opacity: 0.2\n          },\n        });\n        node.get('edges').forEach(edge => {\n          tree.updateItem(edge, {\n            // 节点的样式\n            style: {\n              opacity: 0.2\n            },\n          });\n        })\n      }\n    })\n    cancelAllSelect()\n    this.showDragDiv(clientX, clientY)\n    let ratio = tree.getZoom()\n    window.onmousemove = (ev) => this.dragNode.call(this, {\n      tree,\n      clientX: ev.clientX,\n      clientY: ev.clientY,\n      width: 40 * ratio / 2,\n      height: 20 * ratio / 2\n    })\n    window.onmouseup = (ev) => this.dragEnd.call(this, {\n      tree,\n      clientX: ev.clientX,\n      clientY: ev.clientY\n    })\n  },\n  dragNode({ tree, clientX, clientY, width, height }) {\n    if (!isDragging.value) return\n    let nodePosition = this.nodePosition\n    let nodes = []\n    for (let nodeId in nodePosition) {\n      let node = nodePosition[nodeId]\n      /**\n       * 完全碰撞： 符合条件即为两个节点完全重合，拖拽节点将成为重合节点的子级\n       * */\n      let size = (globalFontSize[node.depth] || 12) * maxFontCount + paddingH * 4 + width * 4; // 最大横向距离=最大节点宽度+两个拖拽节点的宽度\n      let parentNode = findData(node.parentId)\n      let firstNode = node\n      let lastNode = node\n      if (parentNode.children.length) {\n        firstNode = nodePosition[parentNode.children[0].id];\n        lastNode = nodePosition[parentNode.children[parentNode.children.length - 1].id];\n      }\n      let coditionH_inner = (clientX - width > node.clientX - width * 2) && (clientX + width < node.clientX + node.width + width * 2);\n      let coditionV_inner = (clientY - height > node.clientY - height * 2) && (clientY + height < node.clientY + node.height + height * 2);\n      let coditionH_outer = (clientX - width > node.clientX - width * 2) && (clientX + width < node.clientX + size + width * 2);\n      let coditionV_outer = (clientY - height > firstNode.clientY - height * 2) && (clientY + height < lastNode.clientY + lastNode.height + height * 2); // 所有节点的纵向区域\n      if (coditionH_inner && coditionV_inner) {\n        // 拖拽节点与树节点有重合部分\n        nodes.push({\n          nodeId: nodeId,\n          inner: true,\n          depth: node.depth,\n          index: +nodeId.split('-').pop(),\n          sameLevel: true,\n          parentId: node.parentId\n        })\n      } else if (coditionH_outer && coditionV_inner) {\n        //     超出节点但在最大节点宽度范围内，高度在节点范围内\n        nodes.push({\n          nodeId: nodeId,\n          inner: false,\n          depth: node.depth,\n          index: +nodeId.split('-').pop(),\n          sameLevel: false,\n          parentId: node.parentId\n        })\n      } else if (coditionH_inner && coditionV_outer && (clientX - width > node.clientX) && nodeId != node.parentId) {\n        // 拖拽节点在允许选中范围\n        nodes.push({\n          nodeId: nodeId,\n          inner: false,\n          depth: node.depth,\n          index: +nodeId.split('-').pop(),\n          sameLevel: true,\n          parentId: node.parentId\n        })\n      }\n    }\n    if (nodes.length) {\n      // 有重合节点,可能有多个符合条件的节点\n      let node = nodes.filter(node => node.inner || (!node.inner && !node.sameLevel)) as any\n      if (node.length > 1) {\n        node.sort((a, b) => {\n          if (a.depth === b.depth) {\n            return a.index - b.index\n          } else {\n            return b.depth - a.depth\n          }\n        })\n      }\n      if (nodes.length > 1) {\n        nodes.sort((a, b) => {\n          if (a.depth === b.depth) {\n            return a.index - b.index\n          } else {\n            return b.depth - a.depth\n          }\n        })\n      }\n      node = node.length ? node[0] : nodes[0]\n      let nodeId = node.sameLevel ? node.parentId : node.nodeId;\n      if (nodeId.indexOf(this.dragNodeId) != -1) {\n        cancelAllSelect()\n        this.selectNodeId = null\n        this.showDragDiv(clientX, clientY, false, null)\n        this.dragStatus = ''\n        return; // 如果是拖拽节点或者拖拽子级，直接返回\n      }\n      selectNode(nodeId, true)\n      this.selectNodeId = nodeId\n      this.showDragDiv(clientX, clientY, true, nodeId)\n      this.dragStatus = 'child'\n      this.upClientInfo = [clientX, clientY]\n    } else {\n      cancelAllSelect()\n      this.selectNodeId = null\n      this.showDragDiv(clientX, clientY, false, null)\n      this.dragStatus = ''\n    }\n  },\n  dragEnd({ tree, clientX, clientY }) {\n    if (!isDragging.value) return\n    setIsDragging(false)\n    if (this.dragNodeId) {\n      tree.setItemState(this.dragNodeId, 'drag', false)\n    }\n    document.documentElement.style.cursor = 'default'\n    this.hideDragDiv()\n    if (this.dragStatus !== '' && this.selectNodeId) {\n      const parentNode = tree.findDataById(this.selectNodeId)\n      let index = 0;\n      for (let i = 0, len = parentNode.children.length; i < len; i++) {\n        let node = parentNode.children[i];\n        if (node.id === this.dragNodeId) continue;\n        if (this.nodePosition[node.id].clientY < this.upClientInfo[1]) {\n          index++\n        } else {\n          break;\n        }\n      }\n      emitter.emit('onDragEnd', [findData(this.dragNodeId), findData(this.selectNodeId), index]);\n      moveData(this.selectNodeId, this.dragNodeId, index)\n    }\n    //    还原\n    tree.getNodes().forEach(node => {\n      const nodeId = node.get('id');\n      // 修改拖拽节点及其所有子节点的样式\n      tree.updateItem(node, {\n        // 节点的样式\n        style: {\n          opacity: 1\n        },\n      });\n      node.get('edges').forEach(edge => {\n        tree.updateItem(edge, {\n          // 节点的样式\n          style: {\n            opacity: 1\n          },\n        });\n      })\n    })\n    cancelAllSelect()\n    this.selectNodeId = null\n    this.dragStatus = ''\n    this.nodePosition = {}\n    window.onmousemove = null\n    window.onmouseup = null\n  },\n  showDragDiv(clientX, clientY, showLine, parentId) {\n    const tree = globalTree.value\n    const { x, y } = tree.getPointByClient(clientX, clientY);\n    const model = {\n      id: 'moveNode',\n      label: '',\n      x,\n      y,\n      type: 'rect',\n      zIndex: 3,\n      style: {\n        width: 40,\n        height: 20,\n        fill: themeColor.value,\n        radius: radius,\n        opacity: 0.6,\n        cursor: 'grabbing',\n      },\n    };\n    const edgeOption = {\n      id: 'moveNodeEdge',\n      source: parentId || '0',\n      target: 'moveNode',\n      type: lineType.value,\n      zIndex: 3,\n      style: {\n        stroke: branchColor.value,\n        lineWidth: branch.value,\n        opacity: showLine ? 0.6 : 0,\n        cursor: 'grabbing',\n      }\n    }\n    const moveNode = tree.getNodes().filter(item => item.get('id') === 'moveNode')\n    const moveEdge = tree.getEdges().filter(item => item.get('id') === 'moveNodeEdge')\n    if (moveNode.length && moveEdge.length) {\n      tree.updateItem(moveNode[0], model)\n      tree.updateItem(moveEdge[0], edgeOption);\n    } else {\n      tree.addItem('node', model);\n      tree.addItem('edge', edgeOption);\n    }\n    return { moveNode: moveNode[0] }\n  },\n  hideDragDiv() {\n    const tree = globalTree.value\n    const moveNode = tree.getNodes().filter(item => item.get('id') === 'moveNode')\n    if (moveNode.length) {\n      tree.removeItem(moveNode[0])\n    }\n  },\n  showDragCombo({ tree, clientX, clientY, width, height }) {\n    const { x, y } = tree.getPointByClient(clientX, clientY);\n    const model = {\n      id: 'dragCombo',\n      label: '',\n      x,\n      y,\n      type: 'rect',\n      zIndex: 3,\n      style: {\n        width,\n        height,\n        fill: themeColor.value,\n        radius: radius,\n        opacity: 0.6,\n      },\n    };\n    const combo = tree.getNodes().filter(item => item.get('id') === 'dragCombo')\n    if (combo.length) {\n      tree.updateItem(combo[0], model)\n    } else {\n      tree.addItem('node', model);\n    }\n  },\n  keyDown(evt) {\n    // 判断如果是编辑节点的状态，不处理快捷键功能，直接返回\n    if (isCurrentEdit.value) return;\n    const { key, shiftKey, ctrlKey, altKey, metaKey } = evt;\n    let handler = hotkeys.filter(item => item.key === key)\n    if (!handler.length) return;\n    if (shiftKey || ctrlKey || altKey || metaKey) {\n      if (shiftKey) {\n        handler = handler.filter(item => item.control?.indexOf('shift') > -1)\n      }\n      if (ctrlKey) {\n        handler = handler.filter(item => item.control?.indexOf('ctrl') > -1)\n      }\n      if (metaKey) {\n        handler = handler.filter(item => item.control?.indexOf('cmd') > -1)\n      }\n      if (altKey) {\n        handler = handler.filter(item => item.control?.indexOf('alt') > -1)\n      }\n    } else if (handler.length === 1 && handler[0].control) {\n      handler = []\n    }\n    if (!handler.length) return;\n    evt.preventDefault(); // 禁止默认事件\n    handler[0].Event.call(this, getSelectedNodes())\n  }\n});\n","import G6, { GraphData, TreeGraph, TreeGraphData } from \"@antv/g6\";\nimport IMData from \"../data\";\nimport contextMenu from '../menu'\nimport { NodeData, InputData } from \"../interface\";\nimport { mindmap, toolbar, tooltip } from \"../plugins\";\nimport {\n  branch,\n  branchColor,\n  changeBranch,\n  changeBranchColor, changeCenterBtn, changeDownloadBtn, changeFitBtn,\n  changeLeafFontColor,\n  changeLeafThemeColor,\n  changeRootFontColor, changeScaleRatio,\n  changeSubFontColor,\n  changeSubThemeColor,\n  changeThemeColor, changeTimetravel, globalTree, lineType, paddingH, paddingV, setGlobalTree, setLineType\n} from \"../variable\";\nimport './registerNode' // 自定义节点形状\nimport './registerBehavior'\nimport { INode } from \"@antv/g6-core/lib/interface/item\"; // 自定义交互\nconst {\n  Util\n} = G6;\n\ninterface Window {\n  mindTree?: TreeGraph;\n}\n\ninterface layoutConfig {\n  xGap?: number,\n  yGap?: number,\n  direction?: string,\n  sharpCorner?: boolean // 直角边框\n  branch?: number\n  branchColor?: string\n  themeColor?: string\n  rootFontColor?: string\n  subThemeColor?: string\n  subFontColor?: string\n  scaleExtent?: string\n  leafThemeColor?: string\n  leafFontColor?: string\n  scaleRatio?: number\n  tooltip?: boolean,\n  edit?: boolean,\n  drag?: boolean,\n  zoom?: boolean,\n  centerBtn?: boolean,\n  fitBtn?: boolean,\n  downloadBtn?: boolean,\n  timetravel?: boolean,\n  mindmap?: boolean,\n  addNodeBtn?: boolean,\n  collapseBtn?: boolean,\n  watchResize?: boolean,\n}\n\ninterface Variable {\n  branch?: number,\n  branchColor?: string,\n  rootFontColor?: string,\n  subFontColor?: string,\n  subThemeColor?: string,\n  themeColor?: string\n  timetravel?: boolean,\n  centerBtn?: boolean,\n  fitBtn?: boolean,\n  downloadBtn?: boolean\n  scaleRatio?: number\n  lineType?: string\n  leafThemeColor?: string\n  leafFontColor?: string\n}\n\nclass Tree {\n  container: HTMLElement | null\n  data: NodeData | GraphData | TreeGraphData | undefined\n  tree: TreeGraph | null\n\n  constructor(containerId: string, data: InputData | InputData[]) {\n    this.container = document.getElementById(containerId)\n    this.data = data\n    this.tree = null\n  }\n\n  createLayoutConfig(layoutConfig?: layoutConfig) {\n    if (layoutConfig) {\n      let {\n        branch,\n        branchColor,\n        rootFontColor,\n        subFontColor,\n        subThemeColor,\n        themeColor,\n        leafThemeColor,\n        leafFontColor,\n        timetravel,\n        centerBtn,\n        fitBtn,\n        downloadBtn,\n        scaleRatio\n      } = layoutConfig\n      this.changeVariable({\n        branch,\n        branchColor,\n        rootFontColor,\n        subFontColor,\n        subThemeColor,\n        themeColor,\n        timetravel,\n        centerBtn,\n        fitBtn,\n        downloadBtn,\n        scaleRatio,\n        leafThemeColor,\n        leafFontColor,\n        lineType: layoutConfig?.sharpCorner ? 'hvh' : 'cubic-horizontal'\n      })\n    }\n    const config = {\n      width: this.container?.scrollWidth,\n      height: this.container?.scrollHeight ?? 0 - 20,\n      layout: {\n        type: 'compactBox',\n        direction: 'H',\n        getHeight: (node: NodeData) => {\n          return node.height\n        },\n        getWidth: (node: NodeData) => {\n          return node.width\n        },\n        getVGap: () => {\n          return layoutConfig?.yGap || 10;\n        },\n        getHGap: () => {\n          return layoutConfig?.xGap || 30;\n        },\n        getSide: (node: INode) => {\n          return 'right';\n        },\n      },\n      defaultEdge: {\n        type: layoutConfig?.sharpCorner ? 'hvh' : 'cubic-horizontal',\n        style: {\n          lineWidth: branch.value,\n          stroke: branchColor.value\n        },\n      },\n      scaleRatio: layoutConfig?.scaleRatio || 1,\n      modes: {\n        default: [],\n        edit: ['edit-mindmap']\n      },\n      plugins: [] as any,\n      groupByTypes: false,\n    }\n    const plugins = [];\n    plugins.push(toolbar())\n    if (layoutConfig?.mindmap) {\n      plugins.push(mindmap())\n    }\n    if (layoutConfig?.edit) {\n      plugins.push(contextMenu())\n    }\n    config.plugins = plugins\n    return config\n  }\n\n  async init(layoutConfig?: layoutConfig) {\n    if (!this.container) return\n    const config = this.createLayoutConfig(layoutConfig)\n    const data = IMData.init(this.data instanceof Array ? this.data[0] : this.data, true);\n    const tree = new G6.TreeGraph({\n      ...config,\n      container: this.container,\n      animate: false,\n      renderer: 'canvas'\n    });\n    tree.data(data);\n    this.tree = tree\n    tree.layout()\n    tree.fitCenter()\n    tree.zoomTo(config.scaleRatio, {\n      x: tree.getWidth() / 2,\n      y: tree.getHeight() / 2\n    })\n    this.enableFeature(layoutConfig)\n    let global = window as Window\n    global.mindTree = tree\n    setGlobalTree(tree)\n    this.bindEvent(tree)\n    return tree;\n  }\n\n  changeSize(width, height) {\n    this.tree.changeSize(width, height)\n    this.tree.fitCenter()\n  }\n\n  bindEvent(tree) {\n\n  }\n\n  enableFeature(layoutConfig?: layoutConfig) {\n    if (layoutConfig?.tooltip) {\n      this.addBehaviors(tooltip)\n    }\n    if (layoutConfig?.edit) {\n      this.changeEditMode(true)\n    }\n    if (layoutConfig?.drag) {\n      this.addBehaviors('drag-canvas')\n    }\n    if (layoutConfig?.zoom) {\n      this.addBehaviors('zoom-canvas')\n    }\n  }\n\n  changeVariable({\n    branch,\n    branchColor,\n    rootFontColor,\n    subFontColor,\n    subThemeColor,\n    themeColor,\n    timetravel,\n    centerBtn,\n    fitBtn,\n    downloadBtn,\n    scaleRatio,\n    lineType,\n    leafThemeColor,\n    leafFontColor,\n  }: Variable) {\n    branch && changeBranch(branch)\n    branchColor && changeBranchColor(branchColor)\n    rootFontColor && changeRootFontColor(rootFontColor)\n    subFontColor && changeSubFontColor(subFontColor)\n    subThemeColor && changeSubThemeColor(subThemeColor)\n    themeColor && changeThemeColor(themeColor)\n    timetravel && changeTimetravel(timetravel)\n    centerBtn && changeCenterBtn(centerBtn)\n    fitBtn && changeFitBtn(fitBtn)\n    downloadBtn && changeDownloadBtn(downloadBtn)\n    scaleRatio && changeScaleRatio(scaleRatio)\n    lineType && setLineType(lineType)\n    leafThemeColor && changeLeafThemeColor(leafThemeColor)\n    leafFontColor && changeLeafFontColor(leafFontColor)\n  }\n\n  changeLayout(layoutConfig?: layoutConfig) {\n    const config = this.createLayoutConfig(layoutConfig)\n    this.tree?.updateLayout(config)\n  }\n\n  addBehaviors(behavior: any, modeType?: string) {\n    if (modeType) {\n      this.tree?.addBehaviors(behavior, modeType)\n    } else {\n      this.tree?.addBehaviors(behavior, 'default')\n      this.tree?.addBehaviors(behavior, 'edit')\n    }\n  }\n\n  removeBehaviors(behavior: any, modeType: string) {\n    if (modeType) {\n      this.tree?.removeBehaviors(behavior, modeType)\n    } else {\n      this.tree?.removeBehaviors(behavior, 'default')\n      this.tree?.removeBehaviors(behavior, 'edit')\n    }\n  }\n\n  changeEditMode(edit: boolean) {\n    if (edit) {\n      this.tree?.setMode('edit')\n    } else {\n      this.tree?.setMode('default')\n    }\n  }\n\n  reBuild(layoutConfig?: layoutConfig) {\n    this.tree?.destroy()\n    this.init(layoutConfig)\n  }\n\n  destroy() {\n    this.tree?.destroy()\n  }\n}\n\nexport default Tree\n","\nexport default (sfc, props) => {\n  const target = sfc.__vccOpts || sfc;\n  for (const [key, val] of props) {\n    target[key] = val;\n  }\n  return target;\n}\n","<template>\n  <div>\n    <div id=\"mxs-mindmap_container\" class=\"mindmap-container\" />\n    <div id=\"node-input\" contenteditable=\"true\" />\n  </div>\n</template>\n<script lang=\"ts\">\nimport './css/Mindmap.scss'\nimport { PropType } from 'vue'\nimport Tree from './tree/tree'\nimport { tooltip } from \"./plugins\";\nimport { changeNodeMenuList, setGlobalTree } from \"./variable\";\nimport EditInput from './editInput'\nimport {\n  addData,\n  update,\n  deleteNode,\n  deleteOneNode,\n  expand,\n  collapse,\n  addSibling,\n  addParent,\n  findData\n} from './tree/methods'\nimport emitter from \"./mitt\";\nconst isArray = (arg) => Object.prototype.toString.call(arg).toLowerCase().indexOf('array') > 5;\nconst isObject = (arg) => Object.prototype.toString.call(arg).toLowerCase() === '[object object]';\nlet tree;\nexport default {\n  props: {\n    // 脑图数据\n    modelValue: { required: true },\n    // 绘制所需的变量\n    xGap: { type: Number, default: 18 },\n    yGap: { type: Number, default: 84 },\n    branch: {\n      type: Number,\n      default: 1,\n      validator: (val: number) => val >= 1 && val <= 6\n    },\n    branchColor: {\n      type: String,\n    },\n    themeColor: { type: String, default: 'rgb(19,128,255)' },\n    rootFontColor: { type: String, default: '#fff' },\n    subThemeColor: { type: String, default: 'rgba(245,245,245,1)' },\n    subFontColor: { type: String, default: '#333' },\n    leafThemeColor: { type: String, default: 'transparent' },\n    leafFontColor: { type: String, default: '#333' },\n    direction: { type: String, default: 'LR' },\n    sharpCorner: Boolean,\n    scaleExtent: {\n      type: Object as PropType<[number, number]>,\n      default: [0.1, 8]\n    },\n    scaleRatio: { type: Number, default: 1 },\n    // 功能设置\n    tooltip: Boolean,\n    edit: Boolean,\n    drag: Boolean,\n    zoom: Boolean,\n    centerBtn: Boolean,\n    fitBtn: Boolean,\n    downloadBtn: Boolean,\n    timetravel: Boolean,\n    mindmap: Boolean,\n    addNodeBtn: Boolean,\n    collapseBtn: Boolean,\n    fisheye: Boolean,\n    watchResize: Boolean,\n    keyboard: Boolean,\n    ctm: Boolean,//  开启右键菜单\n    nodeMenu: Array, // 菜单配置\n    // 钩子函数\n    onAdd: Function,\n    onExpand: Function,\n    onCollapse: Function,\n    onSelectedNode: Function,\n    onAfterEdit: Function,\n    onDragEnd: Function\n  },\n  mounted() {\n    this.$props.onAdd && emitter.on('onAdd', this.$props.onAdd)\n    this.$props.onExpand && emitter.on('onExpand', this.$props.onExpand)\n    this.$props.onCollapse && emitter.on('onCollapse', this.$props.onCollapse)\n    this.$props.onSelectedNode && emitter.on('onSelectedNode', this.$props.onSelectedNode)\n    this.$props.onAfterEdit && emitter.on('onAfterEdit', this.$props.onAfterEdit)\n    this.$props.onDragEnd && emitter.on('onDragEnd', this.$props.onDragEnd)\n    this.changeCanvasSize()\n    window.addEventListener(\"resize\", this.changeCanvasSize)\n  },\n  beforeUnmount() {\n    this.$props.onAdd && emitter.off('onAdd', this.$props.onAdd)\n    this.$props.onExpand && emitter.off('onExpand', this.$props.onExpand)\n    this.$props.onCollapse && emitter.off('onCollapse', this.$props.onCollapse)\n    this.$props.onSelectedNode && emitter.off('onSelectedNode', this.$props.onSelectedNode)\n    this.$props.onAfterEdit && emitter.off('onAfterEdit', this.$props.onAfterEdit)\n    this.$props.onDragEnd && emitter.off('onDragEnd', this.$props.onDragEnd)\n    window.removeEventListener(\"resize\", this.changeCanvasSize)\n    tree.destroy()\n    tree = null\n  },\n  methods: {\n    changeCanvasSize() {\n      this.$nextTick(() => {\n        const height = this.$el.parentNode.offsetHeight;\n        const width = this.$el.offsetWidth;\n        this.$el.style.height = height + 'px';\n        if (tree) {\n          tree.changeSize(width, height);\n        }\n      })\n    },\n    treeInit() {\n      const { modelValue } = this.$props\n      this.$nextTick(() => {\n        tree = new Tree('mxs-mindmap_container', modelValue)\n        tree.init(this.$props)\n      })\n    },\n    inputInit() {\n      EditInput.init('node-input')\n    },\n    add: addData,\n    update,\n    deleteNode,\n    deleteOneNode,\n    expand,\n    collapse,\n    addSibling,\n    addParent,\n    find: findData\n  },\n  watch: {\n    '$props.modelValue': {\n      handler(val) {\n        if (isArray(val) && !val.length) return;\n        if (isObject(val) && !Object.keys(val).length) return;\n        this.treeInit()\n        this.inputInit()\n      },\n      immediate: true\n    },\n    '$props.tooltip': {\n      handler(val) {\n        if (val) {\n          tree.addBehaviors(tooltip)\n        } else {\n          tree.removeBehaviors('tooltip')\n        }\n      }\n    },\n    '$props.edit': {\n      handler(val) {\n        tree.changeEditMode(val)\n      }\n    },\n    '$props.drag': {\n      handler(val) {\n        if (val) {\n          tree.addBehaviors('drag-canvas')\n        } else {\n          tree.removeBehaviors('drag-canvas')\n        }\n      },\n    },\n    '$props.zoom': {\n      handler(val) {\n        if (val) {\n          tree.addBehaviors('zoom-canvas')\n        } else {\n          tree.removeBehaviors('zoom-canvas')\n        }\n      }\n    },\n    centerBtn(val) {\n    },\n    fitBtn(val) {\n    },\n    downloadBtn(val) {\n    },\n    timetravel(val) {\n    },\n    mindmap(val) {\n    },\n    addNodeBtn(val) {\n    },\n    collapseBtn(val) {\n    },\n    fisheye(val) {\n    },\n    watchResize(val) {\n    },\n    nodeMenu: {\n      handler(val) {\n        changeNodeMenuList(val)\n      },\n      immediate: true\n    }\n  }\n}\n</script>\n"],"names":["G6","ref","IMData","History","EditInput","isArrayish","require$$0","swizzle","simpleSwizzleModule","require$$1","colorStringModule","convert","conversions","route","Color","_createElementVNode","_createElementBlock"],"mappings":"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"}