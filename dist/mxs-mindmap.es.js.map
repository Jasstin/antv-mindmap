{"version":3,"file":"mxs-mindmap.es.js","sources":["../src/components/Mindmap/utils.ts","../src/components/Mindmap/variable.ts","../src/components/Mindmap/data/index.ts","../src/components/Mindmap/data/history.ts","../src/components/Mindmap/editInput.ts","../node_modules/mitt/dist/mitt.mjs","../src/components/Mindmap/mitt.ts","../src/components/Mindmap/tree/clipboard.ts","../src/components/Mindmap/tree/methods.ts","../src/components/Mindmap/menu.ts","../src/components/Mindmap/plugins.ts","../src/components/Mindmap/tree/registerNode.ts","../src/components/Mindmap/tree/registerBehavior.ts","../src/components/Mindmap/tree/tree.ts","../src/components/Mindmap/tree/hotkeys.ts","../plugin-vue:export-helper","../src/components/Mindmap/MindMap.vue"],"sourcesContent":["import G6 from \"@antv/g6\";\n\n/**\n * 文本超出显示……\n * **/\nexport const fittingString = (str: string, maxWidth: number, fontSize: number) => {\n  const ellipsis = '...';\n  const ellipsisLength = G6.Util.getTextSize(ellipsis, fontSize)[0];\n  let currentWidth = 0;\n  let res = str;\n  const pattern = new RegExp('[\\u4E00-\\u9FA5]+'); // distinguish the Chinese charactors and letters\n  str.split('').forEach((letter, i) => {\n    if (currentWidth > maxWidth - ellipsisLength) return;\n    if (pattern.test(letter)) {\n      // Chinese charactors\n      currentWidth += fontSize;\n    } else {\n      // get the width of single letter according to the fontSize\n      currentWidth += G6.Util.getLetterWidth(letter, fontSize);\n    }\n    if (currentWidth > maxWidth - ellipsisLength) {\n      res = `${str.substr(0, i)}${ellipsis}`;\n    }\n  });\n  return res;\n};\n/**\n * 文本超出换行\n * */\nexport const wrapString = (str: string, maxWidth: number, fontSize: number): { line: number, text: string, width: number } => {\n  let currentWidth = 0;\n  const pattern = new RegExp('[\\u4E00-\\u9FA5]+'); // distinguish the Chinese charactors and letters\n  const lineGroup = []\n  let firstIndex = 0\n  let rowWidth = 0\n  str = str.replace(/\\s/g, '')\n  str.split('').forEach((letter, i, array) => {\n    if (pattern.test(letter)) {\n      // Chinese charactors\n      currentWidth += fontSize;\n    } else {\n      // get the width of single letter according to the fontSize\n      currentWidth += G6.Util.getLetterWidth(letter, fontSize);\n    }\n    if (currentWidth > maxWidth) {\n      if (currentWidth > rowWidth) {\n        rowWidth = currentWidth\n      }\n      lineGroup.push(str.slice(firstIndex, i))\n      currentWidth = 0;\n      firstIndex = i\n    } else if (i === array.length - 1) {\n      if (currentWidth > rowWidth) {\n        rowWidth = currentWidth\n      }\n      lineGroup.push(str.slice(firstIndex, i + 1))\n    }\n  });\n  return { line: lineGroup.length, text: lineGroup.join('\\n'), width: Math.ceil(rowWidth) }\n};\nwindow.wrapString = wrapString\n","import { ref } from \"vue\";\nimport { TreeGraph } from \"@antv/g6\";\nimport { INode } from \"@antv/g6-core/lib/interface/item\";\n\nexport const themeColor = ref('rgb(19, 128, 255)')\nexport const activeStrokeColor = ref('red')\nexport const hoverStrokeColor = ref('green')\nexport const changeThemeColor = (val: string) => {\n  themeColor.value = val\n  activeStrokeColor.value = val\n  hoverStrokeColor.value = val\n}\nexport const themeColor_sub = ref('rgb(245,245,245)')\nexport const changeSubThemeColor = (val: string) => themeColor_sub.value = val\nexport const themeColor_leaf = ref('transparent')\nexport const changeLeafThemeColor = (val: string) => themeColor_leaf.value = val\nexport const fontColor_root = ref('#ffffff') // 字体颜色\nexport const changeRootFontColor = (val: string) => fontColor_root.value = val\nexport const fontColor_sub = ref('#333') // 字体颜色\nexport const changeSubFontColor = (val: string) => fontColor_sub.value = val\nexport const fontColor_leaf = ref('#333') // 字体颜色\nexport const changeLeafFontColor = (val: string) => fontColor_leaf.value = val\nexport const branch = ref(2) // 线条宽度\nexport const changeBranch = (val: number) => branch.value = val\nexport const branchColor = ref('rgb(19, 128, 255)') // 线条颜色\nexport const changeBranchColor = (val: string) => branchColor.value = val\nexport const timetravel = ref(false) // 显示历史操作栈\nexport const changeTimetravel = (val: boolean) => timetravel.value = val\nexport const downloadBtn = ref(false)\nexport const changeDownloadBtn = (val: boolean) => downloadBtn.value = val\nexport const fitBtn = ref(false)\nexport const changeFitBtn = (val: boolean) => fitBtn.value = val\nexport const centerBtn = ref(false)\nexport const changeCenterBtn = (val: boolean) => centerBtn.value = val\nexport const scaleRatio = ref(1)\nexport const changeScaleRatio = (val: number) => scaleRatio.value = val\nexport const radius = 4\nexport const paddingH = 10\nexport const paddingV = 10\nexport const maxFontCount = 12 // 最多显示字个数\nexport const globalFontSize = [16, 14, 12] // 字体大小\nexport const nodeMenuList = ref([]) // 节点右键菜单列表\nexport const changeNodeMenuList = (val: []) => nodeMenuList.value = val\nexport const currentNode = ref<INode | null>(null) // 当前选中的节点\nexport const setCurrentNode = (val: INode) => currentNode.value = val\nexport const globalTree = ref<TreeGraph | null>(null) // 树实例\nexport const setGlobalTree = (val: TreeGraph) => globalTree.value = val\nexport const lineType = ref<string>('cubic-horizontal')\nexport const setLineType = (val: string) => lineType.value = val\nexport const isCurrentEdit = ref<boolean>(false)\nexport const setIsCurrentEdit = (val: boolean) => isCurrentEdit.value = val\nexport const placeholderText = '新建模型'\nexport const isDragging = ref<boolean>(false)\nexport const setIsDragging = (val: boolean) => isDragging.value = val\nexport const hotkeys = ref([]) // 节点右键菜单列表\nexport const changehotKeyList = (val: []) => hotkeys.value = val\n","import { InputData, NodeData } from \"../interface\";\nimport { fittingString, wrapString } from \"../utils\";\nimport { globalFontSize, maxFontCount, paddingH, paddingV, themeColor_sub, themeColor, themeColor_leaf, fontColor_sub, fontColor_leaf, fontColor_root, placeholderText, activeStrokeColor } from \"../variable\";\nexport const buildNodeStyle = ({ name = placeholderText, desc = \"\", content = \"\", depth }) => {\n  name === \"\" && (name = placeholderText);\n  const fontSize = globalFontSize[depth] || 12;\n  const size = fontSize * maxFontCount + paddingH * 2; // 节点最多显示12个字\n  const { text: wrapName, line: nameLine, width: nameWidth } = wrapString(name, size, fontSize); // 标题换行\n  const { text: wrapDesc, line: descLine, width: descWidth } = wrapString(desc, size, fontSize - 2); // 描述换行\n  const nameLineHeight = (fontSize + paddingV);\n  const nameHeight = nameLineHeight * (nameLine) + paddingV; // 标题高度\n  const descHeight = (fontSize - 2 + paddingV) * (descLine) + paddingV; // 描述内容高度\n  const height = nameHeight + (desc ? descHeight : 0) // 节点高度\n  const FillColor = [themeColor.value, themeColor_sub.value, themeColor_leaf.value][depth] || themeColor_leaf.value // 背景颜色\n  const FontColor = [fontColor_root.value, fontColor_sub.value, fontColor_leaf.value][depth] || fontColor_leaf.value // 字体颜色\n  const obj = {\n    label: wrapName,\n    name: wrapName,\n    fullName: name,\n    desc: wrapDesc,\n    content,\n    type: 'mindmap-node',\n    style: {\n      fontSize,\n      descFontSize: fontSize - 2,\n      descHeight,\n      width: Math.max(nameWidth, descWidth) + paddingV * 2, //  标题宽度与描述宽度取最大值\n      maxWidth: size,\n      height,\n      nameHeight,\n      FillColor,\n      FontColor,\n      stroke: 2,\n      strokeColor: 'transparent',\n      nameLineHeight\n    }\n  }\n  return obj\n}\nclass IMData {\n  data: NodeData | null = null\n  _data: NodeData | any[] = []\n\n  private createMdataFromData(rawData: InputData, id: string, parent: NodeData | null = null, isInit = false): NodeData {\n    const {\n      children: rawChildren,\n      _children: _rawChildren,\n      collapse,\n      isSubView\n    } = rawData\n    const depth = parent ? parent.depth + 1 : 0\n    const data: NodeData = {\n      id,\n      depth,\n      isSubView: isSubView || false,\n      collapse: collapse || false,\n      parentId: parent?.id ?? '0',\n      children: [],\n      _children: [],\n      rawData: isInit ? rawData : rawData?.rawData,\n      ...buildNodeStyle({ ...rawData, depth })\n    }\n    if (rawChildren) {\n      rawChildren.filter(t => !t.destroyed).forEach((c, j) => {\n        data?.children?.push(this.createMdataFromData(c, `${id}-${j}`, data, isInit))\n      })\n    }\n    if (_rawChildren) {\n      _rawChildren.filter(t => !t.destroyed).forEach((c, j) => {\n        data?._children?.push(this.createMdataFromData(c, `${id}-${j}`, data, isInit))\n      })\n    }\n    if (collapse && data.children.length) {\n      data._children = [...data.children]\n      data.children = []\n    }\n    return data\n  }\n\n  init(d: InputData, isInit = false) {\n    this.data = this.createMdataFromData(d, '0', null, isInit)\n    return this.data\n  }\n\n  find(id: string): NodeData | null { // 根据id找到数据\n    const array = id.split('-').map(n => ~~n)\n    let data = this.data\n    if (!data) return null\n    for (let i = 1; i < array.length; i++) {\n      const index = array[i]\n      const { children } = data as NodeData\n      if (index < children.length) {\n        data = children[index]\n      } else { // No data matching id\n        return null\n      }\n    }\n    return data?.id === id ? data : null\n  }\n\n  /**\n   * 展开或折叠(expand or collapse)\n   */\n  eoc(id: string, collapse: boolean): NodeData | null {\n    const d = this.find(id)\n    if (d) {\n      d.collapse = collapse;\n      [d._children, d.children] = [d.children, d._children]\n    }\n    return d\n  }\n\n  expand(id: string): NodeData | null {\n    return this.eoc(id, false)\n  }\n\n  collapse(id: string): NodeData | null {\n    return this.eoc(id, true)\n  }\n\n  /**\n   * 支持传入单节点、带有子级的节点\n   * */\n  add(id: string, rawData: string | InputData): NodeData | null {\n    const p = this.find(id)\n    if (!p) return null;\n    if (p.collapse) {\n      this.expand(id)\n    }\n    if (!p.children) {\n      p.children = []\n    }\n    if (typeof rawData === 'string') {\n      rawData = { name: rawData }\n    }\n    const newData = this.createMdataFromData(rawData, `${id}-${p.children.length}`, p);\n    p.children.push(newData);\n    return newData;\n  }\n\n  addSibling(id: string, rawData: string | InputData, before = false): NodeData | null {\n    const d = this.find(id);\n    if (!d || !d.parentId) return null;\n    if (typeof rawData === 'string') {\n      rawData = { name: rawData };\n    }\n    this.add(d.parentId, rawData);\n  }\n\n  addParent(id: string, rawData: string | InputData): NodeData | null {\n    let d = this.find(id);\n    if (!d || !d.parentId) return null;\n    const p = this.find(d.parentId);\n    if (typeof rawData === 'string') {\n      rawData = { name: rawData };\n    }\n    const newData = this.createMdataFromData({\n      ...rawData,\n      children: [d]\n    }, id, p)\n    this.replaceNode(id, newData);\n    return newData;\n  }\n  replaceNode(id, rawData) {\n    let d = this.find(id);\n    let p = this.find(d.parentId);\n    if (!p?.children) return;\n    p.children.forEach(item => {\n      if (item.id === id) {\n        for (let key in rawData) {\n          item[key] = rawData[key]\n        }\n      }\n    })\n  }\n  /**\n   * 删除节点及其所有子节点 支持逻辑删除与物理删除\n   * 逻辑删除： 在数据中，被打上destroyed的标识，会在下一次重置数据的时候删除 应用场景听：moveData 先逻辑删除再物理删除\n   * 物理删除： 本次操作就将数据删除掉\n   * */\n  removeItem(id: string, real = true) {\n    const d = this.find(id)\n    if (d) {\n      const p = this.find(d.parentId)\n      if (!p) return\n      p.children.forEach(d => {\n        if (d.id === id) {\n          d.destroyed = true\n        }\n      })\n    }\n    if (real) {\n      this.init(this.data)\n    }\n  }\n\n  removeOneItem(id: string) {\n    const d = this.find(id)\n    if (d) {\n      const p = this.find(d.parentId)\n      if (!p) return\n      p.children = p.children.filter(t => t.id !== id)\n      if (d.children) {\n        const _pI = id.split(p.id + '-')[1];\n        d.children.forEach((item, index) => {\n          p.children.splice(+_pI, 0, this.createMdataFromData(item, p.id + '-' + index, p))\n        })\n      }\n      p.children.forEach((t, i) => t.id = `${p.id}-${i}`)\n    }\n  }\n\n  onlyShowCurrent(id: string) {\n    const d = this.find(id)\n    if (d) {\n      if (d.collapse) {\n        this.expand(id)\n      }\n      this._data.push(this.data)\n      d.isSubView = true\n      this.data = this.createMdataFromData(d, '0')\n    }\n  }\n\n  update(id: string, rawData: string | InputData) {\n    let d = this.find(id)\n    if (!d) return\n    const p = this.find(d.parentId);\n    if (typeof rawData === 'string') {\n      rawData = { ...d, name: rawData }\n    } else {\n      rawData = { ...d, ...rawData }\n    }\n    const newData = this.createMdataFromData(rawData, id, p);\n    this.replaceNode(id, newData);\n    return newData;\n  }\n\n  backParent() {\n    let _data = this._data.pop()\n    // Todo:合并最新的改动\n    this.data = _data\n  }\n\n  moveData(pid: string, id: string, index: number) {\n    let data = this.find(id);\n    const p = this.find(pid);\n    let isSibling = data.parentId === pid\n    if (!isSibling) {\n      this.removeItem(id, false);\n    }\n    if (p.children.length) {\n      let _data = [...p.children.filter(node => node.id != id)]\n      p.children = []\n      _data.splice(index, 0, data)\n      _data.forEach((item, index) => p.children.push(this.createMdataFromData(item, p.id + '-' + index, p)))\n    } else if (p._children.length) {\n      let _data = [...p._children.filter(node => node.id != id)]\n      p._children = []\n      _data.splice(index, 0, data)\n      _data.forEach((item, index) => p._children.push(this.createMdataFromData(item, p.id + '-' + index, p)))\n      this.expand(pid)\n    } else {\n      this.add(pid, data)\n    }\n    // 重新梳理id\n    this.init(this.data)\n  }\n}\n\nexport default new IMData()\n","import {NodeData} from \"../interface\";\n\nclass History {\n    data: NodeData[] | [] = []\n    index: number = 0\n\n    push(data: NodeData) {\n        (this.data as NodeData[]).push(data)\n        this.index = this.data.length - 1\n    }\n\n    goBack(n: number = 1) {\n        this.index--\n        if (this.index <= 0) this.index = 0\n        let data = this.data[this.index]\n        return data\n    }\n\n    forword(n: number = 1) {\n        this.index++\n        if (this.index >= this.data.length - 1) this.index = this.data.length - 1\n        let data = this.data[this.index]\n        return data\n    }\n}\n\nexport default new History()\n","import { paddingH, paddingV, placeholderText, globalTree, radius, activeStrokeColor } from \"./variable\";\nfunction buildStyle(obj) {\n  let res = '';\n  for (let key in obj) {\n    res += `${key}:${obj[key]};`\n  }\n  return res;\n}\n\nclass EditInput {\n  _input: HTMLInputElement | null = null\n  _id: string\n\n  init(id: string) {\n    this._input = document.getElementById(id) as HTMLInputElement\n    this._id = id\n    this.bindEvent()\n  }\n\n  showInput(nodeData) {\n    if (!this._input) {\n      this.init(this._id)\n      if (!this._input) return\n    };\n\n    let NodeInput = this._input;\n    const { x: pointX, y: pointY } = nodeData._cfg?.bboxCache\n    const { name, style: { fontSize, width, height, maxWidth, FillColor, FontColor, stroke, nameLineHeight } } = nodeData._cfg?.model;\n    const Tree = globalTree.value;\n    let ratio = Tree.getZoom()\n    let { x, y } = Tree.getClientByPoint(pointX, pointY);\n    NodeInput.style.cssText = buildStyle({\n      transform: `scale(${ratio})`,\n      'transform-origin': '0 0',\n      display: 'block',\n      position: 'fixed',\n      top: `${y}px`,\n      left: `${x}px`,\n      width: `${width + stroke}px`,\n      height: `${height + stroke}px`,\n      'box-sizing': `border-box`,\n      'font-size': `${fontSize}px`,\n      'text-align': 'left',\n      'padding-top': `${paddingV / 2}px`,\n      'padding-left': `${paddingH - stroke}px`,\n      'border-radius': `${radius}px`,\n      zIndex: 1,\n      overflow: `hidden`,\n      resize: `none`,\n      outline: `none`,\n      'font-weight': 600,\n      color: FontColor,\n      background: FillColor,\n      border: `${stroke}px solid ${activeStrokeColor.value}`,\n      'line-height': nameLineHeight + 'px'\n    });\n    NodeInput.innerText = placeholderText === name ? \"\" : name\n    document.body.style['--placeholderText'] = placeholderText\n    NodeInput.classList[name === placeholderText ? 'add' : 'remove'](\"empty\")\n  }\n  changeStyle({ style: { width, stroke, height } }) {\n    let NodeInput = this._input;\n    NodeInput.style.width = `${width + stroke}px`;\n    NodeInput.style.height = `${height + stroke}px`;\n  }\n  bindEvent() {\n    if (!this._input) return\n    this._input.addEventListener('input', (ev) => {\n      let input = ev.target as HTMLInputElement\n      if (input.innerText.length > 0) {\n        input.classList.remove(\"empty\")\n      } else {\n        input.classList.add(\"empty\")\n      }\n      this.handleInput(this._input.innerText === '' ? placeholderText : this._input.innerText)\n    })\n    this._input.addEventListener('blur', () => {\n      this.handleInputBlur(this._input.innerText)\n    })\n    this._input.addEventListener('keydown', (ev) => {\n      if (ev.key === 'Enter' && !ev.shiftKey) {\n        let input = ev.target as HTMLInputElement\n        this.handleInputBlur.call(this, input.innerText)\n      }\n    })\n  }\n  hideInput() {\n    if (!this._input) return\n    this._input.style.display = 'none'\n  }\n  handlefocus(name: string) {\n    //    methods 将会重写，用来更新节点状态\n\n  }\n\n  handleInput(name: string) {\n\n  }\n\n  handleInputBlur(name: string) {\n    //    methods 将会重写，用来更新节点数据\n  }\n}\n\nexport default new EditInput()\n","export default function(n){return{all:n=n||new Map,on:function(t,e){var i=n.get(t);i?i.push(e):n.set(t,[e])},off:function(t,e){var i=n.get(t);i&&(e?i.splice(i.indexOf(e)>>>0,1):n.set(t,[]))},emit:function(t,e){var i=n.get(t);i&&i.slice().map(function(n){n(e)}),(i=n.get(\"*\"))&&i.slice().map(function(n){n(t,e)})}}}\n//# sourceMappingURL=mitt.mjs.map\n","import mitt from 'mitt'\n\nconst emitter = mitt()\nexport default emitter\n","import {ref} from \"vue\";\n\nlet dataArr = ref([])\n\nexport const pushData = (data) => {\n    dataArr.value.push(data)\n}\n\nexport const popData = () => {\n    return dataArr.value.pop()\n}\n","import IMData, { buildNodeStyle } from '../data/index'\nimport { InputData } from \"../interface\";\nimport { globalTree, isCurrentEdit, setIsCurrentEdit } from \"../variable\";\nimport { TreeGraph } from \"@antv/g6\";\nimport History from \"../data/history\";\nimport EditInput from \"../editInput\";\nimport { INode } from \"@antv/g6-core/lib/interface/item\";\nimport emitter from '../mitt'\nimport { pushData, popData } from \"./clipboard\";\n\n/***\n * data 为History栈里面的历史数据\n */\nexport const rePaint = (stack = true) => {\n  let tree: TreeGraph | null = globalTree.value as TreeGraph\n  if (!IMData.data) return\n  tree?.data(IMData.data)\n  if (stack) {\n    History.push(IMData.data)\n  }\n  tree?.layout()\n}\nexport const addData = (id: string, rawData: string | InputData, editNow = true) => {\n  let data = IMData.add(id, rawData)\n  rePaint()\n  emitter.emit('onAdd', data)\n  if (editNow) {\n    if (data) edit(data.id)\n  }\n}\nexport const addParent = (id: string, rawData: string | InputData, editNow = true) => {\n  let data = IMData.addParent(id, rawData)\n  rePaint()\n  if (editNow) {\n    if (data) edit(data.id)\n  }\n}\nexport const addSibling = (id: string, rawData: string | InputData, editNow = true) => {\n  let data = IMData.addSibling(id, rawData)\n  rePaint()\n  if (editNow) {\n    if (data) edit(data.id)\n  }\n}\nexport const edit = (id: string) => {\n  const Tree = globalTree.value\n  const NodeData = Tree?.findById(id) as INode\n  if (!NodeData || !Tree) return\n  setIsCurrentEdit(true)\n  let show = false;\n  let oldName = NodeData.get('model').name;\n  EditInput.showInput(NodeData)\n  show = true;\n  Tree.on('wheel', () => {\n    if (!show) return;\n    EditInput.hideInput()\n  })\n  EditInput.handleInput = (name: string) => {\n    if (!isCurrentEdit.value) setIsCurrentEdit(true)\n    let _name = name.replace(/\\s/g, '');\n    const newData = buildNodeStyle({\n      name: _name.length < oldName.length ? oldName : _name,\n      depth: NodeData.get('model').depth\n    })\n    EditInput.changeStyle(newData);\n  }\n  EditInput.handleInputBlur = (name: string) => {\n    show = false;\n    emitter.emit('onAfterEdit', name.replace(/\\s/g, ''));\n    let _name = name.replace(/\\s/g, '');\n    update(id, _name === '' ? oldName : _name)\n    EditInput.hideInput()\n    let timer = setTimeout(() => {\n      clearTimeout(timer)\n      setIsCurrentEdit(false)\n    }, 100)\n  }\n}\nexport const update = (id: string, name: any) => {\n  IMData.update(id, typeof name === 'string' ? { name } : name)\n  rePaint()\n  selectNode(id, true)\n}\nexport const selectNode = (id: string, selected: boolean) => {\n  cancelAllSelect()\n  globalTree.value.setItemState(id, 'selected', selected)\n  selected && emitter.emit('onSelectedNode', findData(id));\n  // 节点选中的时候就将富文本内容显示出来\n  const nodeData = globalTree.value.findById(id)\n  EditInput.showInput(nodeData)\n  EditInput._input.addEventListener('focus', () => {\n    // 输入框聚焦时，调用编辑方法进行编辑\n    edit(id)\n  })\n}\nexport const cancelAllSelect = () => {\n  globalTree.value.getNodes().forEach(item => {\n    if (item.hasState('selected')) {\n      item.clearStates('selected')\n    }\n  })\n  EditInput.hideInput()\n}\nexport const getSelectedNodes = () => {\n  // 返回当前所有选中的节点\n  return globalTree.value.getNodes().filter(item => {\n    return item.hasState('selected');\n  }).map(item => item.get('model').id)\n}\nexport const deleteNode = (id: string) => {\n  IMData.removeItem(id)\n  rePaint()\n}\nexport const deleteOneNode = (id: string) => {\n  IMData.removeOneItem(id)\n  rePaint()\n}\nexport const collapse = (id: string) => {\n  //  判断如果没有子元素直接返回\n  let data = findData(id);\n  if (data.children.length <= 0) return false;\n  IMData.collapse(id)\n  emitter.emit('onCollapse', findData(id))\n  rePaint()\n}\nexport const expand = (id: string) => {\n  IMData.expand(id)\n  emitter.emit('onExpand', findData(id))\n  rePaint()\n}\nexport const onlyShowCurrent = (id: string) => {\n  IMData.onlyShowCurrent(id)\n  rePaint()\n}\nexport const backParent = (id: string) => {\n  IMData.backParent()\n  rePaint()\n}\nexport const reDo = () => {\n  let data = History.forword();\n  if (data) {\n    IMData.data = { ...data }\n  }\n  rePaint(false)\n}\nexport const unDo = () => {\n  let data = History.goBack();\n  if (data) {\n    IMData.data = { ...data }\n  }\n  rePaint(false)\n}\n/***\n * 将childId节点从原节点删除，移动到新的parentId节点下面\n * */\nexport const moveToChild = (childId, parentId) => {\n  const data = IMData.find(childId);\n  IMData.add(parentId, data);\n  IMData.removeItem(childId);\n  rePaint()\n}\nexport const findData = (id) => {\n  return IMData.find(id);\n}\nexport const moveData = (parentId, nodeId, index) => {\n  IMData.moveData(parentId, nodeId, index);\n  rePaint()\n}\nexport const copy = (ids) => {\n  pushData(ids.map(id => findData(id)))\n}\nexport const cut = (ids) => {\n  pushData(ids.map(id => findData(id)))\n  ids.forEach(id => {\n    deleteNode(id)\n  })\n}\nexport const paste = (pid) => {\n  let data = popData()\n  if (data) {\n    data.forEach(item => {\n      addData(pid, item, false)\n    })\n    rePaint()\n  }\n}\nexport const createACopy = (id) => {\n  copy([id])\n  let d = findData(id)\n  paste(findData(id).parentId)\n  rePaint()\n}\n","import G6 from \"@antv/g6\";\nimport { centerBtn, fitBtn, downloadBtn, scaleRatio, nodeMenuList, hotkeys } from \"./variable\";\nimport {\n  addData,\n  addParent,\n  addSibling,\n  edit,\n  deleteNode,\n  collapse,\n  expand,\n  onlyShowCurrent,\n  backParent\n} from \"./tree/methods\"\nimport { NodeData } from \"./interface\";\n\nconst nodeMenuMap = {\n  add: {\n    name: 'add',\n    title: '添加子节点',\n    click: (node: NodeData) => {\n      addData(node?.id as string, \"\", true)\n    }\n  },\n  'add-parent': {\n    name: 'add-parent',\n    title: '添加父级节点',\n    click: (node: NodeData) => {\n      addParent(node?.id as string, \"\", true)\n    }\n  },\n  'add-sibling': {\n    name: 'add-sibling',\n    title: '添加兄弟节点',\n    click: (node: NodeData) => {\n      addSibling(node?.id as string, \"\", true)\n    }\n  },\n  'edit': {\n    name: 'edit',\n    title: '编辑当前节点',\n    click: (node: NodeData) => {\n      edit(node?.id as string)\n    }\n  },\n  'delete': {\n    name: 'delete',\n    title: '删除当前节点',\n    click: (node: NodeData) => {\n      deleteNode(node?.id as string)\n    }\n  },\n  'collapse': {\n    name: 'collapse',\n    title: '收起模型',\n    click: (node: NodeData) => {\n      collapse(node?.id as string)\n    }\n  },\n  'expand': {\n    name: 'expand',\n    title: '展开模型',\n    click: (node: NodeData) => {\n      expand(node?.id as string)\n    }\n  },\n  'only-show-current': {\n    name: 'only-show-current',\n    title: '进入当前节点',\n    click: (node: NodeData) => {\n      onlyShowCurrent(node?.id as string)\n    }\n  },\n  'back-parent': {\n    name: 'back-parent',\n    title: '返回上一级节点',\n    click: (node: NodeData) => {\n      backParent(node?.id as string)\n    }\n  }\n}\nconst nodeMenuClickList = {}\nconst contextMenu = () => new G6.Menu({\n  getContent(evt) {\n    if (!evt) return `div`;\n    const isCanvasTarget = evt.target && evt.target.isCanvas && evt.target.isCanvas()\n    return isCanvasTarget ? renderCanvasMenu(evt) : renderNodeMenu(evt);\n  },\n  handleMenuClick: (target, item, graph) => {\n    handleMenuClick(target, item, graph)\n  },\n  // offsetX and offsetY include the padding of the parent container\n  // 需要加上父级容器的 padding-left 16 与自身偏移量 10\n  offsetX: 10,\n  // 需要加上父级容器的 padding-top 24 、画布兄弟元素高度、与自身偏移量 10\n  offsetY: -100,\n  // the types of items that allow the menu show up\n  // 在哪些类型的元素上响应\n  itemTypes: ['node', 'canvas'],\n});\n\nfunction renderCanvasMenu(evt) {\n  return `<ul>\n               <li code=\"enlarge\">放大</li>\n               <li code=\"ensmall\">缩小</li>\n              ${fitBtn.value ? `<li code=\"fit\">缩放到合适大小</li>` : ``} \n               ${centerBtn.value ? `<li code=\"center\">缩放到屏幕中间</li>` : ``}\n               ${downloadBtn.value ? `<li code=\"download\">下载</li>` : ``}\n           </ul>`\n}\n\nfunction renderNodeMenu(evt: any) {\n  const nodeData = evt.item._cfg.model;\n  let menuList = nodeMenuList.value\n  let { depth, collapse, isSubView, children } = nodeData\n  let str = menuList.map(group => {\n    return `<ul class=\"group\">\n            ${group.map(item => {\n      if (typeof item === 'string') {\n        // 内部配置\n        let itemInfo = nodeMenuMap[item];\n        if (!itemInfo) return '';\n        if (depth === 0 && ['add-parent', 'add-sibling', 'delete'].indexOf(item) != -1) return ''\n        if (item === 'collapse' && (collapse || children.length === 0)) return ''\n        if (!collapse && item === 'expand') return ''\n        if (!isSubView && depth === 0 && item === 'only-show-current') return ''\n        if (isSubView && depth === 0 && item === 'only-show-current') itemInfo = nodeMenuMap['back-parent']\n        nodeMenuClickList[itemInfo.name] = itemInfo.click;\n        let hotkey = hotkeys.value.filter(item => item.name === itemInfo.name)[0]\n        if (hotkey) {\n          return `<li code=\"Node\" name=\"${itemInfo.name}\"><div code=\"Node\" name=\"${itemInfo.name}\">${itemInfo.title}</div><div class=\"small-tip\" code=\"Node\" name=\"${itemInfo.name}\">${hotkey.control ? `${hotkey.control}+` : ''}${hotkey.key}</div></li>`\n        } else {\n          return `<li code=\"Node\" name=\"${itemInfo.name}\">${itemInfo.title}</li>`\n        }\n      } else if (typeof item === 'object' && item.title) {\n        // 外部配置\n        nodeMenuClickList[item.name] = item.click;\n        return `<li code=\"Node\" name=\"${item.name}\">${item.title}</li>`\n      } else {\n        return ''\n      }\n    }).join('')}\n        </ul>`\n  }).join('')\n  return str\n}\n\nfunction handleMenuClick(target, item, graph) {\n  if (target.getAttribute('code') === 'enlarge') {\n    graph.zoom(1.2, { x: graph.getWidth() / 2, y: graph.getHeight() / 2 });\n  } else if (target.getAttribute('code') === 'ensmall') {\n    graph.zoom(0.8, { x: graph.getWidth() / 2, y: graph.getHeight() / 2 });\n  } else if (target.getAttribute('code') === 'fit') {\n    graph.layout(true)\n  } else if (target.getAttribute('code') === 'center') {\n    graph.fitCenter()\n    graph.zoomTo(scaleRatio.value, {\n      x: graph.getWidth() / 2,\n      y: graph.getHeight() / 2\n    })\n  } else if (target.getAttribute('code') === 'download') {\n    graph.downloadFullImage('mindmap_' + Date.now(), 'image/jpeg', {\n      backgroundColor: '#ddd',\n      padding: [30, 15, 15, 15],\n    });\n  } else if (target.getAttribute('code') === 'Node') {\n    let name = target.getAttribute('name');\n    if (name) {\n      nodeMenuClickList[name](item.get('model'), item, graph)\n    }\n  }\n}\n\nexport default contextMenu\n","import G6 from \"@antv/g6\";\nimport { timetravel, centerBtn, fitBtn, downloadBtn, scaleR, scaleRatio, themeColor } from \"./variable\";\n// 小地图\nexport const mindmap = () => new G6.Minimap({\n  size: [100, 100],\n  className: 'mindmap-miniGap',\n  viewportClassName: 'mindmap-miniGap-viewPort',\n  type: 'delegate',\n  delegateStyle: {\n    fill: themeColor.value,\n    stroke: themeColor.value\n  }\n})\n// 工具栏\nexport const toolbar = () => new G6.ToolBar({\n  className: 'mindmap-toolbar',\n  getContent: () => {\n    return `\n<div>\n${timetravel.value ? `\n<div class=\"mindmap-toolbar-top\">\n<ul class='mindmap-toolbar'>\n        <li class='mindmap-toolbar-list_item' code='undo' title=\"撤销\"><i class=\"icon-undo\"></i></li>\n        <li class='mindmap-toolbar-list_item' code='redo' title=\"恢复\"><i class=\"icon-redo\"></i></li>\n      </ul>\n</div>` : ''}\n<div class=\"mindmap-toolbar-bottom\">\n<ul class='mindmap-toolbar'>\n        ${downloadBtn.value ? `<li class='mindmap-toolbar-list_item' code='download' title=\"下载图片\"><i class=\"icon-download\"></i></li>` : ''}\n        ${centerBtn.value ? `<li class='mindmap-toolbar-list_item' code='center' title=\"缩放到屏幕中心\"><i class=\"icon-center\"></i>缩放到画布中心</li>` : ''}\n        ${fitBtn.value ? `<li class='mindmap-toolbar-list_item' code='fit' title=\"缩放到合适比例\"><i class=\"icon-fit\"></i></li>` : ''}\n      </ul>\n</div>\n</div>\n    `;\n  },\n  handleClick: (code, graph) => {\n    switch (code) {\n      case\n        'undo'\n        :\n        toolbar.undo();\n        break;\n      case\n        'redo'\n        :\n        toolbar.redo();\n        break;\n      case\n        'download'\n        :\n        graph.downloadFullImage('mindmap_' + Date.now(), 'image/jpeg', {\n          backgroundColor: '#ddd',\n          padding: [30, 15, 15, 15],\n        });\n        break;\n      case\n        'fit'\n        :\n        graph.layout(true);\n        break;\n      case\n        'center'\n        :\n        graph.fitCenter()\n        graph.zoomTo(scaleRatio.value, {\n          x: graph.getWidth() / 2,\n          y: graph.getHeight() / 2\n        })\n        break;\n    }\n  }\n});\n\n// tooltip\nexport const tooltip = {\n  type: 'tooltip',\n  formatText(model) {\n    return model.content || model.desc || model.fullName;\n  },\n  offset: 10,\n}\n","import G6, { IGroup, IShape } from \"@antv/g6\";\nimport {\n  themeColor,\n  radius,\n  paddingH,\n  paddingV,\n  branch,\n  branchColor,\n  fontColor_root,\n  hoverStrokeColor,\n  activeStrokeColor,\n  isCurrentEdit\n} from \"../variable\";\n\nenum textBaseline {\n  top = \"top\"\n}\n\nconst {\n  Util\n} = G6;\n\nfunction drawHandleBtn(group: IGroup, cfg, type) {\n  const { style: { width, height, opacity = 1 }, _children } = cfg\n  const fontSize = 14\n  const text = {\n    'add': '+',\n    'collapse': '<',\n    'expand': _children.length + '' || '0'\n  }[type]\n  const widthHeight = Util.getTextSize(text, fontSize);\n  const isExpand = type === 'expand';\n  const r = widthHeight[0] / 2 + 4\n  const lineStyle = isExpand ? {\n    x: width + 1,\n    y: height / 2 - 1,\n    width: 10,\n    height: 2,\n    fill: themeColor.value,\n    opacity\n  } : { width: 0 }\n  const handleStyle = {\n    x: width,\n    y: 0,\n    width: widthHeight[0] + lineStyle.width + r + 3,\n    height,\n    fill: 'transparent'\n  }\n  const fill = isExpand ? 'transparent' : themeColor.value\n  const stroke = isExpand ? themeColor.value : 'transparent'\n  const textColor = isExpand ? themeColor.value : fontColor_root.value\n  const visible = isExpand ? true : false\n  const circleStyle = {\n    x: width + lineStyle.width + r + 3,\n    y: height / 2,\n    r,\n    fill,\n    stroke,\n    lineWidth: 2,\n    cursor: 'pointer',\n    opacity\n  }\n  const textStyle = {\n    x: width + lineStyle.width + r - widthHeight[0] / 2 + 3,\n    y: height / 2 - r / 2 - 4,\n    text,\n    fill: textColor,\n    fontSize,\n    fontWeight: 600,\n    textBaseline: textBaseline.top,\n    cursor: 'pointer',\n    opacity\n  }\n  const container = group.addGroup({ name: type, visible, capture: true, action: type })\n  container?.addShape('rect', { attrs: lineStyle })\n  container?.addShape('rect', { attrs: handleStyle })\n  container?.addShape('circle', { attrs: circleStyle, action: type })\n  container?.addShape('text', { attrs: textStyle, action: type })\n}\n\nfunction getAttribute(cfg) {\n  const { style: { width, height, nameHeight, nameLineHeight, fontSize, descFontSize, descHeight, FillColor, FontColor, opacity = 1, stroke, strokeColor } } = cfg\n  const RectStyle = {\n    x: 0,\n    y: 0,\n    width,\n    height,\n    radius,\n    fill: FillColor,\n    cursor: 'pointer',\n    stroke: strokeColor,\n    lineWidth: stroke,\n    opacity\n  }\n  const TextStyle = {\n    x: paddingV,\n    y: paddingH,\n    text: cfg?.label,\n    fill: FontColor,\n    fontSize: fontSize,\n    textBaseline: textBaseline.top,\n    cursor: 'pointer',\n    fontWeight: 600,\n    lineHeight: nameLineHeight,\n    opacity\n  }\n  const DescWrapper = {\n    x: 0,\n    y: nameHeight,\n    width,\n    height: descHeight,\n    radius: [0, 0, radius, radius],\n    fill: \"rgba(255,255,255,0.3)\",\n    cursor: 'pointer',\n    stroke: 'transparent',\n    lineWidth: 2,\n    opacity\n  }\n  const DescText = {\n    x: paddingV,\n    y: paddingV + nameHeight,\n    text: cfg?.desc,\n    fill: FontColor,\n    fontSize: descFontSize,\n    textBaseline: textBaseline.top,\n    cursor: 'pointer',\n    lineHeight: paddingV + descFontSize,\n    opacity\n  }\n  return { RectStyle, TextStyle, DescWrapper, DescText }\n}\n\nfunction buildNode(cfg, group) {\n  const { RectStyle, TextStyle, DescWrapper, DescText } = getAttribute(cfg);\n  const { depth, collapse } = cfg\n  const container = group?.addShape('rect', { attrs: RectStyle, name: `wrapper`, zIndex: 0, draggable: depth > 0 }) as IShape\n  group?.addShape('text', { attrs: TextStyle, name: `title`, zIndex: 1, draggable: depth > 0 })\n  if (cfg.desc) {\n    group?.addShape('rect', { attrs: DescWrapper, name: `desc-wrapper`, zIndex: 0, draggable: depth > 0 })\n    group?.addShape('text', { attrs: DescText, name: `desc`, zIndex: 1, draggable: depth > 0 })\n  }\n  //  绘制操作按钮\n  drawHandleBtn(group, cfg, 'add')\n  if (cfg.children.length > 0 || cfg._children.length > 0) {\n    drawHandleBtn(group, cfg, collapse ? 'expand' : 'collapse')\n  }\n  return container\n}\nconst getNode = (group, name) => group.get('children').filter(t => t.get('name') === name)[0]\nconst getCollapseBtn = group => getNode(group, 'collapse')\nconst getWrapper = group => getNode(group, 'wrapper')\nconst getAddBtn = group => getNode(group, 'add')\nlet timer;\nfunction handleNodeHover(state, node) {\n  // 鼠标移上显示折叠按钮\n  if (isCurrentEdit.value) return\n  const group = node.getContainer();\n  const isCurrentSelected = node.hasState('selected');\n  let collapseBtn = getCollapseBtn(group)\n  const visible = state && !isCurrentSelected;\n  collapseBtn && collapseBtn[visible ? 'show' : 'hide']()\n  // 节点hover状态\n  let wrapper = getWrapper(group)\n  let hoverColor = 'transparent';\n  if (state && !isCurrentSelected) hoverColor = hoverStrokeColor.value;\n\n  //  如果当前节点不是选中状态才操作hover状态\n  if (!isCurrentSelected) {\n    wrapper?.attr('stroke', hoverColor);\n  }\n}\n\nfunction handleNodeSelected(state, node) {\n  // 选中节点置于最上方\n  node[state ? 'toFront' : 'toBack']()\n  // 选中的节点显示添加按钮\n  const group = node.getContainer();\n  let addBtn = getAddBtn(group)\n  let collapseBtn = getCollapseBtn(group)\n  collapseBtn?.hide()\n  // 非折叠状态显示添加按钮\n  if (!node.get('model').collapse) {\n    addBtn?.[state ? 'show' : 'hide']()\n  }\n  if (isCurrentEdit.value) addBtn?.hide()\n  // 设置节点边框颜色\n  let wrapper = group.get('children').filter(t => t.get('name') === 'wrapper')[0]\n  wrapper?.attr('stroke', state ? activeStrokeColor.value : 'transparent')\n}\n\n// 根节点\nG6.registerNode(\n  'mindmap-node', {\n  draw(cfg, group): IShape {\n    const container = buildNode(cfg, group);\n    return container;\n  },\n  setState(name, state, node) {\n    if (name === 'hover') handleNodeHover(state, node)\n    if (name === 'selected') handleNodeSelected(state, node)\n  },\n  getAnchorPoints() {\n    return [\n      [0, 0.5],\n      [1, 0.5],\n    ];\n  },\n}\n);\nG6.registerEdge('hvh', {\n  draw(cfg, group) {\n    if (!cfg || !group) return\n    const startPoint = cfg.startPoint;\n    const endPoint = cfg.endPoint;\n    let dist = endPoint.y < startPoint.y ? 10 : -10;\n    if (endPoint.y === startPoint.y) {\n      dist = 0;\n    }\n    const shape = group.addShape('path', {\n      attrs: {\n        cursor: 'pointer',\n        stroke: branchColor.value,\n        lineWidth: branch.value,\n        opacity: cfg.style.opacity == null ? 1 : cfg.style.opacity,\n        path: [\n          ['M', startPoint.x, startPoint.y],\n          ['L', endPoint.x / 3 + (2 / 3) * (startPoint.x), startPoint.y], // 三分之一处\n          ['L', endPoint.x / 3 + (2 / 3) * (startPoint.x), startPoint.y + (endPoint.y - startPoint.y) + dist],\n          ['Q', endPoint.x / 3 + (2 / 3) * (startPoint.x), startPoint.y + (endPoint.y - startPoint.y), endPoint.x / 3 + (2 / 3) * (startPoint.x) + 10, endPoint.y], // 三分之二处\n          ['L', endPoint.x, endPoint.y],\n        ],\n      },\n      // must be assigned in G6 3.3 and later versions. it can be any value you want\n      name: 'path-shape',\n      zIndex: 0,\n    });\n    return shape;\n  },\n});\n","import G6 from \"@antv/g6\";\nimport { cancelAllSelect, edit, expand, findData, moveData, selectNode, getSelectedNodes, collapse, addData } from \"./methods\";\nimport {\n  branch,\n  branchColor,\n  globalFontSize,\n  globalTree,\n  maxFontCount,\n  paddingH,\n  radius,\n  themeColor,\n  lineType,\n  isCurrentEdit,\n  isDragging,\n  setIsDragging,\n  hotkeys\n} from \"../variable\";\nimport emitter from \"../mitt\";\nimport editInput from \"../editInput\";\nlet leaveEdgeTimer;\nG6.registerBehavior('edit-mindmap', {\n  selectNodeId: null,\n  dragNodeId: null,\n  nodePosition: {},\n  dragStatus: '',\n  upClientInfo: [],\n  getEvents() {\n    return {\n      'node:click': 'clickNode',\n      'node:dblclick': 'editNode',\n      'node:mouseover': 'hoverNode',\n      'node:mouseleave': 'clearHoverStatus',\n      'node:dragstart': 'dragStart',\n      'node:contextmenu': 'selectNode',\n      'keyup': 'keyup',\n      'canvas:click': 'clickCanvas'\n    };\n  },\n  clickCanvas(evt) {\n    cancelAllSelect()\n  },\n  clickNode(evt) {\n    const tree = evt.currentTarget;\n    const node = evt.item;\n    const model = evt.item.get('model');\n    const name = evt.target.get('action');\n    if (name === 'expand') {\n      expand(model.id)\n    } else if (name === 'collapse') {\n      collapse(model.id)\n    } else if (name === 'add') {\n      addData(model?.id as string, \"\", true)\n    } else if (node.hasState('selected')) {\n      // 判断如果当前节点时选中节点，那么编辑节点\n      edit(model.id)\n    } else {\n      selectNode(model.id, !model.isCurrentSelected)\n    }\n  },\n  selectNode(evt) {\n    const model = evt.item.get('model');\n    selectNode(model.id, !model.isCurrentSelected)\n  },\n  editNode(evt) {\n    const item = evt.item;\n    const model = item.get('model');\n    edit(model.id)\n  },\n  hoverNode(evt) {\n    const { currentTarget: tree, item: node } = evt\n    if (isDragging.value) return\n    tree.setItemState(node, 'hover', true)\n    node.toFront()\n    tree.paint();\n  },\n  clearHoverStatus(evt) {\n    let { currentTarget: tree, item: node } = evt\n    tree.setItemState(node, 'hover', false);\n    tree.paint();\n  },\n  dragStart(evt) {\n    // 拖拽的节点及其所有子节点设置drag state 为true\n    const { currentTarget: tree, item: node, clientX, clientY } = evt\n    const id = node.get('model').id;\n    setIsDragging(true)\n    this.dragNodeId = id\n    const _dragnode = tree.findById(this.dragNodeId)\n    //  拖拽开始的时候，需要将节点的hover状态取消掉\n    tree.setItemState(id, 'hover', false)\n    document.documentElement.style.cursor = 'grabbing'\n    tree.getNodes().forEach(node => {\n      const nodeId = node.get('id');\n      const { x: pointX, y: pointY, width, height } = node.getBBox()\n      let { x: clientX, y: clientY } = tree.getClientByPoint(pointX, pointY)\n      let model = node.get('model')\n      const ratio = tree.getZoom()\n      // 记录节点位置\n      this.nodePosition[nodeId] = {\n        clientX,\n        clientY,\n        width: width * ratio,\n        height: height * ratio,\n        depth: model.depth,\n        parentId: model.parentId,\n        sameLevel: model.depth === _dragnode.get('model').depth\n      }\n      // 修改拖拽节点及其所有子节点的样式\n      if (nodeId.indexOf(this.dragNodeId) === 0) {\n        tree.updateItem(node, {\n          // 节点的样式\n          style: {\n            opacity: 0.2\n          },\n        });\n        node.get('edges').forEach(edge => {\n          tree.updateItem(edge, {\n            // 节点的样式\n            style: {\n              opacity: 0.2\n            },\n          });\n        })\n      }\n    })\n    this.showDragDiv(clientX, clientY)\n    let ratio = tree.getZoom()\n    window.onmousemove = (ev) => this.dragNode.call(this, {\n      tree,\n      clientX: ev.clientX,\n      clientY: ev.clientY,\n      width: 40 * ratio / 2,\n      height: 20 * ratio / 2\n    })\n    window.onmouseup = (ev) => this.dragEnd.call(this, {\n      tree,\n      clientX: ev.clientX,\n      clientY: ev.clientY\n    })\n  },\n  dragNode({ tree, clientX, clientY, width, height }) {\n    if (!isDragging.value) return\n    let nodePosition = this.nodePosition\n    let nodes = []\n    for (let nodeId in nodePosition) {\n      let node = nodePosition[nodeId]\n      /**\n       * 完全碰撞： 符合条件即为两个节点完全重合，拖拽节点将成为重合节点的子级\n       * */\n      let size = (globalFontSize[node.depth] || 12) * maxFontCount + paddingH * 4 + width * 4; // 最大横向距离=最大节点宽度+两个拖拽节点的宽度\n      let parentNode = findData(node.parentId)\n      let firstNode = node\n      let lastNode = node\n      if (parentNode.children.length) {\n        firstNode = nodePosition[parentNode.children[0].id];\n        lastNode = nodePosition[parentNode.children[parentNode.children.length - 1].id];\n      }\n      let coditionH_inner = (clientX - width > node.clientX - width * 2) && (clientX + width < node.clientX + node.width + width * 2);\n      let coditionV_inner = (clientY - height > node.clientY - height * 2) && (clientY + height < node.clientY + node.height + height * 2);\n      let coditionH_outer = (clientX - width > node.clientX - width * 2) && (clientX + width < node.clientX + size + width * 2);\n      let coditionV_outer = (clientY - height > firstNode.clientY - height * 2) && (clientY + height < lastNode.clientY + lastNode.height + height * 2); // 所有节点的纵向区域\n      if (coditionH_inner && coditionV_inner) {\n        // 拖拽节点与树节点有重合部分\n        nodes.push({\n          nodeId: nodeId,\n          inner: true,\n          depth: node.depth,\n          index: +nodeId.split('-').pop(),\n          sameLevel: true,\n          parentId: node.parentId\n        })\n      } else if (coditionH_outer && coditionV_inner) {\n        //     超出节点但在最大节点宽度范围内，高度在节点范围内\n        nodes.push({\n          nodeId: nodeId,\n          inner: false,\n          depth: node.depth,\n          index: +nodeId.split('-').pop(),\n          sameLevel: false,\n          parentId: node.parentId\n        })\n      } else if (coditionH_inner && coditionV_outer && (clientX - width > node.clientX) && nodeId != node.parentId) {\n        // 拖拽节点在允许选中范围\n        nodes.push({\n          nodeId: nodeId,\n          inner: false,\n          depth: node.depth,\n          index: +nodeId.split('-').pop(),\n          sameLevel: true,\n          parentId: node.parentId\n        })\n      }\n    }\n    if (nodes.length) {\n      // 有重合节点,可能有多个符合条件的节点\n      let node = nodes.filter(node => node.inner || (!node.inner && !node.sameLevel)) as any\n      if (node.length > 1) {\n        node.sort((a, b) => {\n          if (a.depth === b.depth) {\n            return a.index - b.index\n          } else {\n            return b.depth - a.depth\n          }\n        })\n      }\n      if (nodes.length > 1) {\n        nodes.sort((a, b) => {\n          if (a.depth === b.depth) {\n            return a.index - b.index\n          } else {\n            return b.depth - a.depth\n          }\n        })\n      }\n      node = node.length ? node[0] : nodes[0]\n      let nodeId = node.sameLevel ? node.parentId : node.nodeId;\n      if (nodeId.indexOf(this.dragNodeId) != -1) {\n        cancelAllSelect()\n        this.selectNodeId = null\n        this.showDragDiv(clientX, clientY, false, null)\n        this.dragStatus = ''\n        return; // 如果是拖拽节点或者拖拽子级，直接返回\n      }\n      selectNode(nodeId, true)\n      this.selectNodeId = nodeId\n      this.showDragDiv(clientX, clientY, true, nodeId)\n      this.dragStatus = 'child'\n      this.upClientInfo = [clientX, clientY]\n    } else {\n      cancelAllSelect()\n      this.selectNodeId = null\n      this.showDragDiv(clientX, clientY, false, null)\n      this.dragStatus = ''\n    }\n  },\n  dragEnd({ tree }) {\n    if (!isDragging.value) return\n    setIsDragging(false)\n    document.documentElement.style.cursor = 'default'\n    this.hideDragDiv()\n    if (this.dragStatus !== '' && this.selectNodeId) {\n      const parentNode = tree.findDataById(this.selectNodeId)\n      let index = 0;\n      for (let i = 0, len = parentNode.children.length; i < len; i++) {\n        let node = parentNode.children[i];\n        if (node.id === this.dragNodeId) continue;\n        if (this.nodePosition[node.id].clientY < this.upClientInfo[1]) {\n          index++\n        } else {\n          break;\n        }\n      }\n      emitter.emit('onDragEnd', [findData(this.dragNodeId), findData(this.selectNodeId), index]);\n      moveData(this.selectNodeId, this.dragNodeId, index)\n    }\n    //    还原\n    tree.getNodes().forEach(node => {\n      const nodeId = node.get('id');\n      // 修改拖拽节点及其所有子节点的样式\n      tree.updateItem(node, {\n        // 节点的样式\n        style: {\n          opacity: 1\n        },\n      });\n      node.get('edges').forEach(edge => {\n        tree.updateItem(edge, {\n          // 节点的样式\n          style: {\n            opacity: 1\n          },\n        });\n      })\n    })\n    cancelAllSelect()\n    this.selectNodeId = null\n    this.dragStatus = ''\n    this.nodePosition = {}\n    window.onmousemove = null\n    window.onmouseup = null\n  },\n  showDragDiv(clientX, clientY, showLine, parentId) {\n    const tree = globalTree.value\n    const { x, y } = tree.getPointByClient(clientX, clientY);\n    const model = {\n      id: 'moveNode',\n      label: '',\n      x,\n      y,\n      type: 'rect',\n      zIndex: 3,\n      style: {\n        width: 40,\n        height: 20,\n        fill: themeColor.value,\n        radius: radius,\n        opacity: 0.6,\n        cursor: 'grabbing',\n      },\n    };\n    const edgeOption = {\n      id: 'moveNodeEdge',\n      source: parentId || '0',\n      target: 'moveNode',\n      type: lineType.value,\n      zIndex: 3,\n      style: {\n        stroke: branchColor.value,\n        lineWidth: branch.value,\n        opacity: showLine ? 0.6 : 0,\n        cursor: 'grabbing',\n      }\n    }\n    const moveNode = tree.getNodes().filter(item => item.get('id') === 'moveNode')\n    const moveEdge = tree.getEdges().filter(item => item.get('id') === 'moveNodeEdge')\n    if (moveNode.length && moveEdge.length) {\n      tree.updateItem(moveNode[0], model)\n      tree.updateItem(moveEdge[0], edgeOption);\n    } else {\n      tree.addItem('node', model);\n      tree.addItem('edge', edgeOption);\n    }\n    return { moveNode: moveNode[0] }\n  },\n  hideDragDiv() {\n    const tree = globalTree.value\n    const moveNode = tree.getNodes().filter(item => item.get('id') === 'moveNode')\n    if (moveNode.length) {\n      tree.removeItem(moveNode[0])\n    }\n  },\n  keyup(evt) {\n    // 判断如果是编辑节点的状态，不处理快捷键功能，直接返回\n    if (isCurrentEdit.value) return;\n    editInput.hideInput(); // 选中节点时显示选中节点的编辑内容，所以如果执行快捷键需要先将输入文本框隐藏\n    const { key, shiftKey, ctrlKey, altKey, metaKey } = evt;\n    let handler = hotkeys.value.filter(item => item.key === key)\n    if (!handler.length) return;\n    if (shiftKey || ctrlKey || altKey || metaKey) {\n      if (shiftKey) {\n        handler = handler.filter(item => item.control?.indexOf('shift') > -1)\n      }\n      if (ctrlKey) {\n        handler = handler.filter(item => item.control?.indexOf('ctrl') > -1)\n      }\n      if (metaKey) {\n        handler = handler.filter(item => item.control?.indexOf('cmd') > -1)\n      }\n      if (altKey) {\n        handler = handler.filter(item => item.control?.indexOf('alt') > -1)\n      }\n    } else if (handler.length === 1 && handler[0].control) {\n      handler = []\n    }\n    if (!handler.length) return;\n    evt.preventDefault(); // 禁止默认事件\n    handler[0].Event.call(this, getSelectedNodes())\n  }\n});\n\nG6.registerBehavior('double-finger-drag-canvas', {\n  getEvents: function getEvents() {\n    return {\n      wheel: 'onWheel',\n    };\n  },\n\n  onWheel: function onWheel(ev) {\n    const graph = globalTree.value;\n    if (ev.ctrlKey) {\n      const canvas = graph.get('canvas');\n      const point = canvas.getPointByClient(ev.clientX, ev.clientY);\n      let ratio = graph.getZoom();\n      if (ev.wheelDelta > 0) {\n        ratio = ratio + ratio * 0.05;\n      } else {\n        ratio = ratio - ratio * 0.05;\n      }\n      graph.zoomTo(ratio, {\n        x: point.x,\n        y: point.y,\n      });\n    } else {\n      const x = ev.deltaX || ev.movementX;\n      let y = ev.deltaY || ev.movementY;\n      if (!y && navigator.userAgent.indexOf('Firefox') > -1) y = (-ev.wheelDelta * 125) / 3\n      graph.translate(-x, -y);\n    }\n    ev.preventDefault();\n  },\n});","import G6, { GraphData, TreeGraph, TreeGraphData } from \"@antv/g6\";\nimport IMData from \"../data\";\nimport contextMenu from '../menu'\nimport { NodeData, InputData } from \"../interface\";\nimport { mindmap, toolbar, tooltip } from \"../plugins\";\nimport {\n  branch,\n  branchColor,\n  changeBranch,\n  changeBranchColor, changeCenterBtn, changeDownloadBtn, changeFitBtn,\n  changeLeafFontColor,\n  changeLeafThemeColor,\n  changeRootFontColor, changeScaleRatio,\n  changeSubFontColor,\n  changeSubThemeColor,\n  changeThemeColor, changeTimetravel, globalTree, lineType, paddingH, paddingV, setGlobalTree, setLineType\n} from \"../variable\";\nimport './registerNode' // 自定义节点形状\nimport './registerBehavior'\nimport { INode } from \"@antv/g6-core/lib/interface/item\"; // 自定义交互\nconst {\n  Util\n} = G6;\n\ninterface Window {\n  mindTree?: TreeGraph;\n}\n\ninterface layoutConfig {\n  xGap?: number,\n  yGap?: number,\n  direction?: string,\n  sharpCorner?: boolean // 直角边框\n  branch?: number\n  branchColor?: string\n  themeColor?: string\n  rootFontColor?: string\n  subThemeColor?: string\n  subFontColor?: string\n  scaleExtent?: string\n  leafThemeColor?: string\n  leafFontColor?: string\n  scaleRatio?: number\n  tooltip?: boolean,\n  edit?: boolean,\n  drag?: boolean,\n  zoom?: boolean,\n  centerBtn?: boolean,\n  fitBtn?: boolean,\n  downloadBtn?: boolean,\n  timetravel?: boolean,\n  mindmap?: boolean,\n  addNodeBtn?: boolean,\n  collapseBtn?: boolean,\n  watchResize?: boolean,\n}\n\ninterface Variable {\n  branch?: number,\n  branchColor?: string,\n  rootFontColor?: string,\n  subFontColor?: string,\n  subThemeColor?: string,\n  themeColor?: string\n  timetravel?: boolean,\n  centerBtn?: boolean,\n  fitBtn?: boolean,\n  downloadBtn?: boolean\n  scaleRatio?: number\n  lineType?: string\n  leafThemeColor?: string\n  leafFontColor?: string\n}\n\nclass Tree {\n  container: HTMLElement | null\n  data: NodeData | GraphData | TreeGraphData | undefined\n  tree: TreeGraph | null\n\n  constructor(containerId: string, data: InputData | InputData[]) {\n    this.container = document.getElementById(containerId)\n    this.data = data\n    this.tree = null\n  }\n\n  createLayoutConfig(layoutConfig?: layoutConfig) {\n    if (layoutConfig) {\n      let {\n        branch,\n        branchColor,\n        rootFontColor,\n        subFontColor,\n        subThemeColor,\n        themeColor,\n        leafThemeColor,\n        leafFontColor,\n        timetravel,\n        centerBtn,\n        fitBtn,\n        downloadBtn,\n        scaleRatio\n      } = layoutConfig\n      this.changeVariable({\n        branch,\n        branchColor,\n        rootFontColor,\n        subFontColor,\n        subThemeColor,\n        themeColor,\n        timetravel,\n        centerBtn,\n        fitBtn,\n        downloadBtn,\n        scaleRatio,\n        leafThemeColor,\n        leafFontColor,\n        lineType: layoutConfig?.sharpCorner ? 'hvh' : 'cubic-horizontal'\n      })\n    }\n    const config = {\n      width: this.container?.scrollWidth,\n      height: this.container?.scrollHeight ?? 0 - 20,\n      layout: {\n        type: 'compactBox',\n        direction: 'H',\n        getHeight: (node: NodeData) => {\n          return node.style.height\n        },\n        getWidth: (node: NodeData) => {\n          return node.style.width\n        },\n        getVGap: () => {\n          return layoutConfig?.yGap || 10;\n        },\n        getHGap: () => {\n          return layoutConfig?.xGap || 30;\n        },\n        getSide: (node: INode) => {\n          return 'right';\n        },\n      },\n      defaultEdge: {\n        type: layoutConfig?.sharpCorner ? 'hvh' : 'cubic-horizontal',\n        style: {\n          lineWidth: branch.value,\n          stroke: branchColor.value\n        },\n      },\n      scaleRatio: layoutConfig?.scaleRatio || 1,\n      modes: {\n        default: [],\n        edit: ['edit-mindmap']\n      },\n      plugins: [] as any,\n      groupByTypes: false,\n    }\n    const plugins = [];\n    plugins.push(toolbar())\n    if (layoutConfig?.mindmap) {\n      plugins.push(mindmap())\n    }\n    if (layoutConfig?.edit) {\n      plugins.push(contextMenu())\n    }\n    config.plugins = plugins\n    return config\n  }\n\n  async init(layoutConfig?: layoutConfig) {\n    if (!this.container) return\n    const config = this.createLayoutConfig(layoutConfig)\n    const data = IMData.init(this.data instanceof Array ? this.data[0] : this.data, true);\n    const tree = new G6.TreeGraph({\n      ...config,\n      container: this.container,\n      animate: false,\n      renderer: 'canvas'\n    });\n    tree.data(data);\n    this.tree = tree\n    tree.layout()\n    tree.fitCenter()\n    tree.zoomTo(config.scaleRatio, {\n      x: tree.getWidth() / 2,\n      y: tree.getHeight() / 2\n    })\n    tree.setAutoPaint(true)\n    this.enableFeature(layoutConfig)\n    let global = window as Window\n    global.mindTree = tree\n    setGlobalTree(tree)\n    this.bindEvent(tree)\n    return tree;\n  }\n\n  changeSize(width, height) {\n    this.tree.changeSize(width, height)\n    this.tree.fitCenter()\n  }\n\n  bindEvent(tree) {\n\n  }\n\n  enableFeature(layoutConfig?: layoutConfig) {\n    if (layoutConfig?.tooltip) {\n      this.addBehaviors(tooltip)\n    }\n    if (layoutConfig?.edit) {\n      this.changeEditMode(true)\n    }\n    if (layoutConfig?.drag) {\n      this.addBehaviors('drag-canvas')\n    }\n    if (layoutConfig?.zoom) {\n      this.addBehaviors('double-finger-drag-canvas')\n    }\n  }\n\n  changeVariable({\n    branch,\n    branchColor,\n    rootFontColor,\n    subFontColor,\n    subThemeColor,\n    themeColor,\n    timetravel,\n    centerBtn,\n    fitBtn,\n    downloadBtn,\n    scaleRatio,\n    lineType,\n    leafThemeColor,\n    leafFontColor,\n  }: Variable) {\n    branch && changeBranch(branch)\n    branchColor && changeBranchColor(branchColor)\n    rootFontColor && changeRootFontColor(rootFontColor)\n    subFontColor && changeSubFontColor(subFontColor)\n    subThemeColor && changeSubThemeColor(subThemeColor)\n    themeColor && changeThemeColor(themeColor)\n    timetravel && changeTimetravel(timetravel)\n    centerBtn && changeCenterBtn(centerBtn)\n    fitBtn && changeFitBtn(fitBtn)\n    downloadBtn && changeDownloadBtn(downloadBtn)\n    scaleRatio && changeScaleRatio(scaleRatio)\n    lineType && setLineType(lineType)\n    leafThemeColor && changeLeafThemeColor(leafThemeColor)\n    leafFontColor && changeLeafFontColor(leafFontColor)\n  }\n\n  changeLayout(layoutConfig?: layoutConfig) {\n    const config = this.createLayoutConfig(layoutConfig)\n    this.tree?.updateLayout(config)\n  }\n\n  addBehaviors(behavior: any, modeType?: string) {\n    if (modeType) {\n      this.tree?.addBehaviors(behavior, modeType)\n    } else {\n      this.tree?.addBehaviors(behavior, 'default')\n      this.tree?.addBehaviors(behavior, 'edit')\n    }\n  }\n\n  removeBehaviors(behavior: any, modeType: string) {\n    if (modeType) {\n      this.tree?.removeBehaviors(behavior, modeType)\n    } else {\n      this.tree?.removeBehaviors(behavior, 'default')\n      this.tree?.removeBehaviors(behavior, 'edit')\n    }\n  }\n\n  changeEditMode(edit: boolean) {\n    if (edit) {\n      this.tree?.setMode('edit')\n    } else {\n      this.tree?.setMode('default')\n    }\n  }\n\n  reBuild(layoutConfig?: layoutConfig) {\n    this.tree?.destroy()\n    this.init(layoutConfig)\n  }\n\n  destroy() {\n    this.tree?.destroy()\n  }\n}\n\nexport default Tree\n","import { addData, addParent, addSibling, copy, deleteNode, paste, createACopy, cut, unDo, reDo, edit } from \"./methods\";\nvar isMac = function () {\n  return /macintosh|mac os x/i.test(navigator.userAgent);\n}();\nvar defaultHotKey = [\n  {\n    key: 'Enter',\n    label: '插入同级节点',\n    Event: function (selectedNodes) {\n      if (selectedNodes?.length != 1) return;\n      addSibling(selectedNodes[0], \"\", true)\n    },\n    name: 'add-sibling', // 右键菜单匹配值\n  },\n  {\n    key: 'Tab',\n    label: '插入子节点',\n    Event: function (selectedNodes) {\n      if (selectedNodes?.length != 1) return;\n      addData(selectedNodes[0], \"\", true)\n    },\n    name: 'add', // 右键菜单匹配值\n  },\n  {\n    key: 'Tab',\n    control: 'shift',\n    label: '插入父节点',\n    Event: function (selectedNodes) {\n      if (selectedNodes?.length != 1) return;\n      addParent(selectedNodes[0], \"\", true)\n    },\n    name: 'add-parent', // 右键菜单匹配值\n  },\n  {\n    key: 'c',\n    control: isMac ? 'cmd' : 'ctrl',\n    label: '复制',\n    Event: function (selectedNodes) {\n      if (!selectedNodes?.length) return;\n      copy(selectedNodes)\n    },\n    name: 'copy', // 右键菜单匹配值\n  },\n  {\n    key: 'x',\n    control: isMac ? 'cmd' : 'ctrl',\n    label: '剪切',\n    Event: function (selectedNodes) {\n      if (!selectedNodes?.length) return;\n      cut(selectedNodes)\n    },\n    name: 'cut', // 右键菜单匹配值\n  },\n  {\n    key: 'v',\n    control: isMac ? 'cmd' : 'ctrl',\n    label: '粘贴',\n    Event: function (selectedNodes) {\n      if (selectedNodes?.length != 1) return;\n      paste(selectedNodes[0])\n    },\n    name: 'paste', // 右键菜单匹配值\n  },\n  {\n    key: 'd',\n    control: isMac ? 'cmd' : 'ctrl',\n    label: '创建副本',\n    name: 'create-a-copy', // 右键菜单匹配值\n    Event: function (selectedNodes) {\n      if (selectedNodes?.length != 1) return;\n      createACopy(selectedNodes[0])\n    },\n  },\n  {\n    key: 'z',\n    control: isMac ? 'cmd' : 'ctrl',\n    label: '撤销操作',\n    name: 'revert', // 右键菜单匹配值\n    Event: function (selectedNodes) {\n      unDo()\n    },\n  },\n  {\n    key: 'y',\n    control: isMac ? 'cmd' : 'ctrl',\n    label: '重新操作',\n    name: 'redo', // 右键菜单匹配值\n    Event: function (selectedNodes) {\n      reDo()\n    },\n  },\n  {\n    key: 'Backspace',\n    label: '删除',\n    Event: function (selectedNodes) {\n      if (!selectedNodes?.length) return;\n      selectedNodes.forEach(nodeId => {\n        deleteNode(nodeId)\n      })\n    },\n    name: 'delete', // 右键菜单匹配值\n  },\n  {\n    key: ' ',\n    label: '编辑',\n    Event: function (selectedNodes) {\n      if (!selectedNodes?.length) return;\n      selectedNodes.forEach(nodeId => {\n        edit(nodeId)\n      })\n    },\n    name: 'edit', // 右键菜单匹配值\n  },\n]\nexport default defaultHotKey","\nexport default (sfc, props) => {\n  const target = sfc.__vccOpts || sfc;\n  for (const [key, val] of props) {\n    target[key] = val;\n  }\n  return target;\n}\n","<template>\n  <div>\n    <div id=\"mxs-mindmap_container\" class=\"mindmap-container\" />\n    <div id=\"node-input\" contenteditable=\"true\" />\n  </div>\n</template>\n<script lang=\"ts\">\nimport './css/Mindmap.scss'\nimport { PropType } from 'vue'\nimport Tree from './tree/tree'\nimport { tooltip } from \"./plugins\";\nimport { changeNodeMenuList, setGlobalTree, changehotKeyList } from \"./variable\";\nimport EditInput from './editInput'\nimport {\n  addData,\n  update,\n  deleteNode,\n  deleteOneNode,\n  expand,\n  collapse,\n  addSibling,\n  addParent,\n  findData\n} from './tree/methods'\nimport emitter from \"./mitt\";\nimport defaultHotKey from \"./tree/hotkeys\"\nconst isArray = (arg) => Object.prototype.toString.call(arg).toLowerCase().indexOf('array') > 5;\nconst isObject = (arg) => Object.prototype.toString.call(arg).toLowerCase() === '[object object]';\nlet tree;\nexport default {\n  props: {\n    // 脑图数据\n    modelValue: { required: true },\n    // 绘制所需的变量\n    xGap: { type: Number, default: 18 },\n    yGap: { type: Number, default: 84 },\n    branch: {\n      type: Number,\n      default: 1,\n      validator: (val: number) => val >= 1 && val <= 6\n    },\n    branchColor: {\n      type: String,\n    },\n    themeColor: { type: String, default: 'rgb(19,128,255)' },\n    rootFontColor: { type: String, default: '#fff' },\n    subThemeColor: { type: String, default: 'rgba(245,245,245,1)' },\n    subFontColor: { type: String, default: '#333' },\n    leafThemeColor: { type: String, default: 'transparent' },\n    leafFontColor: { type: String, default: '#333' },\n    direction: { type: String, default: 'LR' },\n    sharpCorner: Boolean,\n    scaleExtent: {\n      type: Object as PropType<[number, number]>,\n      default: [0.1, 8]\n    },\n    scaleRatio: { type: Number, default: 1 },\n    // 功能设置\n    tooltip: Boolean,\n    edit: Boolean,\n    drag: Boolean,\n    zoom: Boolean,\n    centerBtn: Boolean,\n    fitBtn: Boolean,\n    downloadBtn: Boolean,\n    timetravel: Boolean,\n    mindmap: Boolean,\n    addNodeBtn: Boolean,\n    collapseBtn: Boolean,\n    fisheye: Boolean,\n    watchResize: Boolean,\n    keyboard: Boolean,\n    ctm: Boolean,//  开启右键菜单\n    nodeMenu: Array, // 菜单配置\n    hotKey: Array, // 快捷键配置\n    // 钩子函数\n    onAdd: Function,\n    onExpand: Function,\n    onCollapse: Function,\n    onSelectedNode: Function,\n    onAfterEdit: Function,\n    onDragEnd: Function\n  },\n  mounted() {\n    this.$props.onAdd && emitter.on('onAdd', this.$props.onAdd)\n    this.$props.onExpand && emitter.on('onExpand', this.$props.onExpand)\n    this.$props.onCollapse && emitter.on('onCollapse', this.$props.onCollapse)\n    this.$props.onSelectedNode && emitter.on('onSelectedNode', this.$props.onSelectedNode)\n    this.$props.onAfterEdit && emitter.on('onAfterEdit', this.$props.onAfterEdit)\n    this.$props.onDragEnd && emitter.on('onDragEnd', this.$props.onDragEnd)\n    this.changeCanvasSize()\n    window.addEventListener(\"resize\", this.changeCanvasSize)\n  },\n  beforeUnmount() {\n    this.$props.onAdd && emitter.off('onAdd', this.$props.onAdd)\n    this.$props.onExpand && emitter.off('onExpand', this.$props.onExpand)\n    this.$props.onCollapse && emitter.off('onCollapse', this.$props.onCollapse)\n    this.$props.onSelectedNode && emitter.off('onSelectedNode', this.$props.onSelectedNode)\n    this.$props.onAfterEdit && emitter.off('onAfterEdit', this.$props.onAfterEdit)\n    this.$props.onDragEnd && emitter.off('onDragEnd', this.$props.onDragEnd)\n    window.removeEventListener(\"resize\", this.changeCanvasSize)\n    tree.destroy()\n    tree = null\n  },\n  methods: {\n    changeCanvasSize() {\n      this.$nextTick(() => {\n        const height = this.$el.parentNode.offsetHeight;\n        const width = this.$el.offsetWidth;\n        this.$el.style.height = height + 'px';\n        if (tree) {\n          tree.changeSize(width, height);\n        }\n      })\n    },\n    treeInit() {\n      const { modelValue } = this.$props\n      this.$nextTick(() => {\n        tree = new Tree('mxs-mindmap_container', modelValue)\n        tree.init(this.$props)\n      })\n    },\n    inputInit() {\n      EditInput.init('node-input')\n    },\n    add: addData,\n    update,\n    deleteNode,\n    deleteOneNode,\n    expand,\n    collapse,\n    addSibling,\n    addParent,\n    find: findData\n  },\n  watch: {\n    '$props.modelValue': {\n      handler(val) {\n        if (isArray(val) && !val.length) return;\n        if (isObject(val) && !Object.keys(val).length) return;\n        this.treeInit()\n        this.inputInit()\n      },\n      immediate: true\n    },\n    '$props.tooltip': {\n      handler(val) {\n        if (val) {\n          tree.addBehaviors(tooltip)\n        } else {\n          tree.removeBehaviors('tooltip')\n        }\n      }\n    },\n    '$props.edit': {\n      handler(val) {\n        tree.changeEditMode(val)\n      }\n    },\n    '$props.drag': {\n      handler(val) {\n        if (val) {\n          tree.addBehaviors('drag-canvas')\n        } else {\n          tree.removeBehaviors('drag-canvas')\n        }\n      },\n    },\n    '$props.zoom': {\n      handler(val) {\n        if (val) {\n          tree.addBehaviors('zoom-canvas')\n        } else {\n          tree.removeBehaviors('zoom-canvas')\n        }\n      }\n    },\n    centerBtn(val) {\n    },\n    fitBtn(val) {\n    },\n    downloadBtn(val) {\n    },\n    timetravel(val) {\n    },\n    mindmap(val) {\n    },\n    addNodeBtn(val) {\n    },\n    collapseBtn(val) {\n    },\n    fisheye(val) {\n    },\n    watchResize(val) {\n    },\n    nodeMenu: {\n      handler(val) {\n        changeNodeMenuList(val)\n      },\n      immediate: true\n    },\n    hotKey: {\n      handler(val) {\n        changehotKeyList(val.filter(i => i.enabled == null || i.enabled === true).map(item => {\n          return defaultHotKey.filter(i => i.name === item || i.name === item.name)[0] || { key: null }\n        }))\n      },\n      immediate: true\n    }\n  }\n}\n</script>\n"],"names":["IMData","History","EditInput","editInput","_createElementVNode","_createElementBlock"],"mappings":"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"}